text/x-haskell\n  language_id: 45\nCAP CDS:\n  type: programming\n  tm_scope: source.cds\n  color: \"#0092d1\"\n  aliases:\n  - cds\n  extensions:\n  - \".cds\"\n  ace_mode: text\n  language_id: 390788699\nCIL:\n  type: data\n  tm_scope: source.cil\n  extensions:\n  - \".cil\"\n  ace_mode: text\n  language_id: 29176339\nCLIPS:\n  type: programming\n  color: \"#00A300\"\n  extensions:\n  - \".clp\"\n  tm_scope: source.clips\n  ace_mode: text\n  language_id: 46\nCMake:\n  type: programming\n  color: \"#DA3434\"\n  extensions:\n  - \".cmake\"\n  - \".cmake.in\"\n  filenames:\n  - CMakeLists.txt\n  tm_scope: source.cmake\n  ace_mode: text\n  codemirror_mode: cmake\n  codemirror_mime_type: text/x-cmake\n  language_id: 47\nCOBOL:\n  type: programming\n  extensions:\n  - \".cob\"\n  - \".cbl\"\n  - \".ccp\"\n  - \".cobol\"\n  - \".cpy\"\n  tm_scope: source.cobol\n  ace_mode: cobol\n  codemirror_mode: cobol\n  codemirror_mime_type: text/x-cobol\n  language_id: 48\nCODEOWNERS:\n  type: data\n  filenames:\n  - CODEOWNERS\n  tm_scope: text.codeowners\n  ace_mode: gitignore\n  language_id: 321684729\nCOLLADA:\n  type: data\n  color: \"#F1A42B\"\n  extensions:\n  - \".dae\"\n  tm_scope: text.xml\n  ace_mode: xml\n  codemirror_mode: xml\n  codemirror_mime_type: text/xml\n  language_id: 49\nCSON:\n  type: data\n  color: \"#244776\"\n  tm_scope: source.coffee\n  ace_mode: coffee\n  codemirror_mode: coffeescript\n  codemirror_mime_type: text/x-coffeescript\n  extensions:\n  - \".cson\"\n  language_id: 424\nCSS:\n  type: markup\n  tm_scope: source.css\n  ace_mode: css\n  codemirror_mode: css\n  codemirror_mime_type: text/css\n  color: \"#563d7c\"\n  extensions:\n  - \".css\"\n  language_id: 50\nCSV:\n  type: data\n  color: \"#237346\"\n  ace_mode: text\n  tm_scope: none\n  extensions:\n  - \".csv\"\n  language_id: 51\nCUE:\n  type: programming\n  extensions:\n  - \".cue\"\n  tm_scope: source.cue\n  ace_mode: text\n  color: \"#5886E1\"\n  language_id: 356063509\nCWeb:\n  type: programming\n  color: \"#00007a\"\n  extensions:\n  - \".w\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 657332628\nCabal Config:\n  type: data\n  color: \"#483465\"\n  aliases:\n  - Cabal\n  extensions:\n  - \".cabal\"\n  filenames:\n  - cabal.config\n  - cabal.project\n  ace_mode: haskell\n  codemirror_mode: haskell\n  codemirror_mime_type: text/x-haskell\n  tm_scope: source.cabal\n  language_id: 677095381\nCaddyfile:\n  type: data\n  color: \"#22b638\"\n  aliases:\n  - Caddy\n  extensions:\n  - \".caddyfile\"\n  filenames:\n  - Caddyfile\n  ace_mode: text\n  tm_scope: source.Caddyfile\n  language_id: 615465151\nCadence:\n  type: programming\n  color: \"#00ef8b\"\n  ace_mode: text\n  tm_scope: source.cadence\n  extensions:\n  - \".cdc\"\n  language_id: 270184138\nCairo:\n  type: programming\n  color: \"#ff4a48\"\n  ace_mode: text\n  tm_scope: source.cairo\n  extensions:\n  - \".cairo\"\n  group: Cairo\n  language_id: 620599567\nCairo Zero:\n  type: programming\n  color: \"#ff4a48\"\n  ace_mode: text\n  tm_scope: source.cairo0\n  extensions:\n  - \".cairo\"\n  group: Cairo\n  language_id: 891399890\nCameLIGO:\n  type: programming\n  color: \"#3be133\"\n  extensions:\n  - \".mligo\"\n  tm_scope: source.mligo\n  ace_mode: ocaml\n  codemirror_mode: mllike\n  codemirror_mime_type: text/x-ocaml\n  group: LigoLANG\n  language_id: 829207807\nCap'n Proto:\n  type: programming\n  color: \"#c42727\"\n  tm_scope: source.capnp\n  extensions:\n  - \".capnp\"\n  ace_mode: text\n  language_id: 52\nCarbon:\n  type: programming\n  color: \"#222222\"\n  extensions:\n  - \".carbon\"\n  ace_mode: golang\n  codemirror_mode: go\n  codemirror_mime_type: text/x-go\n  tm_scope: source.v\n  language_id: 55627273\nCartoCSS:\n  type: programming\n  aliases:\n  - Carto\n  extensions:\n  - \".mss\"\n  ace_mode: text\n  tm_scope: source.css.mss\n  language_id: 53\nCeylon:\n  type: programming\n  color: \"#dfa535\"\n  extensions:\n  - \".ceylon\"\n  tm_scope: source.ceylon\n  ace_mode: text\n  language_id: 54\nChapel:\n  type: programming\n  color: \"#8dc63f\"\n  aliases:\n  - chpl\n  extensions:\n  - \".chpl\"\n  tm_scope: source.chapel\n  ace_mode: text\n  language_id: 55\nCharity:\n  type: programming\n  extensions:\n  - \".ch\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 56\nChecksums:\n  type: data\n  tm_scope: text.checksums\n  aliases:\n  - checksum\n  - hash\n  - hashes\n  - sum\n  - sums\n  filenames:\n  - MD5SUMS\n  - SHA1SUMS\n  - SHA256SUMS\n  - SHA256SUMS.txt\n  - SHA512SUMS\n  - checksums.txt\n  - cksums\n  - md5sum.txt\n  extensions:\n  - \".crc32\"\n  - \".md2\"\n  - \".md4\"\n  - \".md5\"\n  - \".sha1\"\n  - \".sha2\"\n  - \".sha224\"\n  - \".sha256\"\n  - \".sha256sum\"\n  - \".sha3\"\n  - \".sha384\"\n  - \".sha512\"\n  ace_mode: text\n  language_id: 372063053\nChucK:\n  type: programming\n  color: \"#3f8000\"\n  extensions:\n  - \".ck\"\n  tm_scope: source.java\n  ace_mode: java\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-java\n  language_id: 57\nCircom:\n  type: programming\n  ace_mode: text\n  extensions:\n  - \".circom\"\n  color: \"#707575\"\n  tm_scope: source.circom\n  language_id: 1042332086\nCirru:\n  type: programming\n  color: \"#ccccff\"\n  tm_scope: source.cirru\n  ace_mode: cirru\n  extensions:\n  - \".cirru\"\n  language_id: 58\nClarion:\n  type: programming\n  color: \"#db901e\"\n  ace_mode: text\n  extensions:\n  - \".clw\"\n  tm_scope: source.clarion\n  language_id: 59\nClarity:\n  type: programming\n  color: \"#5546ff\"\n  ace_mode: lisp\n  extensions:\n  - \".clar\"\n  tm_scope: source.clar\n  language_id: 91493841\nClassic ASP:\n  type: programming\n  color: \"#6a40fd\"\n  tm_scope: text.html.asp\n  aliases:\n  - asp\n  extensions:\n  - \".asp\"\n  ace_mode: text\n  language_id: 8\nClean:\n  type: programming\n  color: \"#3F85AF\"\n  extensions:\n  - \".icl\"\n  - \".dcl\"\n  tm_scope: source.clean\n  ace_mode: text\n  language_id: 60\nClick:\n  type: programming\n  color: \"#E4E6F3\"\n  extensions:\n  - \".click\"\n  tm_scope: source.click\n  ace_mode: text\n  language_id: 61\nClojure:\n  type: programming\n  tm_scope: source.clojure\n  ace_mode: clojure\n  codemirror_mode: clojure\n  codemirror_mime_type: text/x-clojure\n  color: \"#db5855\"\n  extensions:\n  - \".clj\"\n  - \".bb\"\n  - \".boot\"\n  - \".cl2\"\n  - \".cljc\"\n  - \".cljs\"\n  - \".cljs.hl\"\n  - \".cljscm\"\n  - \".cljx\"\n  - \".hic\"\n  filenames:\n  - riemann.config\n  interpreters:\n  - bb\n  language_id: 62\nClosure Templates:\n  type: markup\n  color: \"#0d948f\"\n  ace_mode: soy_template\n  codemirror_mode: soy\n  codemirror_mime_type: text/x-soy\n  aliases:\n  - soy\n  extensions:\n  - \".soy\"\n  tm_scope: text.html.soy\n  language_id: 357046146\nCloud Firestore Security Rules:\n  type: data\n  color: \"#FFA000\"\n  ace_mode: less\n  codemirror_mode: css\n  codemirror_mime_type: text/css\n  tm_scope: source.firestore\n  filenames:\n  - firestore.rules\n  language_id: 407996372\nCoNLL-U:\n  type: data\n  extensions:\n  - \".conllu\"\n  - \".conll\"\n  tm_scope: text.conllu\n  ace_mode: text\n  aliases:\n  - CoNLL\n  - CoNLL-X\n  language_id: 421026389\nCodeQL:\n  type: programming\n  color: \"#140f46\"\n  extensions:\n  - \".ql\"\n  - \".qll\"\n  tm_scope: source.ql\n  ace_mode: text\n  language_id: 424259634\n  aliases:\n  - ql\nCoffeeScript:\n  type: programming\n  tm_scope: source.coffee\n  ace_mode: coffee\n  codemirror_mode: coffeescript\n  codemirror_mime_type: text/x-coffeescript\n  color: \"#244776\"\n  aliases:\n  - coffee\n  - coffee-script\n  extensions:\n  - \".coffee\"\n  - \"._coffee\"\n  - \".cake\"\n  - \".cjsx\"\n  - \".iced\"\n  filenames:\n  - Cakefile\n  interpreters:\n  - coffee\n  language_id: 63\nColdFusion:\n  type: programming\n  ace_mode: coldfusion\n  color: \"#ed2cd6\"\n  aliases:\n  - cfm\n  - cfml\n  - coldfusion html\n  extensions:\n  - \".cfm\"\n  - \".cfml\"\n  tm_scope: text.html.cfm\n  language_id: 64\nColdFusion CFC:\n  type: programming\n  color: \"#ed2cd6\"\n  group: ColdFusion\n  ace_mode: coldfusion\n  aliases:\n  - cfc\n  extensions:\n  - \".cfc\"\n  tm_scope: source.cfscript\n  language_id: 65\nCommon Lisp:\n  type: programming\n  tm_scope: source.commonlisp\n  color: \"#3fb68b\"\n  aliases:\n  - lisp\n  extensions:\n  - \".lisp\"\n  - \".asd\"\n  - \".cl\"\n  - \".l\"\n  - \".lsp\"\n  - \".ny\"\n  - \".podsl\"\n  - \".sexp\"\n  interpreters:\n  - lisp\n  - sbcl\n  - ccl\n  - clisp\n  - ecl\n  ace_mode: lisp\n  codemirror_mode: commonlisp\n  codemirror_mime_type: text/x-common-lisp\n  language_id: 66\nCommon Workflow Language:\n  aliases:\n  - cwl\n  type: programming\n  ace_mode: yaml\n  codemirror_mode: yaml\n  codemirror_mime_type: text/x-yaml\n  extensions:\n  - \".cwl\"\n  interpreters:\n  - cwl-runner\n  color: \"#B5314C\"\n  tm_scope: source.cwl\n  language_id: 988547172\nComponent Pascal:\n  type: programming\n  color: \"#B0CE4E\"\n  extensions:\n  - \".cp\"\n  - \".cps\"\n  tm_scope: source.pascal\n  ace_mode: pascal\n  codemirror_mode: pascal\n  codemirror_mime_type: text/x-pascal\n  language_id: 67\nCool:\n  type: programming\n  extensions:\n  - \".cl\"\n  tm_scope: source.cool\n  ace_mode: text\n  language_id: 68\nCoq:\n  type: programming\n  color: \"#d0b68c\"\n  extensions:\n  - \".coq\"\n  - \".v\"\n  tm_scope: source.coq\n  ace_mode: text\n  language_id: 69\nCpp-ObjDump:\n  type: data\n  extensions:\n  - \".cppobjdump\"\n  - \".c++-objdump\"\n  - \".c++objdump\"\n  - \".cpp-objdump\"\n  - \".cxx-objdump\"\n  tm_scope: objdump.x86asm\n  aliases:\n  - c++-objdump\n  ace_mode: assembly_x86\n  language_id: 70\nCreole:\n  type: prose\n  wrap: true\n  extensions:\n  - \".creole\"\n  tm_scope: text.html.creole\n  ace_mode: text\n  language_id: 71\nCrystal:\n  type: programming\n  color: \"#000100\"\n  extensions:\n  - \".cr\"\n  ace_mode: ruby\n  codemirror_mode: crystal\n  codemirror_mime_type: text/x-crystal\n  tm_scope: source.crystal\n  interpreters:\n  - crystal\n  language_id: 72\nCsound:\n  type: programming\n  color: \"#1a1a1a\"\n  aliases:\n  - csound-orc\n  extensions:\n  - \".orc\"\n  - \".udo\"\n  tm_scope: source.csound\n  ace_mode: csound_orchestra\n  language_id: 73\nCsound Document:\n  type: programming\n  color: \"#1a1a1a\"\n  aliases:\n  - csound-csd\n  extensions:\n  - \".csd\"\n  tm_scope: source.csound-document\n  ace_mode: csound_document\n  language_id: 74\nCsound Score:\n  type: programming\n  color: \"#1a1a1a\"\n  aliases:\n  - csound-sco\n  extensions:\n  - \".sco\"\n  tm_scope: source.csound-score\n  ace_mode: csound_score\n  language_id: 75\nCuda:\n  type: programming\n  extensions:\n  - \".cu\"\n  - \".cuh\"\n  tm_scope: source.cuda-c++\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-c++src\n  color: \"#3A4E3A\"\n  language_id: 77\nCue Sheet:\n  type: data\n  extensions:\n  - \".cue\"\n  tm_scope: source.cuesheet\n  ace_mode: text\n  language_id: 942714150\nCurry:\n  type: programming\n  color: \"#531242\"\n  extensions:\n  - \".curry\"\n  tm_scope: source.curry\n  ace_mode: haskell\n  language_id: 439829048\nCycript:\n  type: programming\n  extensions:\n  - \".cy\"\n  tm_scope: source.js\n  ace_mode: javascript\n  codemirror_mode: javascript\n  codemirror_mime_type: text/javascript\n  language_id: 78\nCylc:\n  type: data\n  color: \"#00b3fd\"\n  extensions:\n  - \".cylc\"\n  filenames:\n  - suite.rc\n  tm_scope: source.cylc\n  ace_mode: ini\n  group: INI\n  language_id: 476447814\nCypher:\n  type: programming\n  color: \"#34c0eb\"\n  extensions:\n  - \".cyp\"\n  - \".cypher\"\n  tm_scope: source.cypher\n  ace_mode: text\n  language_id: 850806976\nCython:\n  type: programming\n  color: \"#fedf5b\"\n  extensions:\n  - \".pyx\"\n  - \".pxd\"\n  - \".pxi\"\n  aliases:\n  - pyrex\n  tm_scope: source.cython\n  ace_mode: text\n  codemirror_mode: python\n  codemirror_mime_type: text/x-cython\n  language_id: 79\nD:\n  type: programming\n  color: \"#ba595e\"\n  aliases:\n  - Dlang\n  extensions:\n  - \".d\"\n  - \".di\"\n  tm_scope: source.d\n  ace_mode: d\n  codemirror_mode: d\n  codemirror_mime_type: text/x-d\n  language_id: 80\nD-ObjDump:\n  type: data\n  extensions:\n  - \".d-objdump\"\n  tm_scope: objdump.x86asm\n  ace_mode: assembly_x86\n  language_id: 81\nD2:\n  type: markup\n  color: \"#526ee8\"\n  extensions:\n  - \".d2\"\n  aliases:\n  - d2lang\n  tm_scope: source.d2\n  ace_mode: text\n  language_id: 37531557\nDIGITAL Command Language:\n  type: programming\n  aliases:\n  - dcl\n  extensions:\n  - \".com\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 82\nDM:\n  type: programming\n  color: \"#447265\"\n  extensions:\n  - \".dm\"\n  aliases:\n  - byond\n  tm_scope: source.dm\n  ace_mode: c_cpp\n  language_id: 83\nDNS Zone:\n  type: data\n  extensions:\n  - \".zone\"\n  - \".arpa\"\n  tm_scope: text.zone_file\n  ace_mode: text\n  language_id: 84\nDTrace:\n  type: programming\n  aliases:\n  - dtrace-script\n  extensions:\n  - \".d\"\n  interpreters:\n  - dtrace\n  tm_scope: source.c\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csrc\n  language_id: 85\nDafny:\n  type: programming\n  color: \"#FFEC25\"\n  extensions:\n  - \".dfy\"\n  interpreters:\n  - dafny\n  tm_scope: text.dfy.dafny\n  ace_mode: text\n  language_id: 969323346\nDarcs Patch:\n  type: data\n  color: \"#8eff23\"\n  aliases:\n  - dpatch\n  extensions:\n  - \".darcspatch\"\n  - \".dpatch\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 86\nDart:\n  type: programming\n  color: \"#00B4AB\"\n  extensions:\n  - \".dart\"\n  interpreters:\n  - dart\n  tm_scope: source.dart\n  ace_mode: dart\n  codemirror_mode: dart\n  codemirror_mime_type: application/dart\n  language_id: 87\nDataWeave:\n  type: programming\n  color: \"#003a52\"\n  extensions:\n  - \".dwl\"\n  ace_mode: text\n  tm_scope: source.data-weave\n  language_id: 974514097\nDebian Package Control File:\n  type: data\n  color: \"#D70751\"\n  extensions:\n  - \".dsc\"\n  tm_scope: source.deb-control\n  ace_mode: text\n  language_id: 527438264\nDenizenScript:\n  type: programming\n  color: \"#FBEE96\"\n  ace_mode: yaml\n  codemirror_mode: yaml\n  codemirror_mime_type: text/x-yaml\n  extensions:\n  - \".dsc\"\n  tm_scope: source.denizenscript\n  language_id: 435000929\nDhall:\n  type: programming\n  color: \"#dfafff\"\n  extensions:\n  - \".dhall\"\n  tm_scope: source.haskell\n  ace_mode: haskell\n  codemirror_mode: haskell\n  codemirror_mime_type: text/x-haskell\n  language_id: 793969321\nDiff:\n  type: data\n  extensions:\n  - \".diff\"\n  - \".patch\"\n  aliases:\n  - udiff\n  tm_scope: source.diff\n  ace_mode: diff\n  codemirror_mode: diff\n  codemirror_mime_type: text/x-diff\n  language_id: 88\nDirectX 3D File:\n  type: data\n  color: \"#aace60\"\n  extensions:\n  - \".x\"\n  ace_mode: text\n  tm_scope: none\n  language_id: 201049282\nDockerfile:\n  type: programming\n  aliases:\n  - Containerfile\n  color: \"#384d54\"\n  tm_scope: source.dockerfile\n  extensions:\n  - \".dockerfile\"\n  filenames:\n  - Containerfile\n  - Dockerfile\n  ace_mode: dockerfile\n  codemirror_mode: dockerfile\n  codemirror_mime_type: text/x-dockerfile\n  language_id: 89\nDogescript:\n  type: programming\n  color: \"#cca760\"\n  extensions:\n  - \".djs\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 90\nDotenv:\n  type: data\n  color: \"#e5d559\"\n  extensions:\n  - \".env\"\n  filenames:\n  - \".env\"\n  - \".env.ci\"\n  - \".env.dev\"\n  - \".env.development\"\n  - \".env.development.local\"\n  - \".env.example\"\n  - \".env.local\"\n  - \".env.prod\"\n  - \".env.production\"\n  - \".env.sample\"\n  - \".env.staging\"\n  - \".env.test\"\n  - \".env.testing\"\n  tm_scope: source.dotenv\n  ace_mode: text\n  language_id: 111148035\nDune:\n  type: programming\n  ace_mode: lisp\n  filenames:\n  - dune-project\n  tm_scope: source.dune\n  color: \"#89421e\"\n  language_id: 754574151\nDylan:\n  type: programming\n  color: \"#6c616e\"\n  extensions:\n  - \".dylan\"\n  - \".dyl\"\n  - \".intr\"\n  - \".lid\"\n  tm_scope: source.dylan\n  ace_mode: text\n  codemirror_mode: dylan\n  codemirror_mime_type: text/x-dylan\n  language_id: 91\nE:\n  type: programming\n  color: \"#ccce35\"\n  extensions:\n  - \".e\"\n  interpreters:\n  - rune\n  tm_scope: none\n  ace_mode: text\n  language_id: 92\nE-mail:\n  type: data\n  aliases:\n  - email\n  - eml\n  - mail\n  - mbox\n  extensions:\n  - \".eml\"\n  - \".mbox\"\n  tm_scope: text.eml.basic\n  ace_mode: text\n  codemirror_mode: mbox\n  codemirror_mime_type: application/mbox\n  language_id: 529653389\nEBNF:\n  type: data\n  extensions:\n  - \".ebnf\"\n  tm_scope: source.ebnf\n  ace_mode: text\n  codemirror_mode: ebnf\n  codemirror_mime_type: text/x-ebnf\n  language_id: 430\nECL:\n  type: programming\n  color: \"#8a1267\"\n  extensions:\n  - \".ecl\"\n  - \".eclxml\"\n  tm_scope: source.ecl\n  ace_mode: text\n  codemirror_mode: ecl\n  codemirror_mime_type: text/x-ecl\n  language_id: 93\nECLiPSe:\n  type: programming\n  color: \"#001d9d\"\n  group: Prolog\n  extensions:\n  - \".ecl\"\n  tm_scope: source.prolog.eclipse\n  ace_mode: prolog\n  language_id: 94\nEJS:\n  type: markup\n  color: \"#a91e50\"\n  extensions:\n  - \".ejs\"\n  - \".ect\"\n  - \".ejs.t\"\n  - \".jst\"\n  tm_scope: text.html.js\n  ace_mode: ejs\n  language_id: 95\nEQ:\n  type: programming\n  color: \"#a78649\"\n  extensions:\n  - \".eq\"\n  tm_scope: source.cs\n  ace_mode: csharp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csharp\n  language_id: 96\nEagle:\n  type: data\n  extensions:\n  - \".sch\"\n  - \".brd\"\n  tm_scope: text.xml\n  ace_mode: xml\n  codemirror_mode: xml\n  codemirror_mime_type: text/xml\n  language_id: 97\nEarthly:\n  type: programming\n  aliases:\n  - Earthfile\n  color: \"#2af0ff\"\n  tm_scope: source.earthfile\n  ace_mode: text\n  filenames:\n  - Earthfile\n  language_id: 963512632\nEasybuild:\n  type: data\n  color: \"#069406\"\n  group: Python\n  ace_mode: python\n  codemirror_mode: python\n  codemirror_mime_type: text/x-python\n  tm_scope: source.python\n  extensions:\n  - \".eb\"\n  language_id: 342840477\nEcere Projects:\n  type: data\n  color: \"#913960\"\n  group: JavaScript\n  extensions:\n  - \".epj\"\n  tm_scope: source.json\n  ace_mode: json\n  codemirror_mode: javascript\n  codemirror_mime_type: application/json\n  language_id: 98\nEcmarkup:\n  type: markup\n  color: \"#eb8131\"\n  group: HTML\n  extensions:\n  - \".html\"\n  tm_scope: text.html.ecmarkup\n  ace_mode: html\n  codemirror_mode: htmlmixed\n  codemirror_mime_type: text/html\n  aliases:\n  - ecmarkdown\n  language_id: 844766630\nEdge:\n  type: markup\n  color: \"#0dffe0\"\n  extensions:\n  - \".edge\"\n  tm_scope: text.html.edge\n  ace_mode: html\n  language_id: 460509620\nEdgeQL:\n  type: programming\n  color: \"#31A7FF\"\n  aliases:\n  - esdl\n  extensions:\n  - \".edgeql\"\n  - \".esdl\"\n  ace_mode: text\n  tm_scope: source.edgeql\n  language_id: 925235833\nEditorConfig:\n  type: data\n  color: \"#fff1f2\"\n  group: INI\n  extensions:\n  - \".editorconfig\"\n  filenames:\n  - \".editorconfig\"\n  aliases:\n  - editor-config\n  ace_mode: ini\n  codemirror_mode: properties\n  codemirror_mime_type: text/x-properties\n  tm_scope: source.editorconfig\n  language_id: 96139566\nEdje Data Collection:\n  type: data\n  extensions:\n  - \".edc\"\n  tm_scope: source.c++\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-c++src\n  language_id: 342840478\nEiffel:\n  type: programming\n  color: \"#4d6977\"\n  extensions:\n  - \".e\"\n  tm_scope: source.eiffel\n  ace_mode: eiffel\n  codemirror_mode: eiffel\n  codemirror_mime_type: text/x-eiffel\n  language_id: 99\nElixir:\n  type: programming\n  color: \"#6e4a7e\"\n  extensions:\n  - \".ex\"\n  - \".exs\"\n  tm_scope: source.elixir\n  ace_mode: elixir\n  filenames:\n  - mix.lock\n  interpreters:\n  - elixir\n  language_id: 100\nElm:\n  type: programming\n  color: \"#60B5CC\"\n  extensions:\n  - \".elm\"\n  tm_scope: source.elm\n  ace_mode: elm\n  codemirror_mode: elm\n  codemirror_mime_type: text/x-elm\n  language_id: 101\nElvish:\n  type: programming\n  ace_mode: text\n  extensions:\n  - \".elv\"\n  interpreters:\n  - elvish\n  tm_scope: source.elvish\n  color: \"#55BB55\"\n  language_id: 570996448\nElvish Transcript:\n  type: programming\n  group: Elvish\n  ace_mode: text\n  tm_scope: source.elvish-transcript\n  color: \"#55BB55\"\n  language_id: 452025714\nEmacs Lisp:\n  type: programming\n  tm_scope: source.emacs.lisp\n  color: \"#c065db\"\n  aliases:\n  - elisp\n  - emacs\n  filenames:\n  - \".abbrev_defs\"\n  - \".emacs\"\n  - \".emacs.desktop\"\n  - \".gnus\"\n  - \".spacemacs\"\n  - \".viper\"\n  - Cask\n  - Project.ede\n  - _emacs\n  - abbrev_defs\n  extensions:\n  - \".el\"\n  - \".emacs\"\n  - \".emacs.desktop\"\n  ace_mode: lisp\n  codemirror_mode: commonlisp\n  codemirror_mime_type: text/x-common-lisp\n  language_id: 102\nEmberScript:\n  type: programming\n  color: \"#FFF4F3\"\n  extensions:\n  - \".em\"\n  - \".emberscript\"\n  tm_scope: source.coffee\n  ace_mode: coffee\n  codemirror_mode: coffeescript\n  codemirror_mime_type: text/x-coffeescript\n  language_id: 103\nErlang:\n  type: programming\n  color: \"#B83998\"\n  extensions:\n  - \".erl\"\n  - \".app\"\n  - \".app.src\"\n  - \".es\"\n  - \".escript\"\n  - \".hrl\"\n  - \".xrl\"\n  - \".yrl\"\n  filenames:\n  - Emakefile\n  - rebar.config\n  - rebar.config.lock\n  - rebar.lock\n  tm_scope: source.erlang\n  ace_mode: erlang\n  codemirror_mode: erlang\n  codemirror_mime_type: text/x-erlang\n  interpreters:\n  - escript\n  language_id: 104\nEuphoria:\n  type: programming\n  color: \"#FF790B\"\n  extensions:\n  - \".e\"\n  - \".ex\"\n  interpreters:\n  - eui\n  - euiw\n  ace_mode: text\n  tm_scope: source.euphoria\n  language_id: 880693982\nF#:\n  type: programming\n  color: \"#b845fc\"\n  aliases:\n  - fsharp\n  extensions:\n  - \".fs\"\n  - \".fsi\"\n  - \".fsx\"\n  tm_scope: source.fsharp\n  ace_mode: text\n  codemirror_mode: mllike\n  codemirror_mime_type: text/x-fsharp\n  language_id: 105\nF*:\n  fs_name: Fstar\n  type: programming\n  color: \"#572e30\"\n  aliases:\n  - fstar\n  extensions:\n  - \".fst\"\n  - \".fsti\"\n  tm_scope: source.fstar\n  ace_mode: text\n  language_id: 336943375\nFIGlet Font:\n  type: data\n  color: \"#FFDDBB\"\n  aliases:\n  - FIGfont\n  extensions:\n  - \".flf\"\n  tm_scope: source.figfont\n  ace_mode: text\n  language_id: 686129783\nFIRRTL:\n  type: programming\n  color: \"#2f632f\"\n  extensions:\n  - \".fir\"\n  tm_scope: source.firrtl\n  ace_mode: text\n  language_id: 906694254\nFLUX:\n  type: programming\n  color: \"#88ccff\"\n  extensions:\n  - \".fx\"\n  - \".flux\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 106\nFactor:\n  type: programming\n  color: \"#636746\"\n  extensions:\n  - \".factor\"\n  filenames:\n  - \".factor-boot-rc\"\n  - \".factor-rc\"\n  tm_scope: source.factor\n  ace_mode: text\n  codemirror_mode: factor\n  codemirror_mime_type: text/x-factor\n  language_id: 108\nFancy:\n  type: programming\n  color: \"#7b9db4\"\n  extensions:\n  - \".fy\"\n  - \".fancypack\"\n  filenames:\n  - Fakefile\n  tm_scope: source.fancy\n  ace_mode: text\n  language_id: 109\nFantom:\n  type: programming\n  color: \"#14253c\"\n  extensions:\n  - \".fan\"\n  tm_scope: source.fan\n  ace_mode: text\n  language_id: 110\nFaust:\n  type: programming\n  color: \"#c37240\"\n  extensions:\n  - \".dsp\"\n  tm_scope: source.faust\n  ace_mode: text\n  language_id: 622529198\nFennel:\n  type: programming\n  tm_scope: source.fnl\n  ace_mode: text\n  color: \"#fff3d7\"\n  interpreters:\n  - fennel\n  extensions:\n  - \".fnl\"\n  language_id: 239946126\nFilebench WML:\n  type: programming\n  color: \"#F6B900\"\n  extensions:\n  - \".f\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 111\nFilterscript:\n  type: programming\n  group: RenderScript\n  extensions:\n  - \".fs\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 112\nFluent:\n  type: programming\n  color: \"#ffcc33\"\n  extensions:\n  - \".ftl\"\n  tm_scope: source.ftl\n  ace_mode: text\n  language_id: 206353404\nFormatted:\n  type: data\n  extensions:\n  - \".for\"\n  - \".eam.fs\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 113\nForth:\n  type: programming\n  color: \"#341708\"\n  extensions:\n  - \".fth\"\n  - \".4th\"\n  - \".f\"\n  - \".for\"\n  - \".forth\"\n  - \".fr\"\n  - \".frt\"\n  - \".fs\"\n  tm_scope: source.forth\n  ace_mode: forth\n  codemirror_mode: forth\n  codemirror_mime_type: text/x-forth\n  language_id: 114\nFortran:\n  group: Fortran\n  type: programming\n  color: \"#4d41b1\"\n  extensions:\n  - \".f\"\n  - \".f77\"\n  - \".for\"\n  - \".fpp\"\n  tm_scope: source.fortran\n  ace_mode: text\n  codemirror_mode: fortran\n  codemirror_mime_type: text/x-fortran\n  language_id: 107\nFortran Free Form:\n  group: Fortran\n  color: \"#4d41b1\"\n  type: programming\n  extensions:\n  - \".f90\"\n  - \".f03\"\n  - \".f08\"\n  - \".f95\"\n  tm_scope: source.fortran.modern\n  ace_mode: text\n  codemirror_mode: fortran\n  codemirror_mime_type: text/x-fortran\n  language_id: 761352333\nFreeBasic:\n  type: programming\n  color: \"#141AC9\"\n  extensions:\n  - \".bi\"\n  - \".bas\"\n  tm_scope: source.vbnet\n  aliases:\n  - fb\n  ace_mode: text\n  codemirror_mode: vb\n  codemirror_mime_type: text/x-vb\n  language_id: 472896659\nFreeMarker:\n  type: programming\n  color: \"#0050b2\"\n  aliases:\n  - ftl\n  extensions:\n  - \".ftl\"\n  tm_scope: text.html.ftl\n  ace_mode: ftl\n  language_id: 115\nFrege:\n  type: programming\n  color: \"#00cafe\"\n  extensions:\n  - \".fr\"\n  tm_scope: source.haskell\n  ace_mode: haskell\n  language_id: 116\nFuthark:\n  type: programming\n  color: \"#5f021f\"\n  extensions:\n  - \".fut\"\n  tm_scope: source.futhark\n  ace_mode: text\n  language_id: 97358117\nG-code:\n  type: programming\n  color: \"#D08CF2\"\n  extensions:\n  - \".g\"\n  - \".cnc\"\n  - \".gco\"\n  - \".gcode\"\n  tm_scope: source.gcode\n  ace_mode: gcode\n  language_id: 117\nGAML:\n  type: programming\n  color: \"#FFC766\"\n  extensions:\n  - \".gaml\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 290345951\nGAMS:\n  type: programming\n  color: \"#f49a22\"\n  extensions:\n  - \".gms\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 118\nGAP:\n  type: programming\n  color: \"#0000cc\"\n  extensions:\n  - \".g\"\n  - \".gap\"\n  - \".gd\"\n  - \".gi\"\n  - \".tst\"\n  tm_scope: source.gap\n  ace_mode: text\n  language_id: 119\nGCC Machine Description:\n  type: programming\n  color: \"#FFCFAB\"\n  extensions:\n  - \".md\"\n  tm_scope: source.lisp\n  ace_mode: lisp\n  codemirror_mode: commonlisp\n  codemirror_mime_type: text/x-common-lisp\n  language_id: 121\nGDB:\n  type: programming\n  extensions:\n  - \".gdb\"\n  - \".gdbinit\"\n  tm_scope: source.gdb\n  ace_mode: text\n  language_id: 122\nGDScript:\n  type: programming\n  color: \"#355570\"\n  extensions:\n  - \".gd\"\n  tm_scope: source.gdscript\n  ace_mode: text\n  language_id: 123\nGEDCOM:\n  type: data\n  color: \"#003058\"\n  ace_mode: text\n  extensions:\n  - \".ged\"\n  tm_scope: source.gedcom\n  language_id: 459577965\nGLSL:\n  type: programming\n  color: \"#5686a5\"\n  extensions:\n  - \".glsl\"\n  - \".fp\"\n  - \".frag\"\n  - \".frg\"\n  - \".fs\"\n  - \".fsh\"\n  - \".fshader\"\n  - \".geo\"\n  - \".geom\"\n  - \".glslf\"\n  - \".glslv\"\n  - \".gs\"\n  - \".gshader\"\n  - \".rchit\"\n  - \".rmiss\"\n  - \".shader\"\n  - \".tesc\"\n  - \".tese\"\n  - \".vert\"\n  - \".vrx\"\n  - \".vs\"\n  - \".vsh\"\n  - \".vshader\"\n  tm_scope: source.glsl\n  ace_mode: glsl\n  language_id: 124\nGN:\n  type: data\n  extensions:\n  - \".gn\"\n  - \".gni\"\n  interpreters:\n  - gn\n  filenames:\n  - \".gn\"\n  tm_scope: source.gn\n  ace_mode: python\n  codemirror_mode: python\n  codemirror_mime_type: text/x-python\n  language_id: 302957008\nGSC:\n  type: programming\n  color: \"#FF6800\"\n  extensions:\n  - \".gsc\"\n  - \".csc\"\n  - \".gsh\"\n  tm_scope: source.gsc\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csrc\n  language_id: 257856279\nGame Maker Language:\n  type: programming\n  color: \"#71b417\"\n  extensions:\n  - \".gml\"\n  tm_scope: source.c++\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-c++src\n  language_id: 125\nGemfile.lock:\n  type: data\n  color: \"#701516\"\n  searchable: false\n  tm_scope: source.gemfile-lock\n  ace_mode: text\n  filenames:\n  - Gemfile.lock\n  language_id: 907065713\nGemini:\n  type: prose\n  color: \"#ff6900\"\n  ace_mode: text\n  extensions:\n  - \".gmi\"\n  aliases:\n  - gemtext\n  wrap: true\n  tm_scope: source.gemini\n  language_id: 310828396\nGenero 4gl:\n  type: programming\n  color: \"#63408e\"\n  extensions:\n  - \".4gl\"\n  tm_scope: source.genero-4gl\n  ace_mode: text\n  language_id: 986054050\nGenero per:\n  type: markup\n  color: \"#d8df39\"\n  extensions:\n  - \".per\"\n  tm_scope: source.genero-per\n  ace_mode: text\n  language_id: 902995658\nGenie:\n  type: programming\n  ace_mode: text\n  extensions:\n  - \".gs\"\n  color: \"#fb855d\"\n  tm_scope: none\n  language_id: 792408528\nGenshi:\n  type: programming\n  color: \"#951531\"\n  extensions:\n  - \".kid\"\n  tm_scope: text.xml.genshi\n  aliases:\n  - xml+genshi\n  - xml+kid\n  ace_mode: xml\n  codemirror_mode: xml\n  codemirror_mime_type: text/xml\n  language_id: 126\nGentoo Ebuild:\n  type: programming\n  color: \"#9400ff\"\n  group: Shell\n  extensions:\n  - \".ebuild\"\n  tm_scope: source.shell\n  ace_mode: sh\n  codemirror_mode: shell\n  codemirror_mime_type: text/x-sh\n  language_id: 127\nGentoo Eclass:\n  type: programming\n  color: \"#9400ff\"\n  group: Shell\n  extensions:\n  - \".eclass\"\n  tm_scope: source.shell\n  ace_mode: sh\n  codemirror_mode: shell\n  codemirror_mime_type: text/x-sh\n  language_id: 128\nGerber Image:\n  type: data\n  color: \"#d20b00\"\n  aliases:\n  - rs-274x\n  extensions:\n  - \".gbr\"\n  - \".cmp\"\n  - \".gbl\"\n  - \".gbo\"\n  - \".gbp\"\n  - \".gbs\"\n  - \".gko\"\n  - \".gml\"\n  - \".gpb\"\n  - \".gpt\"\n  - \".gtl\"\n  - \".gto\"\n  - \".gtp\"\n  - \".gts\"\n  - \".ncl\"\n  - \".sol\"\n  interpreters:\n  - gerbv\n  - gerbview\n  tm_scope: source.gerber\n  ace_mode: text\n  language_id: 404627610\nGettext Catalog:\n  type: prose\n  aliases:\n  - pot\n  extensions:\n  - \".po\"\n  - \".pot\"\n  tm_scope: source.po\n  ace_mode: text\n  language_id: 129\nGherkin:\n  type: programming\n  extensions:\n  - \".feature\"\n  - \".story\"\n  tm_scope: text.gherkin.feature\n  aliases:\n  - cucumber\n  ace_mode: text\n  color: \"#5B2063\"\n  language_id: 76\nGit Attributes:\n  type: data\n  color: \"#F44D27\"\n  aliases:\n  - gitattributes\n  filenames:\n  - \".gitattributes\"\n  tm_scope: source.gitattributes\n  ace_mode: gitignore\n  codemirror_mode: shell\n  codemirror_mime_type: text/x-sh\n  language_id: 956324166\nGit Config:\n  type: data\n  color: \"#F44D27\"\n  group: INI\n  aliases:\n  - gitconfig\n  - gitmodules\n  extensions:\n  - \".gitconfig\"\n  filenames:\n  - \".gitconfig\"\n  - \".gitmodules\"\n  ace_mode: ini\n  codemirror_mode: properties\n  codemirror_mime_type: text/x-properties\n  tm_scope: source.gitconfig\n  language_id: 807968997\nGit Revision List:\n  type: data\n  color: \"#F44D27\"\n  aliases:\n  - Git Blame Ignore Revs\n  filenames:\n  - \".git-blame-ignore-revs\"\n  tm_scope: source.git-revlist\n  ace_mode: text\n  language_id: 461881235\nGleam:\n  type: programming\n  color: \"#ffaff3\"\n  ace_mode: text\n  extensions:\n  - \".gleam\"\n  tm_scope: source.gleam\n  language_id: 1054258749\nGlimmer JS:\n  type: programming\n  extensions:\n  - \".gjs\"\n  ace_mode: javascript\n  color: \"#F5835F\"\n  tm_scope: source.gjs\n  group: JavaScript\n  language_id: 5523150\nGlimmer TS:\n  type: programming\n  extensions:\n  - \".gts\"\n  ace_mode: typescript\n  color: \"#3178c6\"\n  tm_scope: source.gts\n  group: TypeScript\n  language_id: 95110458\nGlyph:\n  type: programming\n  color: \"#c1ac7f\"\n  extensions:\n  - \".glf\"\n  tm_scope: source.tcl\n  ace_mode: tcl\n  codemirror_mode: tcl\n  codemirror_mime_type: text/x-tcl\n  language_id: 130\nGlyph Bitmap Distribution Format:\n  type: data\n  extensions:\n  - \".bdf\"\n  tm_scope: source.bdf\n  ace_mode: text\n  language_id: 997665271\nGnuplot:\n  type: programming\n  color: \"#f0a9f0\"\n  extensions:\n  - \".gp\"\n  - \".gnu\"\n  - \".gnuplot\"\n  - \".p\"\n  - \".plot\"\n  - \".plt\"\n  interpreters:\n  - gnuplot\n  tm_scope: source.gnuplot\n  ace_mode: text\n  language_id: 131\nGo:\n  type: programming\n  color: \"#00ADD8\"\n  aliases:\n  - golang\n  extensions:\n  - \".go\"\n  tm_scope: source.go\n  ace_mode: golang\n  codemirror_mode: go\n  codemirror_mime_type: text/x-go\n  language_id: 132\nGo Checksums:\n  type: data\n  color: \"#00ADD8\"\n  aliases:\n  - go.sum\n  - go sum\n  - go.work.sum\n  - go work sum\n  filenames:\n  - go.sum\n  - go.work.sum\n  tm_scope: go.sum\n  ace_mode: text\n  language_id: 1054391671\nGo Module:\n  type: data\n  color: \"#00ADD8\"\n  aliases:\n  - go.mod\n  - go mod\n  filenames:\n  - go.mod\n  tm_scope: go.mod\n  ace_mode: text\n  language_id: 947461016\nGo Workspace:\n  type: data\n  color: \"#00ADD8\"\n  aliases:\n  - go.work\n  - go work\n  filenames:\n  - go.work\n  tm_scope: go.mod\n  ace_mode: text\n  language_id: 934546256\nGodot Resource:\n  type: data\n  color: \"#355570\"\n  extensions:\n  - \".gdnlib\"\n  - \".gdns\"\n  - \".tres\"\n  - \".tscn\"\n  filenames:\n  - project.godot\n  tm_scope: source.gdresource\n  ace_mode: text\n  language_id: 738107771\nGolo:\n  type: programming\n  color: \"#88562A\"\n  extensions:\n  - \".golo\"\n  tm_scope: source.golo\n  ace_mode: text\n  language_id: 133\nGosu:\n  type: programming\n  color: \"#82937f\"\n  extensions:\n  - \".gs\"\n  - \".gst\"\n  - \".gsx\"\n  - \".vark\"\n  tm_scope: source.gosu.2\n  ace_mode: text\n  language_id: 134\nGrace:\n  type: programming\n  color: \"#615f8b\"\n  extensions:\n  - \".grace\"\n  tm_scope: source.grace\n  ace_mode: text\n  language_id: 135\nGradle:\n  type: data\n  color: \"#02303a\"\n  extensions:\n  - \".gradle\"\n  tm_scope: source.groovy.gradle\n  ace_mode: text\n  language_id: 136\nGradle Kotlin DSL:\n  group: Gradle\n  type: data\n  color: \"#02303a\"\n  extensions:\n  - \".gradle.kts\"\n  ace_mode: text\n  tm_scope: source.kotlin\n  language_id: 432600901\nGrammatical Framework:\n  type: programming\n  aliases:\n  - gf\n  extensions:\n  - \".gf\"\n  color: \"#ff0000\"\n  tm_scope: source.gf\n  ace_mode: haskell\n  codemirror_mode: haskell\n  codemirror_mime_type: text/x-haskell\n  language_id: 137\nGraph Modeling Language:\n  type: data\n  extensions:\n  - \".gml\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 138\nGraphQL:\n  type: data\n  color: \"#e10098\"\n  extensions:\n  - \".graphql\"\n  - \".gql\"\n  - \".graphqls\"\n  tm_scope: source.graphql\n  ace_mode: text\n  language_id: 139\nGraphviz (DOT):\n  type: data\n  color: \"#2596be\"\n  tm_scope: source.dot\n  extensions:\n  - \".dot\"\n  - \".gv\"\n  ace_mode: text\n  language_id: 140\nGroovy:\n  type: programming\n  tm_scope: source.groovy\n  ace_mode: groovy\n  codemirror_mode: groovy\n  codemirror_mime_type: text/x-groovy\n  color: \"#4298b8\"\n  extensions:\n  - \".groovy\"\n  - \".grt\"\n  - \".gtpl\"\n  - \".gvy\"\n  interpreters:\n  - groovy\n  filenames:\n  - Jenkinsfile\n  language_id: 142\nGroovy Server Pages:\n  type: programming\n  color: \"#4298b8\"\n  group: Groovy\n  aliases:\n  - gsp\n  - java server page\n  extensions:\n  - \".gsp\"\n  tm_scope: text.html.jsp\n  ace_mode: jsp\n  codemirror_mode: htmlembedded\n  codemirror_mime_type: application/x-jsp\n  language_id: 143\nHAProxy:\n  type: data\n  color: \"#106da9\"\n  extensions:\n  - \".cfg\"\n  filenames:\n  - haproxy.cfg\n  tm_scope: source.haproxy-config\n  ace_mode: text\n  language_id: 366607477\nHCL:\n  type: programming\n  color: \"#844FBA\"\n  extensions:\n  - \".hcl\"\n  - \".nomad\"\n  - \".tf\"\n  - \".tfvars\"\n  - \".workflow\"\n  aliases:\n  - HashiCorp Configuration Language\n  - terraform\n  ace_mode: ruby\n  codemirror_mode: ruby\n  codemirror_mime_type: text/x-ruby\n  tm_scope: source.hcl\n  language_id: 144\nHLSL:\n  type: programming\n  color: \"#aace60\"\n  extensions:\n  - \".hlsl\"\n  - \".cginc\"\n  - \".fx\"\n  - \".fxh\"\n  - \".hlsli\"\n  ace_mode: text\n  tm_scope: source.hlsl\n  language_id: 145\nHOCON:\n  type: data\n  color: \"#9ff8ee\"\n  extensions:\n  - \".hocon\"\n  filenames:\n  - \".scalafix.conf\"\n  - \".scalafmt.conf\"\n  tm_scope: source.hocon\n  ace_mode: text\n  language_id: 679725279\nHTML:\n  type: markup\n  tm_scope: text.html.basic\n  ace_mode: html\n  codemirror_mode: htmlmixed\n  codemirror_mime_type: text/html\n  color: \"#e34c26\"\n  aliases:\n  - xhtml\n  extensions:\n  - \".html\"\n  - \".hta\"\n  - \".htm\"\n  - \".html.hl\"\n  - \".inc\"\n  - \".xht\"\n  - \".xhtml\"\n  language_id: 146\nHTML+ECR:\n  type: markup\n  color: \"#2e1052\"\n  tm_scope: text.html.ecr\n  group: HTML\n  aliases:\n  - ecr\n  extensions:\n  - \".ecr\"\n  ace_mode: text\n  codemirror_mode: htmlmixed\n  codemirror_mime_type: text/html\n  language_id: 148\nHTML+EEX:\n  type: markup\n  color: \"#6e4a7e\"\n  tm_scope: text.html.elixir\n  group: HTML\n  aliases:\n  - eex\n  - heex\n  - leex\n  extensions:\n  - \".eex\"\n  - \".html.heex\"\n  - \".html.leex\"\n  ace_mode: text\n  codemirror_mode: htmlmixed\n  codemirror_mime_type: text/html\n  language_id: 149\nHTML+ERB:\n  type: markup\n  color: \"#701516\"\n  tm_scope: text.html.erb\n  group: HTML\n  aliases:\n  - erb\n  - rhtml\n  - html+ruby\n  extensions:\n  - \".erb\"\n  - \".erb.deface\"\n  - \".rhtml\"\n  ace_mode: text\n  codemirror_mode: htmlembedded\n  codemirror_mime_type: application/x-erb\n  language_id: 150\nHTML+PHP:\n  type: markup\n  color: \"#4f5d95\"\n  tm_scope: text.html.php\n  group: HTML\n  extensions:\n  - \".phtml\"\n  ace_mode: php\n  codemirror_mode: php\n  codemirror_mime_type: application/x-httpd-php\n  language_id: 151\nHTML+Razor:\n  type: markup\n  color: \"#512be4\"\n  tm_scope: text.html.cshtml\n  group: HTML\n  aliases:\n  - razor\n  extensions:\n  - \".cshtml\"\n  - \".razor\"\n  ace_mode: razor\n  codemirror_mode: htmlmixed\n  codemirror_mime_type: text/html\n  language_id: 479039817\nHTTP:\n  type: data\n  color: \"#005C9C\"\n  extensions:\n  - \".http\"\n  tm_scope: source.httpspec\n  ace_mode: text\n  codemirror_mode: http\n  codemirror_mime_type: message/http\n  language_id: 152\nHXML:\n  type: data\n  color: \"#f68712\"\n  ace_mode: text\n  extensions:\n  - \".hxml\"\n  tm_scope: source.hxml\n  language_id: 786683730\nHack:\n  type: programming\n  ace_mode: php\n  codemirror_mode: php\n  codemirror_mime_type: application/x-httpd-php\n  extensions:\n  - \".hack\"\n  - \".hh\"\n  - \".hhi\"\n  - \".php\"\n  tm_scope: source.hack\n  color: \"#878787\"\n  language_id: 153\nHaml:\n  type: markup\n  color: \"#ece2a9\"\n  extensions:\n  - \".haml\"\n  - \".haml.deface\"\n  tm_scope: text.haml\n  ace_mode: haml\n  codemirror_mode: haml\n  codemirror_mime_type: text/x-haml\n  language_id: 154\nHandlebars:\n  type: markup\n  color: \"#f7931e\"\n  aliases:\n  - hbs\n  - htmlbars\n  extensions:\n  - \".handlebars\"\n  - \".hbs\"\n  tm_scope: text.html.handlebars\n  ace_mode: handlebars\n  language_id: 155\nHarbour:\n  type: programming\n  color: \"#0e60e3\"\n  extensions:\n  - \".hb\"\n  tm_scope: source.harbour\n  ace_mode: text\n  language_id: 156\nHaskell:\n  type: programming\n  color: \"#5e5086\"\n  extensions:\n  - \".hs\"\n  - \".hs-boot\"\n  - \".hsc\"\n  interpreters:\n  - runghc\n  - runhaskell\n  - runhugs\n  tm_scope: source.haskell\n  ace_mode: haskell\n  codemirror_mode: haskell\n  codemirror_mime_type: text/x-haskell\n  language_id: 157\nHaxe:\n  type: programming\n  ace_mode: haxe\n  codemirror_mode: haxe\n  codemirror_mime_type: text/x-haxe\n  color: \"#df7900\"\n  extensions:\n  - \".hx\"\n  - \".hxsl\"\n  tm_scope: source.hx\n  language_id: 158\nHiveQL:\n  type: programming\n  extensions:\n  - \".q\"\n  - \".hql\"\n  color: \"#dce200\"\n  tm_scope: source.hql\n  ace_mode: sql\n  language_id: 931814087\nHolyC:\n  type: programming\n  color: \"#ffefaf\"\n  extensions:\n  - \".hc\"\n  tm_scope: source.hc\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csrc\n  language_id: 928121743\nHosts File:\n  type: data\n  color: \"#308888\"\n  filenames:\n  - HOSTS\n  - hosts\n  - hosts.txt\n  aliases:\n  - hosts\n  tm_scope: source.hosts\n  ace_mode: text\n  language_id: 231021894\nHy:\n  type: programming\n  ace_mode: text\n  color: \"#7790B2\"\n  extensions:\n  - \".hy\"\n  interpreters:\n  - hy\n  aliases:\n  - hylang\n  tm_scope: source.hy\n  language_id: 159\nHyPhy:\n  type: programming\n  ace_mode: text\n  extensions:\n  - \".bf\"\n  tm_scope: none\n  language_id: 160\nIDL:\n  type: programming\n  color: \"#a3522f\"\n  extensions:\n  - \".pro\"\n  - \".dlm\"\n  tm_scope: source.idl\n  ace_mode: text\n  codemirror_mode: idl\n  codemirror_mime_type: text/x-idl\n  language_id: 161\nIGOR Pro:\n  type: programming\n  color: \"#0000cc\"\n  extensions:\n  - \".ipf\"\n  aliases:\n  - igor\n  - igorpro\n  tm_scope: source.igor\n  ace_mode: text\n  language_id: 162\nINI:\n  type: data\n  color: \"#d1dbe0\"\n  extensions:\n  - \".ini\"\n  - \".cfg\"\n  - \".cnf\"\n  - \".dof\"\n  - \".lektorproject\"\n  - \".prefs\"\n  - \".pro\"\n  - \".properties\"\n  - \".url\"\n  filenames:\n  - \".coveragerc\"\n  - \".flake8\"\n  - \".pylintrc\"\n  - HOSTS\n  - buildozer.spec\n  - hosts\n  - pylintrc\n  - vlcrc\n  tm_scope: source.ini\n  aliases:\n  - dosini\n  ace_mode: ini\n  codemirror_mode: properties\n  codemirror_mime_type: text/x-properties\n  language_id: 163\nIRC log:\n  type: data\n  aliases:\n  - irc\n  - irc logs\n  extensions:\n  - \".irclog\"\n  - \".weechatlog\"\n  tm_scope: none\n  ace_mode: text\n  codemirror_mode: mirc\n  codemirror_mime_type: text/mirc\n  language_id: 164\nIdris:\n  type: programming\n  color: \"#b30000\"\n  extensions:\n  - \".idr\"\n  - \".lidr\"\n  ace_mode: text\n  tm_scope: source.idris\n  language_id: 165\nIgnore List:\n  type: data\n  color: \"#000000\"\n  aliases:\n  - ignore\n  - gitignore\n  - git-ignore\n  extensions:\n  - \".gitignore\"\n  filenames:\n  - \".atomignore\"\n  - \".babelignore\"\n  - \".bzrignore\"\n  - \".coffeelintignore\"\n  - \".cvsignore\"\n  - \".dockerignore\"\n  - \".eleventyignore\"\n  - \".eslintignore\"\n  - \".gitignore\"\n  - \".markdownlintignore\"\n  - \".nodemonignore\"\n  - \".npmignore\"\n  - \".prettierignore\"\n  - \".stylelintignore\"\n  - \".vercelignore\"\n  - \".vscodeignore\"\n  - gitignore-global\n  - gitignore_global\n  ace_mode: gitignore\n  tm_scope: source.gitignore\n  codemirror_mode: shell\n  codemirror_mime_type: text/x-sh\n  language_id: 74444240\nImageJ Macro:\n  type: programming\n  color: \"#99AAFF\"\n  aliases:\n  - ijm\n  extensions:\n  - \".ijm\"\n  ace_mode: text\n  tm_scope: none\n  language_id: 575143428\nImba:\n  type: programming\n  color: \"#16cec6\"\n  extensions:\n  - \".imba\"\n  ace_mode: text\n  tm_scope: source.imba\n  language_id: 1057618448\nInform 7:\n  type: programming\n  wrap: true\n  extensions:\n  - \".ni\"\n  - \".i7x\"\n  tm_scope: source.inform7\n  aliases:\n  - i7\n  - inform7\n  ace_mode: text\n  language_id: 166\nInk:\n  type: programming\n  wrap: true\n  extensions:\n  - \".ink\"\n  tm_scope: source.ink\n  ace_mode: text\n  language_id: 838252715\nInno Setup:\n  type: programming\n  color: \"#264b99\"\n  extensions:\n  - \".iss\"\n  - \".isl\"\n  tm_scope: source.inno\n  ace_mode: text\n  language_id: 167\nIo:\n  type: programming\n  color: \"#a9188d\"\n  extensions:\n  - \".io\"\n  interpreters:\n  - io\n  tm_scope: source.io\n  ace_mode: io\n  language_id: 168\nIoke:\n  type: programming\n  color: \"#078193\"\n  extensions:\n  - \".ik\"\n  interpreters:\n  - ioke\n  tm_scope: source.ioke\n  ace_mode: text\n  language_id: 169\nIsabelle:\n  type: programming\n  color: \"#FEFE00\"\n  extensions:\n  - \".thy\"\n  tm_scope: source.isabelle.theory\n  ace_mode: text\n  language_id: 170\nIsabelle ROOT:\n  type: programming\n  color: \"#FEFE00\"\n  group: Isabelle\n  filenames:\n  - ROOT\n  tm_scope: source.isabelle.root\n  ace_mode: text\n  language_id: 171\nJ:\n  type: programming\n  color: \"#9EEDFF\"\n  extensions:\n  - \".ijs\"\n  interpreters:\n  - jconsole\n  tm_scope: source.j\n  ace_mode: text\n  language_id: 172\nJAR Manifest:\n  type: data\n  color: \"#b07219\"\n  filenames:\n  - MANIFEST.MF\n  tm_scope: source.yaml\n  ace_mode: text\n  language_id: 447261135\nJCL:\n  type: programming\n  color: \"#d90e09\"\n  extensions:\n  - \".jcl\"\n  tm_scope: source.jcl\n  ace_mode: text\n  language_id: 316620079\nJFlex:\n  type: programming\n  color: \"#DBCA00\"\n  group: Lex\n  extensions:\n  - \".flex\"\n  - \".jflex\"\n  tm_scope: source.jflex\n  ace_mode: text\n  language_id: 173\nJSON:\n  type: data\n  color: \"#292929\"\n  tm_scope: source.json\n  ace_mode: json\n  codemirror_mode: javascript\n  codemirror_mime_type: application/json\n  aliases:\n  - geojson\n  - jsonl\n  - sarif\n  - topojson\n  extensions:\n  - \".json\"\n  - \".4DForm\"\n  - \".4DProject\"\n  - \".avsc\"\n  - \".geojson\"\n  - \".gltf\"\n  - \".har\"\n  - \".ice\"\n  - \".JSON-tmLanguage\"\n  - \".jsonl\"\n  - \".mcmeta\"\n  - \".sarif\"\n  - \".tfstate\"\n  - \".tfstate.backup\"\n  - \".topojson\"\n  - \".webapp\"\n  - \".webmanifest\"\n  - \".yy\"\n  - \".yyp\"\n  filenames:\n  - \".all-contributorsrc\"\n  - \".arcconfig\"\n  - \".auto-changelog\"\n  - \".c8rc\"\n  - \".htmlhintrc\"\n  - \".imgbotconfig\"\n  - \".nycrc\"\n  - \".tern-config\"\n  - \".tern-project\"\n  - \".watchmanconfig\"\n  - MODULE.bazel.lock\n  - Pipfile.lock\n  - composer.lock\n  - deno.lock\n  - flake.lock\n  - mcmod.info\n  language_id: 174\nJSON with Comments:\n  type: data\n  color: \"#292929\"\n  group: JSON\n  tm_scope: source.js\n  ace_mode: javascript\n  codemirror_mode: javascript\n  codemirror_mime_type: text/javascript\n  aliases:\n  - jsonc\n  extensions:\n  - \".jsonc\"\n  - \".code-snippets\"\n  - \".code-workspace\"\n  - \".sublime-build\"\n  - \".sublime-color-scheme\"\n  - \".sublime-commands\"\n  - \".sublime-completions\"\n  - \".sublime-keymap\"\n  - \".sublime-macro\"\n  - \".sublime-menu\"\n  - \".sublime-mousemap\"\n  - \".sublime-project\"\n  - \".sublime-settings\"\n  - \".sublime-theme\"\n  - \".sublime-workspace\"\n  - \".sublime_metrics\"\n  - \".sublime_session\"\n  filenames:\n  - \".babelrc\"\n  - \".devcontainer.json\"\n  - \".eslintrc.json\"\n  - \".jscsrc\"\n  - \".jshintrc\"\n  - \".jslintrc\"\n  - \".swcrc\"\n  - api-extractor.json\n  - devcontainer.json\n  - jsconfig.json\n  - language-configuration.json\n  - tsconfig.json\n  - tslint.json\n  language_id: 423\nJSON5:\n  type: data\n  color: \"#267CB9\"\n  extensions:\n  - \".json5\"\n  tm_scope: source.js\n  ace_mode: javascript\n  codemirror_mode: javascript\n  codemirror_mime_type: application/json\n  language_id: 175\nJSONLD:\n  type: data\n  color: \"#0c479c\"\n  extensions:\n  - \".jsonld\"\n  tm_scope: source.js\n  ace_mode: javascript\n  codemirror_mode: javascript\n  codemirror_mime_type: application/json\n  language_id: 176\nJSONiq:\n  color: \"#40d47e\"\n  type: programming\n  ace_mode: jsoniq\n  codemirror_mode: javascript\n  codemirror_mime_type: application/json\n  extensions:\n  - \".jq\"\n  tm_scope: source.jsoniq\n  language_id: 177\nJanet:\n  type: programming\n  color: \"#0886a5\"\n  extensions:\n  - \".janet\"\n  tm_scope: source.janet\n  ace_mode: scheme\n  codemirror_mode: scheme\n  codemirror_mime_type: text/x-scheme\n  interpreters:\n  - janet\n  language_id: 1028705371\nJasmin:\n  type: programming\n  color: \"#d03600\"\n  ace_mode: java\n  extensions:\n  - \".j\"\n  tm_scope: source.jasmin\n  language_id: 180\nJava:\n  type: programming\n  tm_scope: source.java\n  ace_mode: java\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-java\n  color: \"#b07219\"\n  extensions:\n  - \".java\"\n  - \".jav\"\n  - \".jsh\"\n  language_id: 181\nJava Properties:\n  type: data\n  color: \"#2A6277\"\n  extensions:\n  - \".properties\"\n  tm_scope: source.java-properties\n  ace_mode: properties\n  codemirror_mode: properties\n  codemirror_mime_type: text/x-properties\n  language_id: 519377561\nJava Server Pages:\n  type: programming\n  color: \"#2A6277\"\n  group: Java\n  aliases:\n  - jsp\n  extensions:\n  - \".jsp\"\n  - \".tag\"\n  tm_scope: text.html.jsp\n  ace_mode: jsp\n  codemirror_mode: htmlembedded\n  codemirror_mime_type: application/x-jsp\n  language_id: 182\nJava Template Engine:\n  type: programming\n  color: \"#2A6277\"\n  group: Java\n  aliases:\n  - jte\n  extensions:\n  - \".jte\"\n  ace_mode: text\n  tm_scope: text.html.jte\n  language_id: 599494012\nJavaScript:\n  type: programming\n  tm_scope: source.js\n  ace_mode: javascript\n  codemirror_mode: javascript\n  codemirror_mime_type: text/javascript\n  color: \"#f1e05a\"\n  aliases:\n  - js\n  - node\n  extensions:\n  - \".js\"\n  - \"._js\"\n  - \".bones\"\n  - \".cjs\"\n  - \".es\"\n  - \".es6\"\n  - \".frag\"\n  - \".gs\"\n  - \".jake\"\n  - \".javascript\"\n  - \".jsb\"\n  - \".jscad\"\n  - \".jsfl\"\n  - \".jslib\"\n  - \".jsm\"\n  - \".jspre\"\n  - \".jss\"\n  - \".jsx\"\n  - \".mjs\"\n  - \".njs\"\n  - \".pac\"\n  - \".sjs\"\n  - \".ssjs\"\n  - \".xsjs\"\n  - \".xsjslib\"\n  filenames:\n  - Jakefile\n  interpreters:\n  - chakra\n  - d8\n  - gjs\n  - js\n  - node\n  - nodejs\n  - qjs\n  - rhino\n  - v8\n  - v8-shell\n  language_id: 183\nJavaScript+ERB:\n  type: programming\n  color: \"#f1e05a\"\n  tm_scope: source.js\n  group: JavaScript\n  extensions:\n  - \".js.erb\"\n  ace_mode: javascript\n  codemirror_mode: javascript\n  codemirror_mime_type: application/javascript\n  language_id: 914318960\nJest Snapshot:\n  type: data\n  color: \"#15c213\"\n  tm_scope: source.jest.snap\n  extensions:\n  - \".snap\"\n  ace_mode: javascript\n  codemirror_mode: javascript\n  codemirror_mime_type: application/javascript\n  language_id: 774635084\nJetBrains MPS:\n  type: programming\n  aliases:\n  - mps\n  color: \"#21D789\"\n  extensions:\n  - \".mps\"\n  - \".mpl\"\n  - \".msd\"\n  ace_mode: xml\n  codemirror_mode: xml\n  codemirror_mime_type: text/xml\n  tm_scope: none\n  language_id: 465165328\nJinja:\n  type: markup\n  color: \"#a52a22\"\n  aliases:\n  - django\n  - html+django\n  - html+jinja\n  - htmldjango\n  extensions:\n  - \".jinja\"\n  - \".j2\"\n  - \".jinja2\"\n  tm_scope: text.html.django\n  ace_mode: django\n  codemirror_mode: django\n  codemirror_mime_type: text/x-django\n  language_id: 147\nJison:\n  type: programming\n  color: \"#56b3cb\"\n  group: Yacc\n  extensions:\n  - \".jison\"\n  tm_scope: source.jison\n  ace_mode: text\n  language_id: 284531423\nJison Lex:\n  type: programming\n  color: \"#56b3cb\"\n  group: Lex\n  extensions:\n  - \".jisonlex\"\n  tm_scope: source.jisonlex\n  ace_mode: text\n  language_id: 406395330\nJolie:\n  type: programming\n  extensions:\n  - \".ol\"\n  - \".iol\"\n  interpreters:\n  - jolie\n  color: \"#843179\"\n  ace_mode: text\n  tm_scope: source.jolie\n  language_id: 998078858\nJsonnet:\n  color: \"#0064bd\"\n  type: programming\n  ace_mode: text\n  extensions:\n  - \".jsonnet\"\n  - \".libsonnet\"\n  tm_scope: source.jsonnet\n  language_id: 664885656\nJulia:\n  type: programming\n  extensions:\n  - \".jl\"\n  interpreters:\n  - julia\n  color: \"#a270ba\"\n  tm_scope: source.julia\n  ace_mode: julia\n  codemirror_mode: julia\n  codemirror_mime_type: text/x-julia\n  language_id: 184\nJulia REPL:\n  type: programming\n  color: \"#a270ba\"\n  tm_scope: source.julia.console\n  group: Julia\n  ace_mode: text\n  language_id: 220689142\nJupyter Notebook:\n  type: markup\n  ace_mode: json\n  codemirror_mode: javascript\n  codemirror_mime_type: application/json\n  tm_scope: source.json\n  color: \"#DA5B0B\"\n  extensions:\n  - \".ipynb\"\n  filenames:\n  - Notebook\n  aliases:\n  - IPython Notebook\n  language_id: 185\nJust:\n  type: programming\n  aliases:\n  - Justfile\n  color: \"#384d54\"\n  tm_scope: source.just\n  filenames:\n  - \".JUSTFILE\"\n  - \".Justfile\"\n  - \".justfile\"\n  - JUSTFILE\n  - Justfile\n  - justfile\n  extensions:\n  - \".just\"\n  ace_mode: text\n  language_id: 128447695\nKRL:\n  type: programming\n  color: \"#28430A\"\n  extensions:\n  - \".krl\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 186\nKaitai Struct:\n  type: programming\n  aliases:\n  - ksy\n  ace_mode: yaml\n  codemirror_mode: yaml\n  codemirror_mime_type: text/x-yaml\n  color: \"#773b37\"\n  extensions:\n  - \".ksy\"\n  tm_scope: source.yaml\n  language_id: 818804755\nKakouneScript:\n  type: programming\n  color: \"#6f8042\"\n  tm_scope: source.kakscript\n  aliases:\n  - kak\n  - kakscript\n  extensions:\n  - \".kak\"\n  filenames:\n  - kakrc\n  ace_mode: text\n  language_id: 603336474\nKerboScript:\n  type: programming\n  ace_mode: text\n  extensions:\n  - \".ks\"\n  color: \"#41adf0\"\n  tm_scope: source.kerboscript\n  language_id: 59716426\nKiCad Layout:\n  type: data\n  color: \"#2f4aab\"\n  aliases:\n  - pcbnew\n  extensions:\n  - \".kicad_pcb\"\n  - \".kicad_mod\"\n  - \".kicad_wks\"\n  filenames:\n  - fp-lib-table\n  tm_scope: source.pcb.sexp\n  ace_mode: lisp\n  codemirror_mode: commonlisp\n  codemirror_mime_type: text/x-common-lisp\n  language_id: 187\nKiCad Legacy Layout:\n  type: data\n  color: \"#2f4aab\"\n  extensions:\n  - \".brd\"\n  tm_scope: source.pcb.board\n  ace_mode: text\n  language_id: 140848857\nKiCad Schematic:\n  type: data\n  color: \"#2f4aab\"\n  aliases:\n  - eeschema schematic\n  extensions:\n  - \".kicad_sch\"\n  - \".sch\"\n  tm_scope: source.pcb.schematic\n  ace_mode: text\n  language_id: 622447435\nKickstart:\n  type: data\n  ace_mode: text\n  extensions:\n  - \".ks\"\n  tm_scope: source.kickstart\n  language_id: 692635484\nKit:\n  type: markup\n  ace_mode: html\n  codemirror_mode: htmlmixed\n  codemirror_mime_type: text/html\n  extensions:\n  - \".kit\"\n  tm_scope: text.html.basic\n  language_id: 188\nKotlin:\n  type: programming\n  color: \"#A97BFF\"\n  extensions:\n  - \".kt\"\n  - \".ktm\"\n  - \".kts\"\n  tm_scope: source.kotlin\n  ace_mode: text\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-kotlin\n  language_id: 189\nKusto:\n  type: data\n  extensions:\n  - \".csl\"\n  - \".kql\"\n  tm_scope: source.kusto\n  ace_mode: text\n  language_id: 225697190\nLFE:\n  type: programming\n  color: \"#4C3023\"\n  extensions:\n  - \".lfe\"\n  tm_scope: source.lisp\n  ace_mode: lisp\n  codemirror_mode: commonlisp\n  codemirror_mime_type: text/x-common-lisp\n  language_id: 190\nLLVM:\n  type: programming\n  extensions:\n  - \".ll\"\n  tm_scope: source.llvm\n  ace_mode: text\n  color: \"#185619\"\n  language_id: 191\nLOLCODE:\n  type: programming\n  extensions:\n  - \".lol\"\n  color: \"#cc9900\"\n  tm_scope: source.lolcode\n  ace_mode: text\n  language_id: 192\nLSL:\n  type: programming\n  tm_scope: source.lsl\n  ace_mode: lsl\n  extensions:\n  - \".lsl\"\n  - \".lslp\"\n  interpreters:\n  - lsl\n  color: \"#3d9970\"\n  language_id: 193\nLTspice Symbol:\n  type: data\n  extensions:\n  - \".asy\"\n  tm_scope: source.ltspice.symbol\n  ace_mode: text\n  codemirror_mode: spreadsheet\n  codemirror_mime_type: text/x-spreadsheet\n  language_id: 1013566805\nLabVIEW:\n  type: programming\n  color: \"#fede06\"\n  extensions:\n  - \".lvproj\"\n  - \".lvclass\"\n  - \".lvlib\"\n  tm_scope: text.xml\n  ace_mode: xml\n  codemirror_mode: xml\n  codemirror_mime_type: text/xml\n  language_id: 194\nLark:\n  type: data\n  color: \"#2980B9\"\n  extensions:\n  - \".lark\"\n  tm_scope: source.lark\n  ace_mode: text\n  codemirror_mode: ebnf\n  codemirror_mime_type: text/x-ebnf\n  language_id: 758480799\nLasso:\n  type: programming\n  color: \"#999999\"\n  extensions:\n  - \".lasso\"\n  - \".las\"\n  - \".lasso8\"\n  - \".lasso9\"\n  tm_scope: file.lasso\n  aliases:\n  - lassoscript\n  ace_mode: text\n  language_id: 195\nLatte:\n  type: markup\n  color: \"#f2a542\"\n  extensions:\n  - \".latte\"\n  tm_scope: text.html.smarty\n  ace_mode: smarty\n  codemirror_mode: smarty\n  codemirror_mime_type: text/x-smarty\n  language_id: 196\nLean:\n  type: programming\n  extensions:\n  - \".lean\"\n  - \".hlean\"\n  tm_scope: source.lean\n  ace_mode: text\n  language_id: 197\nLean 4:\n  type: programming\n  group: Lean\n  extensions:\n  - \".lean\"\n  tm_scope: source.lean4\n  ace_mode: text\n  language_id: 455147478\nLess:\n  type: markup\n  color: \"#1d365d\"\n  aliases:\n  - less-css\n  extensions:\n  - \".less\"\n  tm_scope: source.css.less\n  ace_mode: less\n  codemirror_mode: css\n  codemirror_mime_type: text/css\n  language_id: 198\nLex:\n  type: programming\n  color: \"#DBCA00\"\n  aliases:\n  - flex\n  extensions:\n  - \".l\"\n  - \".lex\"\n  filenames:\n  - Lexer.x\n  - lexer.x\n  tm_scope: source.lex\n  ace_mode: text\n  language_id: 199\nLigoLANG:\n  type: programming\n  color: \"#0e74ff\"\n  extensions:\n  - \".ligo\"\n  tm_scope: source.ligo\n  ace_mode: pascal\n  codemirror_mode: pascal\n  codemirror_mime_type: text/x-pascal\n  group: LigoLANG\n  language_id: 1040646257\nLilyPond:\n  type: programming\n  color: \"#9ccc7c\"\n  extensions:\n  - \".ly\"\n  - \".ily\"\n  tm_scope: source.lilypond\n  ace_mode: text\n  language_id: 200\nLimbo:\n  type: programming\n  extensions:\n  - \".b\"\n  - \".m\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 201\nLinker Script:\n  type: data\n  extensions:\n  - \".ld\"\n  - \".lds\"\n  - \".x\"\n  filenames:\n  - ld.script\n  tm_scope: none\n  ace_mode: text\n  language_id: 202\nLinux Kernel Module:\n  type: data\n  extensions:\n  - \".mod\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 203\nLiquid:\n  type: markup\n  color: \"#67b8de\"\n  extensions:\n  - \".liquid\"\n  tm_scope: text.html.liquid\n  ace_mode: liquid\n  language_id: 204\nLiterate Agda:\n  type: programming\n  color: \"#315665\"\n  group: Agda\n  extensions:\n  - \".lagda\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 205\nLiterate CoffeeScript:\n  type: programming\n  color: \"#244776\"\n  tm_scope: source.litcoffee\n  group: CoffeeScript\n  ace_mode: text\n  wrap: true\n  aliases:\n  - litcoffee\n  extensions:\n  - \".litcoffee\"\n  - \".coffee.md\"\n  language_id: 206\nLiterate Haskell:\n  type: programming\n  color: \"#5e5086\"\n  group: Haskell\n  aliases:\n  - lhaskell\n  - lhs\n  extensions:\n  - \".lhs\"\n  tm_scope: text.tex.latex.haskell\n  ace_mode: text\n  codemirror_mode: haskell-literate\n  codemirror_mime_type: text/x-literate-haskell\n  language_id: 207\nLiveCode Script:\n  type: programming\n  color: \"#0c5ba5\"\n  extensions:\n  - \".livecodescript\"\n  tm_scope: source.livecodescript\n  ace_mode: text\n  language_id: 891017\nLiveScript:\n  type: programming\n  color: \"#499886\"\n  aliases:\n  - live-script\n  - ls\n  extensions:\n  - \".ls\"\n  - \"._ls\"\n  filenames:\n  - Slakefile\n  tm_scope: source.livescript\n  ace_mode: livescript\n  codemirror_mode: livescript\n  codemirror_mime_type: text/x-livescript\n  language_id: 208\nLogos:\n  type: programming\n  extensions:\n  - \".xm\"\n  - \".x\"\n  - \".xi\"\n  ace_mode: text\n  tm_scope: source.logos\n  language_id: 209\nLogtalk:\n  type: programming\n  color: \"#295b9a\"\n  extensions:\n  - \".lgt\"\n  - \".logtalk\"\n  tm_scope: source.logtalk\n  ace_mode: text\n  language_id: 210\nLookML:\n  type: programming\n  ace_mode: yaml\n  codemirror_mode: yaml\n  codemirror_mime_type: text/x-yaml\n  color: \"#652B81\"\n  extensions:\n  - \".lkml\"\n  - \".lookml\"\n  tm_scope: source.yaml\n  language_id: 211\nLoomScript:\n  type: programming\n  extensions:\n  - \".ls\"\n  tm_scope: source.loomscript\n  ace_mode: text\n  language_id: 212\nLua:\n  type: programming\n  tm_scope: source.lua\n  ace_mode: lua\n  codemirror_mode: lua\n  codemirror_mime_type: text/x-lua\n  color: \"#000080\"\n  extensions:\n  - \".lua\"\n  - \".fcgi\"\n  - \".nse\"\n  - \".p8\"\n  - \".pd_lua\"\n  - \".rbxs\"\n  - \".rockspec\"\n  - \".wlua\"\n  filenames:\n  - \".luacheckrc\"\n  interpreters:\n  - lua\n  language_id: 213\nLuau:\n  type: programming\n  tm_scope: source.luau\n  ace_mode: lua\n  codemirror_mode: lua\n  codemirror_mime_type: text/x-lua\n  color: \"#00A2FF\"\n  extensions:\n  - \".luau\"\n  interpreters:\n  - luau\n  language_id: 365050359\nM:\n  type: programming\n  aliases:\n  - mumps\n  extensions:\n  - \".mumps\"\n  - \".m\"\n  ace_mode: text\n  codemirror_mode: mumps\n  codemirror_mime_type: text/x-mumps\n  language_id: 214\n  tm_scope: none\nM4:\n  type: programming\n  extensions:\n  - \".m4\"\n  - \".mc\"\n  tm_scope: source.m4\n  ace_mode: text\n  language_id: 215\nM4Sugar:\n  type: programming\n  group: M4\n  aliases:\n  - autoconf\n  extensions:\n  - \".m4\"\n  filenames:\n  - configure.ac\n  tm_scope: source.m4\n  ace_mode: text\n  language_id: 216\nMATLAB:\n  type: programming\n  color: \"#e16737\"\n  aliases:\n  - octave\n  extensions:\n  - \".matlab\"\n  - \".m\"\n  tm_scope: source.matlab\n  ace_mode: matlab\n  codemirror_mode: octave\n  codemirror_mime_type: text/x-octave\n  language_id: 225\nMAXScript:\n  type: programming\n  color: \"#00a6a6\"\n  extensions:\n  - \".ms\"\n  - \".mcr\"\n  tm_scope: source.maxscript\n  ace_mode: text\n  language_id: 217\nMDX:\n  type: markup\n  color: \"#fcb32c\"\n  ace_mode: markdown\n  codemirror_mode: gfm\n  codemirror_mime_type: text/x-gfm\n  wrap: true\n  extensions:\n  - \".mdx\"\n  tm_scope: source.mdx\n  language_id: 512838272\nMLIR:\n  type: programming\n  color: \"#5EC8DB\"\n  extensions:\n  - \".mlir\"\n  tm_scope: source.mlir\n  ace_mode: text\n  language_id: 448253929\nMQL4:\n  type: programming\n  color: \"#62A8D6\"\n  extensions:\n  - \".mq4\"\n  - \".mqh\"\n  tm_scope: source.mql5\n  ace_mode: c_cpp\n  language_id: 426\nMQL5:\n  type: programming\n  color: \"#4A76B8\"\n  extensions:\n  - \".mq5\"\n  - \".mqh\"\n  tm_scope: source.mql5\n  ace_mode: c_cpp\n  language_id: 427\nMTML:\n  type: markup\n  color: \"#b7e1f4\"\n  extensions:\n  - \".mtml\"\n  tm_scope: text.html.basic\n  ace_mode: html\n  codemirror_mode: htmlmixed\n  codemirror_mime_type: text/html\n  language_id: 218\nMUF:\n  type: programming\n  group: Forth\n  extensions:\n  - \".muf\"\n  - \".m\"\n  tm_scope: none\n  ace_mode: forth\n  codemirror_mode: forth\n  codemirror_mime_type: text/x-forth\n  language_id: 219\nMacaulay2:\n  type: programming\n  extensions:\n  - \".m2\"\n  aliases:\n  - m2\n  interpreters:\n  - M2\n  ace_mode: text\n  tm_scope: source.m2\n  color: \"#d8ffff\"\n  language_id: 34167825\nMakefile:\n  type: programming\n  color: \"#427819\"\n  aliases:\n  - bsdmake\n  - make\n  - mf\n  extensions:\n  - \".mak\"\n  - \".d\"\n  - \".make\"\n  - \".makefile\"\n  - \".mk\"\n  - \".mkfile\"\n  filenames:\n  - BSDmakefile\n  - GNUmakefile\n  - Kbuild\n  - Makefile\n  - Makefile.am\n  - Makefile.boot\n  - Makefile.frag\n  - Makefile.in\n  - Makefile.inc\n  - Makefile.wat\n  - makefile\n  - makefile.sco\n  - mkfile\n  interpreters:\n  - make\n  tm_scope: source.makefile\n  ace_mode: makefile\n  codemirror_mode: cmake\n  codemirror_mime_type: text/x-cmake\n  language_id: 220\nMako:\n  type: programming\n  color: \"#7e858d\"\n  extensions:\n  - \".mako\"\n  - \".mao\"\n  tm_scope: text.html.mako\n  ace_mode: text\n  language_id: 221\nMarkdown:\n  type: prose\n  color: \"#083fa1\"\n  aliases:\n  - md\n  - pandoc\n  ace_mode: markdown\n  codemirror_mode: gfm\n  codemirror_mime_type: text/x-gfm\n  wrap: true\n  extensions:\n  - \".md\"\n  - \".livemd\"\n  - \".markdown\"\n  - \".mdown\"\n  - \".mdwn\"\n  - \".mkd\"\n  - \".mkdn\"\n  - \".mkdown\"\n  - \".ronn\"\n  - \".scd\"\n  - \".workbook\"\n  filenames:\n  - contents.lr\n  tm_scope: text.md\n  language_id: 222\nMarko:\n  type: markup\n  color: \"#42bff2\"\n  tm_scope: text.marko\n  extensions:\n  - \".marko\"\n  aliases:\n  - markojs\n  ace_mode: text\n  codemirror_mode: htmlmixed\n  codemirror_mime_type: text/html\n  language_id: 932782397\nMask:\n  type: markup\n  color: \"#f97732\"\n  ace_mode: mask\n  extensions:\n  - \".mask\"\n  tm_scope: source.mask\n  language_id: 223\nMathematica:\n  type: programming\n  color: \"#dd1100\"\n  extensions:\n  - \".mathematica\"\n  - \".cdf\"\n  - \".m\"\n  - \".ma\"\n  - \".mt\"\n  - \".nb\"\n  - \".nbp\"\n  - \".wl\"\n  - \".wlt\"\n  aliases:\n  - mma\n  - wolfram\n  - wolfram language\n  - wolfram lang\n  - wl\n  tm_scope: source.mathematica\n  ace_mode: text\n  codemirror_mode: mathematica\n  codemirror_mime_type: text/x-mathematica\n  language_id: 224\nMaven POM:\n  type: data\n  group: XML\n  tm_scope: text.xml.pom\n  filenames:\n  - pom.xml\n  ace_mode: xml\n  codemirror_mode: xml\n  codemirror_mime_type: text/xml\n  language_id: 226\nMax:\n  type: programming\n  color: \"#c4a79c\"\n  aliases:\n  - max/msp\n  - maxmsp\n  extensions:\n  - \".maxpat\"\n  - \".maxhelp\"\n  - \".maxproj\"\n  - \".mxt\"\n  - \".pat\"\n  tm_scope: source.json\n  ace_mode: json\n  codemirror_mode: javascript\n  codemirror_mime_type: application/json\n  language_id: 227\nMercury:\n  type: programming\n  color: \"#ff2b2b\"\n  ace_mode: prolog\n  interpreters:\n  - mmi\n  extensions:\n  - \".m\"\n  - \".moo\"\n  tm_scope: source.mercury\n  language_id: 229\nMermaid:\n  type: markup\n  color: \"#ff3670\"\n  aliases:\n  - mermaid example\n  extensions:\n  - \".mmd\"\n  - \".mermaid\"\n  tm_scope: source.mermaid\n  ace_mode: text\n  language_id: 385992043\nMeson:\n  type: programming\n  color: \"#007800\"\n  filenames:\n  - meson.build\n  - meson_options.txt\n  tm_scope: source.meson\n  ace_mode: text\n  language_id: 799141244\nMetal:\n  type: programming\n  color: \"#8f14e9\"\n  extensions:\n  - \".metal\"\n  tm_scope: source.c++\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-c++src\n  language_id: 230\nMicrosoft Developer Studio Project:\n  type: data\n  extensions:\n  - \".dsp\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 800983837\nMicrosoft Visual Studio Solution:\n  type: data\n  extensions:\n  - \".sln\"\n  tm_scope: source.solution\n  ace_mode: text\n  language_id: 849523096\nMiniD:\n  type: programming\n  extensions:\n  - \".minid\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 231\nMiniYAML:\n  type: data\n  color: \"#ff1111\"\n  tm_scope: source.miniyaml\n  extensions:\n  - \".yaml\"\n  - \".yml\"\n  ace_mode: yaml\n  codemirror_mode: yaml\n  codemirror_mime_type: text/x-yaml\n  language_id: 4896465\nMint:\n  type: programming\n  extensions:\n  - \".mint\"\n  ace_mode: text\n  color: \"#02b046\"\n  tm_scope: source.mint\n  language_id: 968740319\nMirah:\n  type: programming\n  color: \"#c7a938\"\n  extensions:\n  - \".druby\"\n  - \".duby\"\n  - \".mirah\"\n  tm_scope: source.ruby\n  ace_mode: ruby\n  codemirror_mode: ruby\n  codemirror_mime_type: text/x-ruby\n  language_id: 232\nModelica:\n  type: programming\n  color: \"#de1d31\"\n  extensions:\n  - \".mo\"\n  tm_scope: source.modelica\n  ace_mode: text\n  codemirror_mode: modelica\n  codemirror_mime_type: text/x-modelica\n  language_id: 233\nModula-2:\n  type: programming\n  color: \"#10253f\"\n  extensions:\n  - \".mod\"\n  tm_scope: source.modula2\n  ace_mode: text\n  language_id: 234\nModula-3:\n  type: programming\n  extensions:\n  - \".i3\"\n  - \".ig\"\n  - \".m3\"\n  - \".mg\"\n  color: \"#223388\"\n  ace_mode: text\n  tm_scope: source.modula-3\n  language_id: 564743864\nModule Management System:\n  type: programming\n  extensions:\n  - \".mms\"\n  - \".mmk\"\n  filenames:\n  - descrip.mmk\n  - descrip.mms\n  tm_scope: none\n  ace_mode: text\n  language_id: 235\nMojo:\n  type: programming\n  color: \"#ff4c1f\"\n  extensions:\n  - \".mojo\"\n  ace_mode: python\n  codemirror_mode: python\n  codemirror_mime_type: text/x-python\n  tm_scope: source.mojo\n  language_id: 1045019587\nMonkey:\n  type: programming\n  extensions:\n  - \".monkey\"\n  - \".monkey2\"\n  ace_mode: text\n  tm_scope: source.monkey\n  language_id: 236\nMonkey C:\n  type: programming\n  color: \"#8D6747\"\n  extensions:\n  - \".mc\"\n  tm_scope: source.mc\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csrc\n  language_id: 231751931\nMoocode:\n  type: programming\n  extensions:\n  - \".moo\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 237\nMoonScript:\n  type: programming\n  color: \"#ff4585\"\n  extensions:\n  - \".moon\"\n  interpreters:\n  - moon\n  tm_scope: source.moonscript\n  ace_mode: text\n  language_id: 238\nMotoko:\n  type: programming\n  color: \"#fbb03b\"\n  extensions:\n  - \".mo\"\n  tm_scope: source.mo\n  ace_mode: text\n  language_id: 202937027\nMotorola 68K Assembly:\n  type: programming\n  color: \"#005daa\"\n  group: Assembly\n  aliases:\n  - m68k\n  extensions:\n  - \".asm\"\n  - \".i\"\n  - \".inc\"\n  - \".s\"\n  - \".x68\"\n  tm_scope: source.m68k\n  ace_mode: assembly_x86\n  language_id: 477582706\nMove:\n  type: programming\n  color: \"#4a137a\"\n  extensions:\n  - \".move\"\n  tm_scope: source.move\n  ace_mode: text\n  language_id: 638334599\nMuse:\n  type: prose\n  extensions:\n  - \".muse\"\n  tm_scope: text.muse\n  ace_mode: text\n  wrap: true\n  language_id: 474864066\n  aliases:\n  - amusewiki\n  - emacs muse\nMustache:\n  type: markup\n  color: \"#724b3b\"\n  extensions:\n  - \".mustache\"\n  tm_scope: text.html.smarty\n  ace_mode: smarty\n  codemirror_mode: smarty\n  codemirror_mime_type: text/x-smarty\n  language_id: 638334590\nMyghty:\n  type: programming\n  extensions:\n  - \".myt\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 239\nNASL:\n  type: programming\n  extensions:\n  - \".nasl\"\n  - \".inc\"\n  tm_scope: source.nasl\n  ace_mode: text\n  language_id: 171666519\nNCL:\n  type: programming\n  color: \"#28431f\"\n  extensions:\n  - \".ncl\"\n  tm_scope: source.ncl\n  ace_mode: text\n  language_id: 240\nNEON:\n  type: data\n  extensions:\n  - \".neon\"\n  tm_scope: source.neon\n  ace_mode: text\n  aliases:\n  - nette object notation\n  - ne-on\n  language_id: 481192983\nNL:\n  type: data\n  extensions:\n  - \".nl\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 241\nNMODL:\n  type: programming\n  color: \"#00356B\"\n  extensions:\n  - \".mod\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 136456478\nNPM Config:\n  type: data\n  color: \"#cb3837\"\n  group: INI\n  aliases:\n  - npmrc\n  filenames:\n  - \".npmrc\"\n  tm_scope: source.ini.npmrc\n  ace_mode: text\n  language_id: 685022663\nNSIS:\n  type: programming\n  extensions:\n  - \".nsi\"\n  - \".nsh\"\n  tm_scope: source.nsis\n  ace_mode: text\n  codemirror_mode: nsis\n  codemirror_mime_type: text/x-nsis\n  language_id: 242\nNWScript:\n  type: programming\n  color: \"#111522\"\n  extensions:\n  - \".nss\"\n  tm_scope: source.c.nwscript\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csrc\n  language_id: 731233819\nNasal:\n  type: programming\n  color: \"#1d2c4e\"\n  extensions:\n  - \".nas\"\n  tm_scope: source.nasal\n  ace_mode: nasal\n  language_id: 178322513\nNearley:\n  type: programming\n  ace_mode: text\n  color: \"#990000\"\n  extensions:\n  - \".ne\"\n  - \".nearley\"\n  tm_scope: source.ne\n  language_id: 521429430\nNemerle:\n  type: programming\n  color: \"#3d3c6e\"\n  extensions:\n  - \".n\"\n  tm_scope: source.nemerle\n  ace_mode: text\n  language_id: 243\nNetLinx:\n  type: programming\n  color: \"#0aa0ff\"\n  extensions:\n  - \".axs\"\n  - \".axi\"\n  tm_scope: source.netlinx\n  ace_mode: text\n  language_id: 244\nNetLinx+ERB:\n  type: programming\n  color: \"#747faa\"\n  extensions:\n  - \".axs.erb\"\n  - \".axi.erb\"\n  tm_scope: source.netlinx.erb\n  ace_mode: text\n  language_id: 245\nNetLogo:\n  type: programming\n  color: \"#ff6375\"\n  extensions:\n  - \".nlogo\"\n  tm_scope: source.lisp\n  ace_mode: lisp\n  codemirror_mode: commonlisp\n  codemirror_mime_type: text/x-common-lisp\n  language_id: 246\nNewLisp:\n  type: programming\n  color: \"#87AED7\"\n  extensions:\n  - \".nl\"\n  - \".lisp\"\n  - \".lsp\"\n  interpreters:\n  - newlisp\n  tm_scope: source.lisp\n  ace_mode: lisp\n  codemirror_mode: commonlisp\n  codemirror_mime_type: text/x-common-lisp\n  language_id: 247\nNextflow:\n  type: programming\n  ace_mode: groovy\n  tm_scope: source.nextflow\n  color: \"#3ac486\"\n  extensions:\n  - \".nf\"\n  filenames:\n  - nextflow.config\n  interpreters:\n  - nextflow\n  language_id: 506780613\nNginx:\n  type: data\n  color: \"#009639\"\n  extensions:\n  - \".nginx\"\n  - \".nginxconf\"\n  - \".vhost\"\n  filenames:\n  - nginx.conf\n  tm_scope: source.nginx\n  aliases:\n  - nginx configuration file\n  ace_mode: text\n  codemirror_mode: nginx\n  codemirror_mime_type: text/x-nginx-conf\n  language_id: 248\nNim:\n  type: programming\n  color: \"#ffc200\"\n  extensions:\n  - \".nim\"\n  - \".nim.cfg\"\n  - \".nimble\"\n  - \".nimrod\"\n  - \".nims\"\n  filenames:\n  - nim.cfg\n  ace_mode: text\n  tm_scope: source.nim\n  language_id: 249\nNinja:\n  type: data\n  tm_scope: source.ninja\n  extensions:\n  - \".ninja\"\n  ace_mode: text\n  language_id: 250\nNit:\n  type: programming\n  color: \"#009917\"\n  extensions:\n  - \".nit\"\n  tm_scope: source.nit\n  ace_mode: text\n  language_id: 251\nNix:\n  type: programming\n  color: \"#7e7eff\"\n  extensions:\n  - \".nix\"\n  aliases:\n  - nixos\n  tm_scope: source.nix\n  ace_mode: nix\n  language_id: 252\nNoir:\n  type: programming\n  aliases:\n  - nargo\n  ace_mode: rust\n  codemirror_mode: rust\n  codemirror_mime_type: text/x-rustsrc\n  extensions:\n  - \".nr\"\n  color: \"#2f1f49\"\n  tm_scope: source.nr\n  language_id: 813068465\nNu:\n  type: programming\n  color: \"#c9df40\"\n  aliases:\n  - nush\n  extensions:\n  - \".nu\"\n  filenames:\n  - Nukefile\n  tm_scope: source.nu\n  ace_mode: scheme\n  codemirror_mode: scheme\n  codemirror_mime_type: text/x-scheme\n  interpreters:\n  - nush\n  language_id: 253\nNumPy:\n  type: programming\n  color: \"#9C8AF9\"\n  group: Python\n  extensions:\n  - \".numpy\"\n  - \".numpyw\"\n  - \".numsc\"\n  tm_scope: none\n  ace_mode: text\n  codemirror_mode: python\n  codemirror_mime_type: text/x-python\n  language_id: 254\nNunjucks:\n  type: markup\n  color: \"#3d8137\"\n  extensions:\n  - \".njk\"\n  aliases:\n  - njk\n  tm_scope: text.html.nunjucks\n  ace_mode: nunjucks\n  language_id: 461856962\nNushell:\n  type: programming\n  color: \"#4E9906\"\n  extensions:\n  - \".nu\"\n  interpreters:\n  - nu\n  aliases:\n  - nu-script\n  - nushell-script\n  tm_scope: source.nushell\n  ace_mode: sh\n  codemirror_mode: shell\n  codemirror_mime_type: text/x-sh\n  language_id: 446573572\nOASv2-json:\n  type: data\n  color: \"#85ea2d\"\n  extensions:\n  - \".json\"\n  group: OpenAPI Specification v2\n  tm_scope: source.json\n  ace_mode: json\n  codemirror_mode: javascript\n  codemirror_mime_type: application/json\n  language_id: 834374816\nOASv2-yaml:\n  type: data\n  color: \"#85ea2d\"\n  extensions:\n  - \".yaml\"\n  - \".yml\"\n  group: OpenAPI Specification v2\n  tm_scope: source.yaml\n  ace_mode: yaml\n  codemirror_mode: yaml\n  codemirror_mime_type: text/x-yaml\n  language_id: 105187618\nOASv3-json:\n  type: data\n  color: \"#85ea2d\"\n  extensions:\n  - \".json\"\n  group: OpenAPI Specification v3\n  tm_scope: source.json\n  ace_mode: json\n  codemirror_mode: javascript\n  codemirror_mime_type: application/json\n  language_id: 980062566\nOASv3-yaml:\n  type: data\n  color: \"#85ea2d\"\n  extensions:\n  - \".yaml\"\n  - \".yml\"\n  group: OpenAPI Specification v3\n  tm_scope: source.yaml\n  ace_mode: yaml\n  codemirror_mode: yaml\n  codemirror_mime_type: text/x-yaml\n  language_id: 51239111\nOCaml:\n  type: programming\n  ace_mode: ocaml\n  codemirror_mode: mllike\n  codemirror_mime_type: text/x-ocaml\n  color: \"#ef7a08\"\n  extensions:\n  - \".ml\"\n  - \".eliom\"\n  - \".eliomi\"\n  - \".ml4\"\n  - \".mli\"\n  - \".mll\"\n  - \".mly\"\n  interpreters:\n  - ocaml\n  - ocamlrun\n  - ocamlscript\n  tm_scope: source.ocaml\n  language_id: 255\nOberon:\n  type: programming\n  extensions:\n  - \".ob2\"\n  tm_scope: source.modula2\n  ace_mode: text\n  language_id: 677210597\nObjDump:\n  type: data\n  extensions:\n  - \".objdump\"\n  tm_scope: objdump.x86asm\n  ace_mode: assembly_x86\n  language_id: 256\nObject Data Instance Notation:\n  type: data\n  extensions:\n  - \".odin\"\n  tm_scope: source.odin-ehr\n  ace_mode: text\n  language_id: 985227236\nObjectScript:\n  type: programming\n  extensions:\n  - \".cls\"\n  language_id: 202735509\n  tm_scope: source.objectscript\n  color: \"#424893\"\n  ace_mode: text\nObjective-C:\n  type: programming\n  tm_scope: source.objc\n  color: \"#438eff\"\n  aliases:\n  - obj-c\n  - objc\n  - objectivec\n  extensions:\n  - \".m\"\n  - \".h\"\n  ace_mode: objectivec\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-objectivec\n  language_id: 257\nObjective-C++:\n  type: programming\n  tm_scope: source.objc++\n  color: \"#6866fb\"\n  aliases:\n  - obj-c++\n  - objc++\n  - objectivec++\n  extensions:\n  - \".mm\"\n  ace_mode: objectivec\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-objectivec\n  language_id: 258\nObjective-J:\n  type: programming\n  color: \"#ff0c5a\"\n  aliases:\n  - obj-j\n  - objectivej\n  - objj\n  extensions:\n  - \".j\"\n  - \".sj\"\n  tm_scope: source.js.objj\n  ace_mode: text\n  language_id: 259\nOdin:\n  type: programming\n  color: \"#60AFFE\"\n  aliases:\n  - odinlang\n  - odin-lang\n  extensions:\n  - \".odin\"\n  tm_scope: source.odin\n  ace_mode: text\n  language_id: 889244082\nOmgrofl:\n  type: programming\n  extensions:\n  - \".omgrofl\"\n  color: \"#cabbff\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 260\nOpa:\n  type: programming\n  extensions:\n  - \".opa\"\n  tm_scope: source.opa\n  ace_mode: text\n  language_id: 261\nOpal:\n  type: programming\n  color: \"#f7ede0\"\n  extensions:\n  - \".opal\"\n  tm_scope: source.opal\n  ace_mode: text\n  language_id: 262\nOpen Policy Agent:\n  type: programming\n  color: \"#7d9199\"\n  ace_mode: text\n  extensions:\n  - \".rego\"\n  language_id: 840483232\n  tm_scope: source.rego\nOpenAPI Specification v2:\n  aliases:\n  - oasv2\n  type: data\n  color: \"#85ea2d\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 848295328\nOpenAPI Specification v3:\n  aliases:\n  - oasv3\n  type: data\n  color: \"#85ea2d\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 557959099\nOpenCL:\n  type: programming\n  color: \"#ed2e2d\"\n  group: C\n  extensions:\n  - \".cl\"\n  - \".opencl\"\n  tm_scope: source.c\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csrc\n  language_id: 263\nOpenEdge ABL:\n  type: programming\n  color: \"#5ce600\"\n  aliases:\n  - progress\n  - openedge\n  - abl\n  extensions:\n  - \".p\"\n  - \".cls\"\n  - \".w\"\n  tm_scope: source.abl\n  ace_mode: text\n  language_id: 264\nOpenQASM:\n  type: programming\n  extensions:\n  - \".qasm\"\n  color: \"#AA70FF\"\n  tm_scope: source.qasm\n  ace_mode: text\n  language_id: 153739399\nOpenRC runscript:\n  type: programming\n  group: Shell\n  aliases:\n  - openrc\n  interpreters:\n  - openrc-run\n  tm_scope: source.shell\n  ace_mode: sh\n  codemirror_mode: shell\n  codemirror_mime_type: text/x-sh\n  language_id: 265\nOpenSCAD:\n  type: programming\n  color: \"#e5cd45\"\n  extensions:\n  - \".scad\"\n  tm_scope: source.scad\n  ace_mode: scad\n  language_id: 266\nOpenStep Property List:\n  type: data\n  extensions:\n  - \".plist\"\n  - \".glyphs\"\n  tm_scope: source.plist\n  ace_mode: text\n  language_id: 598917541\nOpenType Feature File:\n  type: data\n  aliases:\n  - AFDKO\n  extensions:\n  - \".fea\"\n  tm_scope: source.opentype\n  ace_mode: text\n  language_id: 374317347\nOption List:\n  type: data\n  color: \"#476732\"\n  aliases:\n  - opts\n  - ackrc\n  filenames:\n  - \".ackrc\"\n  - \".rspec\"\n  - \".yardopts\"\n  - ackrc\n  - mocha.opts\n  tm_scope: source.opts\n  ace_mode: sh\n  codemirror_mode: shell\n  codemirror_mime_type: text/x-sh\n  language_id: 723589315\nOrg:\n  type: prose\n  color: \"#77aa99\"\n  wrap: true\n  extensions:\n  - \".org\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 267\nOx:\n  type: programming\n  extensions:\n  - \".ox\"\n  - \".oxh\"\n  - \".oxo\"\n  tm_scope: source.ox\n  ace_mode: text\n  language_id: 268\nOxygene:\n  type: programming\n  color: \"#cdd0e3\"\n  extensions:\n  - \".oxygene\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 269\nOz:\n  type: programming\n  color: \"#fab738\"\n  extensions:\n  - \".oz\"\n  tm_scope: source.oz\n  ace_mode: text\n  codemirror_mode: oz\n  codemirror_mime_type: text/x-oz\n  language_id: 270\nP4:\n  type: programming\n  color: \"#7055b5\"\n  extensions:\n  - \".p4\"\n  tm_scope: source.p4\n  ace_mode: text\n  language_id: 348895984\nPDDL:\n  type: programming\n  color: \"#0d00ff\"\n  extensions:\n  - \".pddl\"\n  tm_scope: source.pddl\n  ace_mode: text\n  language_id: 736235603\nPEG.js:\n  type: programming\n  color: \"#234d6b\"\n  extensions:\n  - \".pegjs\"\n  - \".peggy\"\n  tm_scope: source.peggy\n  ace_mode: javascript\n  codemirror_mode: javascript\n  codemirror_mime_type: text/javascript\n  language_id: 81442128\nPHP:\n  type: programming\n  tm_scope: text.html.php\n  ace_mode: php\n  codemirror_mode: php\n  codemirror_mime_type: application/x-httpd-php\n  color: \"#4F5D95\"\n  extensions:\n  - \".php\"\n  - \".aw\"\n  - \".ctp\"\n  - \".fcgi\"\n  - \".inc\"\n  - \".php3\"\n  - \".php4\"\n  - \".php5\"\n  - \".phps\"\n  - \".phpt\"\n  filenames:\n  - \".php\"\n  - \".php_cs\"\n  - \".php_cs.dist\"\n  - Phakefile\n  interpreters:\n  - php\n  aliases:\n  - inc\n  language_id: 272\nPLSQL:\n  type: programming\n  ace_mode: sql\n  codemirror_mode: sql\n  codemirror_mime_type: text/x-plsql\n  tm_scope: none\n  color: \"#dad8d8\"\n  extensions:\n  - \".pls\"\n  - \".bdy\"\n  - \".ddl\"\n  - \".fnc\"\n  - \".pck\"\n  - \".pkb\"\n  - \".pks\"\n  - \".plb\"\n  - \".plsql\"\n  - \".prc\"\n  - \".spc\"\n  - \".sql\"\n  - \".tpb\"\n  - \".tps\"\n  - \".trg\"\n  - \".vw\"\n  language_id: 273\nPLpgSQL:\n  type: programming\n  color: \"#336790\"\n  ace_mode: pgsql\n  codemirror_mode: sql\n  codemirror_mime_type: text/x-sql\n  tm_scope: source.sql\n  extensions:\n  - \".pgsql\"\n  - \".sql\"\n  language_id: 274\nPOV-Ray SDL:\n  type: programming\n  color: \"#6bac65\"\n  aliases:\n  - pov-ray\n  - povray\n  extensions:\n  - \".pov\"\n  - \".inc\"\n  tm_scope: source.pov-ray sdl\n  ace_mode: text\n  language_id: 275\nPact:\n  type: programming\n  color: \"#F7A8B8\"\n  ace_mode: text\n  tm_scope: source.pact\n  extensions:\n  - \".pact\"\n  language_id: 756774415\nPan:\n  type: programming\n  color: \"#cc0000\"\n  extensions:\n  - \".pan\"\n  tm_scope: source.pan\n  ace_mode: text\n  language_id: 276\nPapyrus:\n  type: programming\n  color: \"#6600cc\"\n  extensions:\n  - \".psc\"\n  tm_scope: source.papyrus.skyrim\n  ace_mode: text\n  language_id: 277\nParrot:\n  type: programming\n  color: \"#f3ca0a\"\n  extensions:\n  - \".parrot\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 278\nParrot Assembly:\n  group: Parrot\n  type: programming\n  aliases:\n  - pasm\n  extensions:\n  - \".pasm\"\n  interpreters:\n  - parrot\n  tm_scope: none\n  ace_mode: text\n  language_id: 279\nParrot Internal Representation:\n  group: Parrot\n  tm_scope: source.parrot.pir\n  type: programming\n  aliases:\n  - pir\n  extensions:\n  - \".pir\"\n  interpreters:\n  - parrot\n  ace_mode: text\n  language_id: 280\nPascal:\n  type: programming\n  color: \"#E3F171\"\n  aliases:\n  - delphi\n  - objectpascal\n  extensions:\n  - \".pas\"\n  - \".dfm\"\n  - \".dpr\"\n  - \".inc\"\n  - \".lpr\"\n  - \".pascal\"\n  - \".pp\"\n  interpreters:\n  - instantfpc\n  tm_scope: source.pascal\n  ace_mode: pascal\n  codemirror_mode: pascal\n  codemirror_mime_type: text/x-pascal\n  language_id: 281\nPawn:\n  type: programming\n  color: \"#dbb284\"\n  extensions:\n  - \".pwn\"\n  - \".inc\"\n  - \".sma\"\n  tm_scope: source.pawn\n  ace_mode: text\n  language_id: 271\nPep8:\n  type: programming\n  color: \"#C76F5B\"\n  extensions:\n  - \".pep\"\n  ace_mode: text\n  tm_scope: source.pep8\n  language_id: 840372442\nPerl:\n  type: programming\n  tm_scope: source.perl\n  ace_mode: perl\n  codemirror_mode: perl\n  codemirror_mime_type: text/x-perl\n  color: \"#0298c3\"\n  extensions:\n  - \".pl\"\n  - \".al\"\n  - \".cgi\"\n  - \".fcgi\"\n  - \".perl\"\n  - \".ph\"\n  - \".plx\"\n  - \".pm\"\n  - \".psgi\"\n  - \".t\"\n  filenames:\n  - \".latexmkrc\"\n  - Makefile.PL\n  - Rexfile\n  - ack\n  - cpanfile\n  - latexmkrc\n  interpreters:\n  - cperl\n  - perl\n  aliases:\n  - cperl\n  language_id: 282\nPic:\n  type: markup\n  group: Roff\n  tm_scope: source.pic\n  extensions:\n  - \".pic\"\n  - \".chem\"\n  aliases:\n  - pikchr\n  ace_mode: text\n  codemirror_mode: troff\n  codemirror_mime_type: text/troff\n  language_id: 425\nPickle:\n  type: data\n  extensions:\n  - \".pkl\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 284\nPicoLisp:\n  type: programming\n  color: \"#6067af\"\n  extensions:\n  - \".l\"\n  interpreters:\n  - picolisp\n  - pil\n  tm_scope: source.lisp\n  ace_mode: lisp\n  language_id: 285\nPigLatin:\n  type: programming\n  color: \"#fcd7de\"\n  extensions:\n  - \".pig\"\n  tm_scope: source.pig_latin\n  ace_mode: text\n  language_id: 286\nPike:\n  type: programming\n  color: \"#005390\"\n  extensions:\n  - \".pike\"\n  - \".pmod\"\n  interpreters:\n  - pike\n  tm_scope: source.pike\n  ace_mode: text\n  language_id: 287\nPip Requirements:\n  type: data\n  color: \"#FFD343\"\n  filenames:\n  - requirements-dev.txt\n  - requirements.txt\n  ace_mode: text\n  tm_scope: source.pip-requirements\n  language_id: 684385621\nPkl:\n  type: programming\n  color: \"#6b9543\"\n  extensions:\n  - \".pkl\"\n  interpreters:\n  - pkl\n  tm_scope: source.pkl\n  ace_mode: text\n  language_id: 288822799\nPlantUML:\n  type: data\n  color: \"#fbbd16\"\n  extensions:\n  - \".puml\"\n  - \".iuml\"\n  - \".plantuml\"\n  tm_scope: source.wsd\n  ace_mode: text\n  language_id: 833504686\nPod:\n  type: prose\n  ace_mode: perl\n  codemirror_mode: perl\n  codemirror_mime_type: text/x-perl\n  wrap: true\n  extensions:\n  - \".pod\"\n  interpreters:\n  - perl\n  tm_scope: none\n  language_id: 288\nPod 6:\n  type: prose\n  ace_mode: perl\n  tm_scope: source.raku\n  wrap: true\n  extensions:\n  - \".pod\"\n  - \".pod6\"\n  interpreters:\n  - perl6\n  language_id: 155357471\nPogoScript:\n  type: programming\n  color: \"#d80074\"\n  extensions:\n  - \".pogo\"\n  tm_scope: source.pogoscript\n  ace_mode: text\n  language_id: 289\nPolar:\n  type: programming\n  color: \"#ae81ff\"\n  extensions:\n  - \".polar\"\n  tm_scope: source.polar\n  ace_mode: text\n  language_id: 839112914\nPony:\n  type: programming\n  extensions:\n  - \".pony\"\n  tm_scope: source.pony\n  ace_mode: text\n  language_id: 290\nPortugol:\n  type: programming\n  color: \"#f8bd00\"\n  extensions:\n  - \".por\"\n  tm_scope: source.portugol\n  ace_mode: text\n  language_id: 832391833\nPostCSS:\n  type: markup\n  color: \"#dc3a0c\"\n  tm_scope: source.postcss\n  group: CSS\n  extensions:\n  - \".pcss\"\n  - \".postcss\"\n  ace_mode: text\n  language_id: 262764437\nPostScript:\n  type: markup\n  color: \"#da291c\"\n  extensions:\n  - \".ps\"\n  - \".eps\"\n  - \".epsi\"\n  - \".pfa\"\n  tm_scope: source.postscript\n  aliases:\n  - postscr\n  ace_mode: text\n  language_id: 291\nPowerBuilder:\n  type: programming\n  color: \"#8f0f8d\"\n  extensions:\n  - \".pbt\"\n  - \".sra\"\n  - \".sru\"\n  - \".srw\"\n  tm_scope: source.powerbuilder\n  ace_mode: text\n  language_id: 292\nPowerShell:\n  type: programming\n  color: \"#012456\"\n  tm_scope: source.powershell\n  ace_mode: powershell\n  codemirror_mode: powershell\n  codemirror_mime_type: application/x-powershell\n  aliases:\n  - posh\n  - pwsh\n  extensions:\n  - \".ps1\"\n  - \".psd1\"\n  - \".psm1\"\n  interpreters:\n  - pwsh\n  language_id: 293\nPraat:\n  type: programming\n  color: \"#c8506d\"\n  tm_scope: source.praat\n  ace_mode: praat\n  extensions:\n  - \".praat\"\n  language_id: 106029007\nPrisma:\n  type: data\n  color: \"#0c344b\"\n  extensions:\n  - \".prisma\"\n  tm_scope: source.prisma\n  ace_mode: text\n  language_id: 499933428\nProcessing:\n  type: programming\n  color: \"#0096D8\"\n  extensions:\n  - \".pde\"\n  tm_scope: source.processing\n  ace_mode: text\n  language_id: 294\nProcfile:\n  type: programming\n  color: \"#3B2F63\"\n  filenames:\n  - Procfile\n  tm_scope: source.procfile\n  ace_mode: batchfile\n  language_id: 305313959\nProguard:\n  type: data\n  extensions:\n  - \".pro\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 716513858\nProlog:\n  type: programming\n  color: \"#74283c\"\n  extensions:\n  - \".pl\"\n  - \".plt\"\n  - \".pro\"\n  - \".prolog\"\n  - \".yap\"\n  interpreters:\n  - swipl\n  - yap\n  tm_scope: source.prolog\n  ace_mode: prolog\n  language_id: 295\nPromela:\n  type: programming\n  color: \"#de0000\"\n  tm_scope: source.promela\n  ace_mode: text\n  extensions:\n  - \".pml\"\n  language_id: 441858312\nPropeller Spin:\n  type: programming\n  color: \"#7fa2a7\"\n  extensions:\n  - \".spin\"\n  tm_scope: source.spin\n  ace_mode: text\n  language_id: 296\nProtocol Buffer:\n  type: data\n  aliases:\n  - proto\n  - protobuf\n  - Protocol Buffers\n  extensions:\n  - \".proto\"\n  tm_scope: source.proto\n  ace_mode: protobuf\n  codemirror_mode: protobuf\n  codemirror_mime_type: text/x-protobuf\n  language_id: 297\nProtocol Buffer Text Format:\n  type: data\n  aliases:\n  - text proto\n  - protobuf text format\n  extensions:\n  - \".textproto\"\n  - \".pbt\"\n  - \".pbtxt\"\n  tm_scope: source.textproto\n  ace_mode: text\n  language_id: 436568854\nPublic Key:\n  type: data\n  extensions:\n  - \".asc\"\n  - \".pub\"\n  tm_scope: none\n  ace_mode: text\n  codemirror_mode: asciiarmor\n  codemirror_mime_type: application/pgp\n  language_id: 298\nPug:\n  type: markup\n  color: \"#a86454\"\n  extensions:\n  - \".jade\"\n  - \".pug\"\n  tm_scope: text.jade\n  ace_mode: jade\n  codemirror_mode: pug\n  codemirror_mime_type: text/x-pug\n  language_id: 179\nPuppet:\n  type: programming\n  color: \"#302B6D\"\n  extensions:\n  - \".pp\"\n  filenames:\n  - Modulefile\n  ace_mode: text\n  codemirror_mode: puppet\n  codemirror_mime_type: text/x-puppet\n  tm_scope: source.puppet\n  language_id: 299\nPure Data:\n  type: data\n  extensions:\n  - \".pd\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 300\nPureBasic:\n  type: programming\n  color: \"#5a6986\"\n  extensions:\n  - \".pb\"\n  - \".pbi\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 301\nPureScript:\n  type: programming\n  color: \"#1D222D\"\n  extensions:\n  - \".purs\"\n  tm_scope: source.purescript\n  ace_mode: haskell\n  codemirror_mode: haskell\n  codemirror_mime_type: text/x-haskell\n  language_id: 302\nPyret:\n  type: programming\n  color: \"#ee1e10\"\n  extensions:\n  - \".arr\"\n  ace_mode: python\n  tm_scope: source.arr\n  language_id: 252961827\nPython:\n  type: programming\n  tm_scope: source.python\n  ace_mode: python\n  codemirror_mode: python\n  codemirror_mime_type: text/x-python\n  color: \"#3572A5\"\n  extensions:\n  - \".py\"\n  - \".cgi\"\n  - \".fcgi\"\n  - \".gyp\"\n  - \".gypi\"\n  - \".lmi\"\n  - \".py3\"\n  - \".pyde\"\n  - \".pyi\"\n  - \".pyp\"\n  - \".pyt\"\n  - \".pyw\"\n  - \".rpy\"\n  - \".spec\"\n  - \".tac\"\n  - \".wsgi\"\n  - \".xpy\"\n  filenames:\n  - \".gclient\"\n  - DEPS\n  - SConscript\n  - SConstruct\n  - wscript\n  interpreters:\n  - python\n  - python2\n  - python3\n  - py\n  - pypy\n  - pypy3\n  aliases:\n  - python3\n  - rusthon\n  language_id: 303\nPython console:\n  type: programming\n  color: \"#3572A5\"\n  group: Python\n  aliases:\n  - pycon\n  tm_scope: text.python.console\n  ace_mode: text\n  language_id: 428\nPython traceback:\n  type: data\n  color: \"#3572A5\"\n  group: Python\n  extensions:\n  - \".pytb\"\n  tm_scope: text.python.traceback\n  ace_mode: text\n  language_id: 304\nQ#:\n  type: programming\n  extensions:\n  - \".qs\"\n  aliases:\n  - qsharp\n  color: \"#fed659\"\n  ace_mode: text\n  tm_scope: source.qsharp\n  language_id: 697448245\nQML:\n  type: programming\n  color: \"#44a51c\"\n  extensions:\n  - \".qml\"\n  - \".qbs\"\n  tm_scope: source.qml\n  ace_mode: text\n  language_id: 305\nQMake:\n  type: programming\n  extensions:\n  - \".pro\"\n  - \".pri\"\n  interpreters:\n  - qmake\n  tm_scope: source.qmake\n  ace_mode: text\n  language_id: 306\nQt Script:\n  type: programming\n  ace_mode: javascript\n  codemirror_mode: javascript\n  codemirror_mime_type: text/javascript\n  extensions:\n  - \".qs\"\n  filenames:\n  - installscript.qs\n  - toolchain_installscript.qs\n  color: \"#00b841\"\n  tm_scope: source.js\n  language_id: 558193693\nQuake:\n  type: programming\n  filenames:\n  - m3makefile\n  - m3overrides\n  color: \"#882233\"\n  ace_mode: text\n  tm_scope: source.quake\n  language_id: 375265331\nR:\n  type: programming\n  color: \"#198CE7\"\n  aliases:\n  - Rscript\n  - splus\n  extensions:\n  - \".r\"\n  - \".rd\"\n  - \".rsx\"\n  filenames:\n  - \".Rprofile\"\n  - expr-dist\n  interpreters:\n  - Rscript\n  tm_scope: source.r\n  ace_mode: r\n  codemirror_mode: r\n  codemirror_mime_type: text/x-rsrc\n  language_id: 307\nRAML:\n  type: markup\n  ace_mode: yaml\n  codemirror_mode: yaml\n  codemirror_mime_type: text/x-yaml\n  tm_scope: source.yaml\n  color: \"#77d9fb\"\n  extensions:\n  - \".raml\"\n  language_id: 308\nRBS:\n  type: data\n  ace_mode: ruby\n  codemirror_mode: ruby\n  codemirror_mime_type: text/x-ruby\n  extensions:\n  - \".rbs\"\n  color: \"#701516\"\n  tm_scope: source.rbs\n  group: Ruby\n  language_id: 899227493\nRDoc:\n  type: prose\n  color: \"#701516\"\n  ace_mode: rdoc\n  wrap: true\n  extensions:\n  - \".rdoc\"\n  tm_scope: text.rdoc\n  language_id: 309\nREALbasic:\n  type: programming\n  extensions:\n  - \".rbbas\"\n  - \".rbfrm\"\n  - \".rbmnu\"\n  - \".rbres\"\n  - \".rbtbar\"\n  - \".rbuistate\"\n  tm_scope: source.vbnet\n  ace_mode: text\n  language_id: 310\nREXX:\n  type: programming\n  color: \"#d90e09\"\n  aliases:\n  - arexx\n  extensions:\n  - \".rexx\"\n  - \".pprx\"\n  - \".rex\"\n  interpreters:\n  - regina\n  - rexx\n  tm_scope: source.rexx\n  ace_mode: text\n  language_id: 311\nRMarkdown:\n  type: prose\n  color: \"#198ce7\"\n  wrap: true\n  ace_mode: markdown\n  codemirror_mode: gfm\n  codemirror_mime_type: text/x-gfm\n  extensions:\n  - \".qmd\"\n  - \".rmd\"\n  tm_scope: text.md\n  language_id: 313\nRON:\n  type: data\n  color: \"#a62c00\"\n  extensions:\n  - \".ron\"\n  ace_mode: rust\n  tm_scope: source.ron\n  language_id: 587855233\nRPC:\n  type: programming\n  aliases:\n  - rpcgen\n  - oncrpc\n  - xdr\n  ace_mode: c_cpp\n  extensions:\n  - \".x\"\n  tm_scope: source.c\n  language_id: 1031374237\nRPGLE:\n  type: programming\n  ace_mode: text\n  color: \"#2BDE21\"\n  aliases:\n  - ile rpg\n  - sqlrpgle\n  extensions:\n  - \".rpgle\"\n  - \".sqlrpgle\"\n  tm_scope: source.rpgle\n  language_id: 609977990\nRPM Spec:\n  type: data\n  tm_scope: source.rpm-spec\n  extensions:\n  - \".spec\"\n  aliases:\n  - specfile\n  ace_mode: text\n  codemirror_mode: rpm\n  codemirror_mime_type: text/x-rpm-spec\n  language_id: 314\nRUNOFF:\n  type: markup\n  color: \"#665a4e\"\n  extensions:\n  - \".rnh\"\n  - \".rno\"\n  wrap: true\n  tm_scope: text.runoff\n  ace_mode: text\n  language_id: 315\nRacket:\n  type: programming\n  color: \"#3c5caa\"\n  extensions:\n  - \".rkt\"\n  - \".rktd\"\n  - \".rktl\"\n  - \".scrbl\"\n  interpreters:\n  - racket\n  tm_scope: source.racket\n  ace_mode: lisp\n  language_id: 316\nRagel:\n  type: programming\n  color: \"#9d5200\"\n  extensions:\n  - \".rl\"\n  aliases:\n  - ragel-rb\n  - ragel-ruby\n  tm_scope: none\n  ace_mode: text\n  language_id: 317\nRaku:\n  type: programming\n  color: \"#0000fb\"\n  extensions:\n  - \".6pl\"\n  - \".6pm\"\n  - \".nqp\"\n  - \".p6\"\n  - \".p6l\"\n  - \".p6m\"\n  - \".pl\"\n  - \".pl6\"\n  - \".pm\"\n  - \".pm6\"\n  - \".raku\"\n  - \".rakumod\"\n  - \".t\"\n  interpreters:\n  - perl6\n  - raku\n  - rakudo\n  aliases:\n  - perl6\n  - perl-6\n  tm_scope: source.raku\n  ace_mode: perl\n  codemirror_mode: perl\n  codemirror_mime_type: text/x-perl\n  language_id: 283\nRascal:\n  type: programming\n  color: \"#fffaa0\"\n  extensions:\n  - \".rsc\"\n  tm_scope: source.rascal\n  ace_mode: text\n  language_id: 173616037\nRaw token data:\n  type: data\n  aliases:\n  - raw\n  extensions:\n  - \".raw\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 318\nReScript:\n  type: programming\n  color: \"#ed5051\"\n  ace_mode: rust\n  codemirror_mode: rust\n  codemirror_mime_type: text/x-rustsrc\n  extensions:\n  - \".res\"\n  interpreters:\n  - ocaml\n  tm_scope: source.rescript\n  language_id: 501875647\nReadline Config:\n  type: data\n  group: INI\n  aliases:\n  - inputrc\n  - readline\n  filenames:\n  - \".inputrc\"\n  - inputrc\n  tm_scope: source.inputrc\n  ace_mode: text\n  language_id: 538732839\nReason:\n  type: programming\n  color: \"#ff5847\"\n  ace_mode: rust\n  codemirror_mode: rust\n  codemirror_mime_type: text/x-rustsrc\n  extensions:\n  - \".re\"\n  - \".rei\"\n  tm_scope: source.reason\n  language_id: 869538413\nReasonLIGO:\n  type: programming\n  color: \"#ff5847\"\n  ace_mode: rust\n  codemirror_mode: rust\n  codemirror_mime_type: text/x-rustsrc\n  group: LigoLANG\n  extensions:\n  - \".religo\"\n  tm_scope: source.religo\n  language_id: 319002153\nRebol:\n  type: programming\n  color: \"#358a5b\"\n  extensions:\n  - \".reb\"\n  - \".r\"\n  - \".r2\"\n  - \".r3\"\n  - \".rebol\"\n  ace_mode: text\n  tm_scope: source.rebol\n  language_id: 319\nRecord Jar:\n  type: data\n  filenames:\n  - language-subtag-registry.txt\n  tm_scope: source.record-jar\n  codemirror_mode: properties\n  codemirror_mime_type: text/x-properties\n  ace_mode: text\n  color: \"#0673ba\"\n  language_id: 865765202\nRed:\n  type: programming\n  color: \"#f50000\"\n  extensions:\n  - \".red\"\n  - \".reds\"\n  aliases:\n  - red/system\n  tm_scope: source.red\n  ace_mode: text\n  language_id: 320\nRedcode:\n  type: programming\n  extensions:\n  - \".cw\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 321\nRedirect Rules:\n  type: data\n  aliases:\n  - redirects\n  filenames:\n  - _redirects\n  tm_scope: source.redirects\n  ace_mode: text\n  language_id: 1020148948\nRegular Expression:\n  type: data\n  color: \"#009a00\"\n  extensions:\n  - \".regexp\"\n  - \".regex\"\n  aliases:\n  - regexp\n  - regex\n  ace_mode: text\n  tm_scope: source.regexp\n  language_id: 363378884\nRen'Py:\n  type: programming\n  aliases:\n  - renpy\n  color: \"#ff7f7f\"\n  extensions:\n  - \".rpy\"\n  tm_scope: source.renpy\n  ace_mode: python\n  language_id: 322\nRenderScript:\n  type: programming\n  extensions:\n  - \".rs\"\n  - \".rsh\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 323\nRez:\n  type: programming\n  extensions:\n  - \".r\"\n  tm_scope: source.rez\n  ace_mode: text\n  color: \"#FFDAB3\"\n  language_id: 498022874\nRich Text Format:\n  type: markup\n  extensions:\n  - \".rtf\"\n  tm_scope: text.rtf\n  ace_mode: text\n  language_id: 51601661\nRing:\n  type: programming\n  color: \"#2D54CB\"\n  extensions:\n  - \".ring\"\n  tm_scope: source.ring\n  ace_mode: text\n  language_id: 431\nRiot:\n  type: markup\n  color: \"#A71E49\"\n  ace_mode: html\n  extensions:\n  - \".riot\"\n  tm_scope: text.html.riot\n  language_id: 878396783\nRobotFramework:\n  type: programming\n  color: \"#00c0b5\"\n  extensions:\n  - \".robot\"\n  - \".resource\"\n  tm_scope: text.robot\n  ace_mode: text\n  language_id: 324\nRoc:\n  type: programming\n  color: \"#7c38f5\"\n  extensions:\n  - \".roc\"\n  tm_scope: source.roc\n  ace_mode: text\n  language_id: 440182480\nRoff:\n  type: markup\n  color: \"#ecdebe\"\n  extensions:\n  - \".roff\"\n  - \".1\"\n  - \".1in\"\n  - \".1m\"\n  - \".1x\"\n  - \".2\"\n  - \".3\"\n  - \".3in\"\n  - \".3m\"\n  - \".3p\"\n  - \".3pm\"\n  - \".3qt\"\n  - \".3x\"\n  - \".4\"\n  - \".5\"\n  - \".6\"\n  - \".7\"\n  - \".8\"\n  - \".9\"\n  - \".l\"\n  - \".man\"\n  - \".mdoc\"\n  - \".me\"\n  - \".ms\"\n  - \".n\"\n  - \".nr\"\n  - \".rno\"\n  - \".tmac\"\n  filenames:\n  - eqnrc\n  - mmn\n  - mmt\n  - troffrc\n  - troffrc-end\n  tm_scope: text.roff\n  aliases:\n  - groff\n  - man\n  - manpage\n  - man page\n  - man-page\n  - mdoc\n  - nroff\n  - troff\n  wrap: true\n  ace_mode: text\n  codemirror_mode: troff\n  codemirror_mime_type: text/troff\n  language_id: 141\nRoff Manpage:\n  type: markup\n  color: \"#ecdebe\"\n  group: Roff\n  extensions:\n  - \".1\"\n  - \".1in\"\n  - \".1m\"\n  - \".1x\"\n  - \".2\"\n  - \".3\"\n  - \".3in\"\n  - \".3m\"\n  - \".3p\"\n  - \".3pm\"\n  - \".3qt\"\n  - \".3x\"\n  - \".4\"\n  - \".5\"\n  - \".6\"\n  - \".7\"\n  - \".8\"\n  - \".9\"\n  - \".man\"\n  - \".mdoc\"\n  wrap: true\n  tm_scope: text.roff\n  ace_mode: text\n  codemirror_mode: troff\n  codemirror_mime_type: text/troff\n  language_id: 612669833\nRouge:\n  type: programming\n  ace_mode: clojure\n  codemirror_mode: clojure\n  codemirror_mime_type: text/x-clojure\n  color: \"#cc0088\"\n  extensions:\n  - \".rg\"\n  tm_scope: source.clojure\n  language_id: 325\nRouterOS Script:\n  type: programming\n  ace_mode: text\n  extensions:\n  - \".rsc\"\n  interpreters:\n  - RouterOS\n  color: \"#DE3941\"\n  tm_scope: none\n  language_id: 592853203\nRuby:\n  type: programming\n  tm_scope: source.ruby\n  ace_mode: ruby\n  codemirror_mode: ruby\n  codemirror_mime_type: text/x-ruby\n  color: \"#701516\"\n  aliases:\n  - jruby\n  - macruby\n  - rake\n  - rb\n  - rbx\n  extensions:\n  - \".rb\"\n  - \".builder\"\n  - \".eye\"\n  - \".fcgi\"\n  - \".gemspec\"\n  - \".god\"\n  - \".jbuilder\"\n  - \".mspec\"\n  - \".pluginspec\"\n  - \".podspec\"\n  - \".prawn\"\n  - \".rabl\"\n  - \".rake\"\n  - \".rbi\"\n  - \".rbuild\"\n  - \".rbw\"\n  - \".rbx\"\n  - \".ru\"\n  - \".ruby\"\n  - \".spec\"\n  - \".thor\"\n  - \".watchr\"\n  interpreters:\n  - ruby\n  - macruby\n  - rake\n  - jruby\n  - rbx\n  filenames:\n  - \".irbrc\"\n  - \".pryrc\"\n  - \".simplecov\"\n  - Appraisals\n  - Berksfile\n  - Brewfile\n  - Buildfile\n  - Capfile\n  - Dangerfile\n  - Deliverfile\n  - Fastfile\n  - Gemfile\n  - Guardfile\n  - Jarfile\n  - Mavenfile\n  - Podfile\n  - Puppetfile\n  - Rakefile\n  - Snapfile\n  - Steepfile\n  - Thorfile\n  - Vagrantfile\n  - buildfile\n  language_id: 326\nRust:\n  type: programming\n  aliases:\n  - rs\n  color: \"#dea584\"\n  extensions:\n  - \".rs\"\n  - \".rs.in\"\n  tm_scope: source.rust\n  ace_mode: rust\n  codemirror_mode: rust\n  codemirror_mime_type: text/x-rustsrc\n  interpreters:\n  - rust-script\n  language_id: 327\nSAS:\n  type: programming\n  color: \"#B34936\"\n  extensions:\n  - \".sas\"\n  tm_scope: source.sas\n  ace_mode: text\n  codemirror_mode: sas\n  codemirror_mime_type: text/x-sas\n  language_id: 328\nSCSS:\n  type: markup\n  color: \"#c6538c\"\n  tm_scope: source.css.scss\n  ace_mode: scss\n  codemirror_mode: css\n  codemirror_mime_type: text/x-scss\n  extensions:\n  - \".scss\"\n  language_id: 329\nSELinux Policy:\n  aliases:\n  - SELinux Kernel Policy Language\n  - sepolicy\n  type: data\n  tm_scope: source.sepolicy\n  extensions:\n  - \".te\"\n  filenames:\n  - file_contexts\n  - genfs_contexts\n  - initial_sids\n  - port_contexts\n  - security_classes\n  ace_mode: text\n  language_id: 880010326\nSMT:\n  type: programming\n  extensions:\n  - \".smt2\"\n  - \".smt\"\n  interpreters:\n  - boolector\n  - cvc4\n  - mathsat5\n  - opensmt\n  - smtinterpol\n  - smt-rat\n  - stp\n  - verit\n  - yices2\n  - z3\n  tm_scope: source.smt\n  ace_mode: text\n  language_id: 330\nSPARQL:\n  type: data\n  color: \"#0C4597\"\n  tm_scope: source.sparql\n  ace_mode: text\n  codemirror_mode: sparql\n  codemirror_mime_type: application/sparql-query\n  extensions:\n  - \".sparql\"\n  - \".rq\"\n  language_id: 331\nSQF:\n  type: programming\n  color: \"#3F3F3F\"\n  extensions:\n  - \".sqf\"\n  - \".hqf\"\n  tm_scope: source.sqf\n  ace_mode: text\n  language_id: 332\nSQL:\n  type: data\n  color: \"#e38c00\"\n  tm_scope: source.sql\n  ace_mode: sql\n  codemirror_mode: sql\n  codemirror_mime_type: text/x-sql\n  extensions:\n  - \".sql\"\n  - \".cql\"\n  - \".ddl\"\n  - \".inc\"\n  - \".mysql\"\n  - \".prc\"\n  - \".tab\"\n  - \".udf\"\n  - \".viw\"\n  language_id: 333\nSQLPL:\n  type: programming\n  color: \"#e38c00\"\n  ace_mode: sql\n  codemirror_mode: sql\n  codemirror_mime_type: text/x-sql\n  tm_scope: source.sql\n  extensions:\n  - \".sql\"\n  - \".db2\"\n  language_id: 334\nSRecode Template:\n  type: markup\n  color: \"#348a34\"\n  tm_scope: source.lisp\n  ace_mode: lisp\n  codemirror_mode: commonlisp\n  codemirror_mime_type: text/x-common-lisp\n  extensions:\n  - \".srt\"\n  language_id: 335\nSSH Config:\n  type: data\n  group: INI\n  filenames:\n  - ssh-config\n  - ssh_config\n  - sshconfig\n  - sshconfig.snip\n  - sshd-config\n  - sshd_config\n  ace_mode: text\n  tm_scope: source.ssh-config\n  language_id: 554920715\nSTAR:\n  type: data\n  extensions:\n  - \".star\"\n  tm_scope: source.star\n  ace_mode: text\n  language_id: 424510560\nSTL:\n  type: data\n  color: \"#373b5e\"\n  aliases:\n  - ascii stl\n  - stla\n  extensions:\n  - \".stl\"\n  tm_scope: source.stl\n  ace_mode: text\n  language_id: 455361735\nSTON:\n  type: data\n  group: Smalltalk\n  extensions:\n  - \".ston\"\n  tm_scope: source.smalltalk\n  ace_mode: text\n  language_id: 336\nSVG:\n  type: data\n  color: \"#ff9900\"\n  extensions:\n  - \".svg\"\n  tm_scope: text.xml.svg\n  ace_mode: xml\n  codemirror_mode: xml\n  codemirror_mime_type: text/xml\n  language_id: 337\nSWIG:\n  type: programming\n  extensions:\n  - \".i\"\n  tm_scope: source.c++\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-c++src\n  language_id: 1066250075\nSage:\n  type: programming\n  extensions:\n  - \".sage\"\n  - \".sagews\"\n  tm_scope: source.python\n  ace_mode: python\n  codemirror_mode: python\n  codemirror_mime_type: text/x-python\n  language_id: 338\nSaltStack:\n  type: programming\n  color: \"#646464\"\n  aliases:\n  - saltstate\n  - salt\n  extensions:\n  - \".sls\"\n  tm_scope: source.yaml.salt\n  ace_mode: yaml\n  codemirror_mode: yaml\n  codemirror_mime_type: text/x-yaml\n  language_id: 339\nSass:\n  type: markup\n  color: \"#a53b70\"\n  tm_scope: source.sass\n  extensions:\n  - \".sass\"\n  ace_mode: sass\n  codemirror_mode: sass\n  codemirror_mime_type: text/x-sass\n  language_id: 340\nScala:\n  type: programming\n  tm_scope: source.scala\n  ace_mode: scala\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-scala\n  color: \"#c22d40\"\n  extensions:\n  - \".scala\"\n  - \".kojo\"\n  - \".sbt\"\n  - \".sc\"\n  interpreters:\n  - scala\n  language_id: 341\nScaml:\n  type: markup\n  color: \"#bd181a\"\n  extensions:\n  - \".scaml\"\n  tm_scope: source.scaml\n  ace_mode: text\n  language_id: 342\nScenic:\n  type: programming\n  color: \"#fdc700\"\n  extensions:\n  - \".scenic\"\n  tm_scope: source.scenic\n  ace_mode: text\n  interpreters:\n  - scenic\n  language_id: 619814037\nScheme:\n  type: programming\n  color: \"#1e4aec\"\n  extensions:\n  - \".scm\"\n  - \".sch\"\n  - \".sld\"\n  - \".sls\"\n  - \".sps\"\n  - \".ss\"\n  interpreters:\n  - scheme\n  - guile\n  - bigloo\n  - chicken\n  - csi\n  - gosh\n  - r6rs\n  tm_scope: source.scheme\n  ace_mode: scheme\n  codemirror_mode: scheme\n  codemirror_mime_type: text/x-scheme\n  language_id: 343\nScilab:\n  type: programming\n  color: \"#ca0f21\"\n  extensions:\n  - \".sci\"\n  - \".sce\"\n  - \".tst\"\n  tm_scope: source.scilab\n  ace_mode: text\n  language_id: 344\nSelf:\n  type: programming\n  color: \"#0579aa\"\n  extensions:\n  - \".self\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 345\nShaderLab:\n  type: programming\n  color: \"#222c37\"\n  extensions:\n  - \".shader\"\n  ace_mode: text\n  tm_scope: source.shaderlab\n  language_id: 664257356\nShell:\n  type: programming\n  color: \"#89e051\"\n  aliases:\n  - sh\n  - shell-script\n  - bash\n  - zsh\n  - envrc\n  extensions:\n  - \".sh\"\n  - \".bash\"\n  - \".bats\"\n  - \".cgi\"\n  - \".command\"\n  - \".fcgi\"\n  - \".ksh\"\n  - \".sh.in\"\n  - \".tmux\"\n  - \".tool\"\n  - \".trigger\"\n  - \".zsh\"\n  - \".zsh-theme\"\n  filenames:\n  - \".bash_aliases\"\n  - \".bash_functions\"\n  - \".bash_history\"\n  - \".bash_logout\"\n  - \".bash_profile\"\n  - \".bashrc\"\n  - \".cshrc\"\n  - \".envrc\"\n  - \".flaskenv\"\n  - \".kshrc\"\n  - \".login\"\n  - \".profile\"\n  - \".tmux.conf\"\n  - \".zlogin\"\n  - \".zlogout\"\n  - \".zprofile\"\n  - \".zshenv\"\n  - \".zshrc\"\n  - 9fs\n  - PKGBUILD\n  - bash_aliases\n  - bash_logout\n  - bash_profile\n  - bashrc\n  - cshrc\n  - gradlew\n  - kshrc\n  - login\n  - man\n  - profile\n  - tmux.conf\n  - zlogin\n  - zlogout\n  - zprofile\n  - zshenv\n  - zshrc\n  interpreters:\n  - ash\n  - bash\n  - dash\n  - ksh\n  - mksh\n  - pdksh\n  - rc\n  - sh\n  - zsh\n  tm_scope: source.shell\n  ace_mode: sh\n  codemirror_mode: shell\n  codemirror_mime_type: text/x-sh\n  language_id: 346\nShellCheck Config:\n  type: data\n  color: \"#cecfcb\"\n  filenames:\n  - \".shellcheckrc\"\n  aliases:\n  - shellcheckrc\n  tm_scope: source.shellcheckrc\n  ace_mode: ini\n  codemirror_mode: properties\n  codemirror_mime_type: text/x-properties\n  language_id: 687511714\nShellSession:\n  type: programming\n  extensions:\n  - \".sh-session\"\n  aliases:\n  - bash session\n  - console\n  tm_scope: text.shell-session\n  ace_mode: sh\n  codemirror_mode: shell\n  codemirror_mime_type: text/x-sh\n  language_id: 347\nShen:\n  type: programming\n  color: \"#120F14\"\n  extensions:\n  - \".shen\"\n  tm_scope: source.shen\n  ace_mode: text\n  language_id: 348\nSieve:\n  type: programming\n  tm_scope: source.sieve\n  ace_mode: text\n  extensions:\n  - \".sieve\"\n  codemirror_mode: sieve\n  codemirror_mime_type: application/sieve\n  language_id: 208976687\nSimple File Verification:\n  type: data\n  group: Checksums\n  color: \"#C9BFED\"\n  extensions:\n  - \".sfv\"\n  aliases:\n  - sfv\n  tm_scope: source.sfv\n  ace_mode: ini\n  codemirror_mode: properties\n  codemirror_mime_type: text/x-properties\n  language_id: 735623761\nSingularity:\n  type: programming\n  color: \"#64E6AD\"\n  tm_scope: source.singularity\n  filenames:\n  - Singularity\n  ace_mode: text\n  language_id: 987024632\nSlash:\n  type: programming\n  color: \"#007eff\"\n  extensions:\n  - \".sl\"\n  tm_scope: text.html.slash\n  ace_mode: text\n  language_id: 349\nSlice:\n  type: programming\n  color: \"#003fa2\"\n  tm_scope: source.ice\n  ace_mode: text\n  extensions:\n  - \".ice\"\n  language_id: 894641667\nSlim:\n  type: markup\n  color: \"#2b2b2b\"\n  extensions:\n  - \".slim\"\n  tm_scope: text.slim\n  ace_mode: text\n  codemirror_mode: slim\n  codemirror_mime_type: text/x-slim\n  language_id: 350\nSlint:\n  type: markup\n  color: \"#2379F4\"\n  extensions:\n  - \".slint\"\n  tm_scope: source.slint\n  ace_mode: text\n  language_id: 119900149\nSmPL:\n  type: programming\n  extensions:\n  - \".cocci\"\n  aliases:\n  - coccinelle\n  ace_mode: text\n  tm_scope: source.smpl\n  color: \"#c94949\"\n  language_id: 164123055\nSmali:\n  type: programming\n  extensions:\n  - \".smali\"\n  ace_mode: text\n  tm_scope: source.smali\n  language_id: 351\nSmalltalk:\n  type: programming\n  color: \"#596706\"\n  extensions:\n  - \".st\"\n  - \".cs\"\n  aliases:\n  - squeak\n  tm_scope: source.smalltalk\n  ace_mode: text\n  codemirror_mode: smalltalk\n  codemirror_mime_type: text/x-stsrc\n  language_id: 352\nSmarty:\n  type: programming\n  color: \"#f0c040\"\n  extensions:\n  - \".tpl\"\n  ace_mode: smarty\n  codemirror_mode: smarty\n  codemirror_mime_type: text/x-smarty\n  tm_scope: text.html.smarty\n  language_id: 353\nSmithy:\n  type: programming\n  ace_mode: text\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csrc\n  tm_scope: source.smithy\n  color: \"#c44536\"\n  extensions:\n  - \".smithy\"\n  language_id: 1027892786\nSnakemake:\n  type: programming\n  group: Python\n  tm_scope: source.python\n  ace_mode: python\n  codemirror_mode: python\n  codemirror_mime_type: text/x-python\n  color: \"#419179\"\n  extensions:\n  - \".smk\"\n  - \".snakefile\"\n  filenames:\n  - Snakefile\n  aliases:\n  - snakefile\n  language_id: 151241392\nSolidity:\n  type: programming\n  color: \"#AA6746\"\n  ace_mode: text\n  tm_scope: source.solidity\n  extensions:\n  - \".sol\"\n  language_id: 237469032\nSoong:\n  type: data\n  tm_scope: source.bp\n  ace_mode: text\n  filenames:\n  - Android.bp\n  language_id: 222900098\nSourcePawn:\n  type: programming\n  color: \"#f69e1d\"\n  aliases:\n  - sourcemod\n  extensions:\n  - \".sp\"\n  - \".inc\"\n  tm_scope: source.sourcepawn\n  ace_mode: text\n  language_id: 354\nSpline Font Database:\n  type: data\n  extensions:\n  - \".sfd\"\n  tm_scope: text.sfd\n  ace_mode: yaml\n  language_id: 767169629\nSquirrel:\n  type: programming\n  color: \"#800000\"\n  extensions:\n  - \".nut\"\n  tm_scope: source.nut\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-c++src\n  language_id: 355\nStan:\n  type: programming\n  color: \"#b2011d\"\n  extensions:\n  - \".stan\"\n  ace_mode: text\n  tm_scope: source.stan\n  language_id: 356\nStandard ML:\n  type: programming\n  color: \"#dc566d\"\n  aliases:\n  - sml\n  extensions:\n  - \".ml\"\n  - \".fun\"\n  - \".sig\"\n  - \".sml\"\n  tm_scope: source.ml\n  ace_mode: text\n  codemirror_mode: mllike\n  codemirror_mime_type: text/x-ocaml\n  language_id: 357\nStarlark:\n  type: programming\n  tm_scope: source.python\n  ace_mode: python\n  codemirror_mode: python\n  codemirror_mime_type: text/x-python\n  color: \"#76d275\"\n  extensions:\n  - \".bzl\"\n  - \".star\"\n  filenames:\n  - BUCK\n  - BUILD\n  - BUILD.bazel\n  - MODULE.bazel\n  - Tiltfile\n  - WORKSPACE\n  - WORKSPACE.bazel\n  aliases:\n  - bazel\n  - bzl\n  language_id: 960266174\nStata:\n  type: programming\n  color: \"#1a5f91\"\n  extensions:\n  - \".do\"\n  - \".ado\"\n  - \".doh\"\n  - \".ihlp\"\n  - \".mata\"\n  - \".matah\"\n  - \".sthlp\"\n  tm_scope: source.stata\n  ace_mode: text\n  language_id: 358\nStringTemplate:\n  type: markup\n  color: \"#3fb34f\"\n  extensions:\n  - \".st\"\n  tm_scope: source.string-template\n  ace_mode: html\n  codemirror_mode: htmlmixed\n  codemirror_mime_type: text/html\n  language_id: 89855901\nStylus:\n  type: markup\n  color: \"#ff6347\"\n  extensions:\n  - \".styl\"\n  tm_scope: source.stylus\n  ace_mode: stylus\n  language_id: 359\nSubRip Text:\n  type: data\n  color: \"#9e0101\"\n  extensions:\n  - \".srt\"\n  ace_mode: text\n  tm_scope: text.srt\n  language_id: 360\nSugarSS:\n  type: markup\n  color: \"#2fcc9f\"\n  tm_scope: source.css.postcss.sugarss\n  extensions:\n  - \".sss\"\n  ace_mode: text\n  language_id: 826404698\nSuperCollider:\n  type: programming\n  color: \"#46390b\"\n  extensions:\n  - \".sc\"\n  - \".scd\"\n  interpreters:\n  - sclang\n  - scsynth\n  tm_scope: source.supercollider\n  ace_mode: text\n  language_id: 361\nSvelte:\n  type: markup\n  color: \"#ff3e00\"\n  tm_scope: source.svelte\n  ace_mode: html\n  codemirror_mode: htmlmixed\n  codemirror_mime_type: text/html\n  extensions:\n  - \".svelte\"\n  language_id: 928734530\nSway:\n  type: programming\n  color: \"#00F58C\"\n  extensions:\n  - \".sw\"\n  tm_scope: source.sway\n  ace_mode: rust\n  codemirror_mode: rust\n  codemirror_mime_type: text/x-rustsrc\n  language_id: 271471144\nSweave:\n  type: prose\n  color: \"#198ce7\"\n  extensions:\n  - \".rnw\"\n  tm_scope: text.tex.latex.sweave\n  ace_mode: tex\n  language_id: 558779190\nSwift:\n  type: programming\n  color: \"#F05138\"\n  extensions:\n  - \".swift\"\n  tm_scope: source.swift\n  ace_mode: text\n  codemirror_mode: swift\n  codemirror_mime_type: text/x-swift\n  language_id: 362\nSystemVerilog:\n  type: programming\n  color: \"#DAE1C2\"\n  extensions:\n  - \".sv\"\n  - \".svh\"\n  - \".vh\"\n  tm_scope: source.systemverilog\n  ace_mode: verilog\n  codemirror_mode: verilog\n  codemirror_mime_type: text/x-systemverilog\n  language_id: 363\nTI Program:\n  type: programming\n  ace_mode: text\n  color: \"#A0AA87\"\n  extensions:\n  - \".8xp\"\n  - \".8xp.txt\"\n  language_id: 422\n  tm_scope: source.8xp\nTL-Verilog:\n  type: programming\n  extensions:\n  - \".tlv\"\n  tm_scope: source.tlverilog\n  ace_mode: verilog\n  color: \"#C40023\"\n  language_id: 118656070\nTLA:\n  type: programming\n  color: \"#4b0079\"\n  extensions:\n  - \".tla\"\n  tm_scope: source.tla\n  ace_mode: text\n  language_id: 364\nTOML:\n  type: data\n  color: \"#9c4221\"\n  extensions:\n  - \".toml\"\n  filenames:\n  - Cargo.lock\n  - Cargo.toml.orig\n  - Gopkg.lock\n  - Pipfile\n  - pdm.lock\n  - poetry.lock\n  - uv.lock\n  tm_scope: source.toml\n  ace_mode: toml\n  codemirror_mode: toml\n  codemirror_mime_type: text/x-toml\n  language_id: 365\nTSQL:\n  type: programming\n  color: \"#e38c00\"\n  extensions:\n  - \".sql\"\n  ace_mode: sql\n  tm_scope: source.tsql\n  language_id: 918334941\nTSV:\n  type: data\n  color: \"#237346\"\n  ace_mode: text\n  tm_scope: source.generic-db\n  extensions:\n  - \".tsv\"\n  - \".vcf\"\n  aliases:\n  - tab-seperated values\n  language_id: 1035892117\nTSX:\n  type: programming\n  color: \"#3178c6\"\n  group: TypeScript\n  extensions:\n  - \".tsx\"\n  tm_scope: source.tsx\n  ace_mode: javascript\n  codemirror_mode: jsx\n  codemirror_mime_type: text/jsx\n  language_id: 94901924\nTXL:\n  type: programming\n  color: \"#0178b8\"\n  extensions:\n  - \".txl\"\n  tm_scope: source.txl\n  ace_mode: text\n  language_id: 366\nTalon:\n  type: programming\n  ace_mode: text\n  color: \"#333333\"\n  extensions:\n  - \".talon\"\n  tm_scope: source.talon\n  language_id: 959889508\nTcl:\n  type: programming\n  color: \"#e4cc98\"\n  extensions:\n  - \".tcl\"\n  - \".adp\"\n  - \".sdc\"\n  - \".tcl.in\"\n  - \".tm\"\n  - \".xdc\"\n  aliases:\n  - sdc\n  - xdc\n  filenames:\n  - owh\n  - starfield\n  interpreters:\n  - tclsh\n  - wish\n  tm_scope: source.tcl\n  ace_mode: tcl\n  codemirror_mode: tcl\n  codemirror_mime_type: text/x-tcl\n  language_id: 367\nTcsh:\n  type: programming\n  group: Shell\n  extensions:\n  - \".tcsh\"\n  - \".csh\"\n  interpreters:\n  - tcsh\n  - csh\n  tm_scope: source.shell\n  ace_mode: sh\n  codemirror_mode: shell\n  codemirror_mime_type: text/x-sh\n  language_id: 368\nTeX:\n  type: markup\n  color: \"#3D6117\"\n  ace_mode: tex\n  codemirror_mode: stex\n  codemirror_mime_type: text/x-stex\n  tm_scope: text.tex.latex\n  wrap: true\n  aliases:\n  - latex\n  extensions:\n  - \".tex\"\n  - \".aux\"\n  - \".bbx\"\n  - \".cbx\"\n  - \".cls\"\n  - \".dtx\"\n  - \".ins\"\n  - \".lbx\"\n  - \".ltx\"\n  - \".mkii\"\n  - \".mkiv\"\n  - \".mkvi\"\n  - \".sty\"\n  - \".toc\"\n  language_id: 369\nTea:\n  type: markup\n  extensions:\n  - \".tea\"\n  tm_scope: source.tea\n  ace_mode: text\n  language_id: 370\nTerra:\n  type: programming\n  extensions:\n  - \".t\"\n  color: \"#00004c\"\n  tm_scope: source.terra\n  ace_mode: lua\n  codemirror_mode: lua\n  codemirror_mime_type: text/x-lua\n  interpreters:\n  - lua\n  language_id: 371\nTerraform Template:\n  type: markup\n  extensions:\n  - \".tftpl\"\n  color: \"#7b42bb\"\n  tm_scope: source.hcl.terraform\n  ace_mode: ruby\n  codemirror_mode: ruby\n  codemirror_mime_type: text/x-ruby\n  group: HCL\n  language_id: 856832701\nTexinfo:\n  type: prose\n  wrap: true\n  extensions:\n  - \".texinfo\"\n  - \".texi\"\n  - \".txi\"\n  ace_mode: text\n  tm_scope: text.texinfo\n  interpreters:\n  - makeinfo\n  language_id: 988020015\nText:\n  type: prose\n  wrap: true\n  aliases:\n  - fundamental\n  - plain text\n  extensions:\n  - \".txt\"\n  - \".fr\"\n  - \".nb\"\n  - \".ncl\"\n  - \".no\"\n  filenames:\n  - CITATION\n  - CITATIONS\n  - COPYING\n  - COPYING.regex\n  - COPYRIGHT.regex\n  - FONTLOG\n  - INSTALL\n  - INSTALL.mysql\n  - LICENSE\n  - LICENSE.mysql\n  - NEWS\n  - README.me\n  - README.mysql\n  - README.nss\n  - click.me\n  - delete.me\n  - keep.me\n  - package.mask\n  - package.use.mask\n  - package.use.stable.mask\n  - read.me\n  - readme.1st\n  - test.me\n  - use.mask\n  - use.stable.mask\n  tm_scope: none\n  ace_mode: text\n  language_id: 372\nTextGrid:\n  type: data\n  color: \"#c8506d\"\n  tm_scope: source.textgrid\n  ace_mode: text\n  extensions:\n  - \".TextGrid\"\n  language_id: 965696054\nTextMate Properties:\n  type: data\n  color: \"#df66e4\"\n  aliases:\n  - tm-properties\n  filenames:\n  - \".tm_properties\"\n  ace_mode: properties\n  codemirror_mode: properties\n  codemirror_mime_type: text/x-properties\n  tm_scope: source.tm-properties\n  language_id: 981795023\nTextile:\n  type: prose\n  color: \"#ffe7ac\"\n  ace_mode: textile\n  codemirror_mode: textile\n  codemirror_mime_type: text/x-textile\n  wrap: true\n  extensions:\n  - \".textile\"\n  tm_scope: none\n  language_id: 373\nThrift:\n  type: programming\n  color: \"#D12127\"\n  tm_scope: source.thrift\n  extensions:\n  - \".thrift\"\n  ace_mode: text\n  language_id: 374\nToit:\n  type: programming\n  color: \"#c2c9fb\"\n  extensions:\n  - \".toit\"\n  tm_scope: source.toit\n  ace_mode: text\n  language_id: 356554395\nTuring:\n  type: programming\n  color: \"#cf142b\"\n  extensions:\n  - \".t\"\n  - \".tu\"\n  tm_scope: source.turing\n  ace_mode: text\n  language_id: 375\nTurtle:\n  type: data\n  extensions:\n  - \".ttl\"\n  tm_scope: source.turtle\n  ace_mode: text\n  codemirror_mode: turtle\n  codemirror_mime_type: text/turtle\n  language_id: 376\nTwig:\n  type: markup\n  color: \"#c1d026\"\n  extensions:\n  - \".twig\"\n  tm_scope: text.html.twig\n  ace_mode: twig\n  codemirror_mode: twig\n  codemirror_mime_type: text/x-twig\n  language_id: 377\nType Language:\n  type: data\n  aliases:\n  - tl\n  extensions:\n  - \".tl\"\n  tm_scope: source.tl\n  ace_mode: text\n  language_id: 632765617\nTypeScript:\n  type: programming\n  color: \"#3178c6\"\n  aliases:\n  - ts\n  interpreters:\n  - deno\n  - ts-node\n  - tsx\n  extensions:\n  - \".ts\"\n  - \".cts\"\n  - \".mts\"\n  tm_scope: source.ts\n  ace_mode: typescript\n  codemirror_mode: javascript\n  codemirror_mime_type: application/typescript\n  language_id: 378\nTypst:\n  type: programming\n  color: \"#239dad\"\n  aliases:\n  - typ\n  extensions:\n  - \".typ\"\n  tm_scope: source.typst\n  ace_mode: text\n  language_id: 704730682\nUnified Parallel C:\n  type: programming\n  color: \"#4e3617\"\n  group: C\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csrc\n  extensions:\n  - \".upc\"\n  tm_scope: source.c\n  language_id: 379\nUnity3D Asset:\n  type: data\n  color: \"#222c37\"\n  ace_mode: yaml\n  codemirror_mode: yaml\n  codemirror_mime_type: text/x-yaml\n  extensions:\n  - \".anim\"\n  - \".asset\"\n  - \".mask\"\n  - \".mat\"\n  - \".meta\"\n  - \".prefab\"\n  - \".unity\"\n  tm_scope: source.yaml\n  language_id: 380\nUnix Assembly:\n  type: programming\n  group: Assembly\n  extensions:\n  - \".s\"\n  - \".ms\"\n  aliases:\n  - gas\n  - gnu asm\n  - unix asm\n  tm_scope: source.x86\n  ace_mode: assembly_x86\n  language_id: 120\nUno:\n  type: programming\n  color: \"#9933cc\"\n  extensions:\n  - \".uno\"\n  ace_mode: csharp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csharp\n  tm_scope: source.cs\n  language_id: 381\nUnrealScript:\n  type: programming\n  color: \"#a54c4d\"\n  extensions:\n  - \".uc\"\n  tm_scope: source.java\n  ace_mode: java\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-java\n  language_id: 382\nUrWeb:\n  type: programming\n  color: \"#ccccee\"\n  aliases:\n  - Ur/Web\n  - Ur\n  extensions:\n  - \".ur\"\n  - \".urs\"\n  tm_scope: source.ur\n  ace_mode: text\n  language_id: 383\nV:\n  type: programming\n  color: \"#4f87c4\"\n  aliases:\n  - vlang\n  extensions:\n  - \".v\"\n  tm_scope: source.v\n  ace_mode: golang\n  codemirror_mode: go\n  codemirror_mime_type: text/x-go\n  language_id: 603371597\nVBA:\n  type: programming\n  color: \"#867db1\"\n  extensions:\n  - \".bas\"\n  - \".cls\"\n  - \".frm\"\n  - \".vba\"\n  tm_scope: source.vba\n  aliases:\n  - visual basic for applications\n  ace_mode: text\n  codemirror_mode: vb\n  codemirror_mime_type: text/x-vb\n  language_id: 399230729\nVBScript:\n  type: programming\n  color: \"#15dcdc\"\n  extensions:\n  - \".vbs\"\n  tm_scope: source.vbnet\n  ace_mode: text\n  codemirror_mode: vbscript\n  codemirror_mime_type: text/vbscript\n  language_id: 408016005\nVCL:\n  type: programming\n  color: \"#148AA8\"\n  extensions:\n  - \".vcl\"\n  tm_scope: source.varnish.vcl\n  ace_mode: text\n  language_id: 384\nVHDL:\n  type: programming\n  color: \"#adb2cb\"\n  extensions:\n  - \".vhdl\"\n  - \".vhd\"\n  - \".vhf\"\n  - \".vhi\"\n  - \".vho\"\n  - \".vhs\"\n  - \".vht\"\n  - \".vhw\"\n  tm_scope: source.vhdl\n  ace_mode: vhdl\n  codemirror_mode: vhdl\n  codemirror_mime_type: text/x-vhdl\n  language_id: 385\nVala:\n  type: programming\n  color: \"#a56de2\"\n  extensions:\n  - \".vala\"\n  - \".vapi\"\n  tm_scope: source.vala\n  ace_mode: vala\n  language_id: 386\nValve Data Format:\n  type: data\n  color: \"#f26025\"\n  aliases:\n  - keyvalues\n  - vdf\n  extensions:\n  - \".vdf\"\n  ace_mode: text\n  tm_scope: source.keyvalues\n  language_id: 544060961\nVelocity Template Language:\n  type: markup\n  color: \"#507cff\"\n  aliases:\n  - vtl\n  - velocity\n  extensions:\n  - \".vtl\"\n  ace_mode: velocity\n  tm_scope: source.velocity\n  codemirror_mode: velocity\n  codemirror_mime_type: text/velocity\n  language_id: 292377326\nVerilog:\n  type: programming\n  color: \"#b2b7f8\"\n  extensions:\n  - \".v\"\n  - \".veo\"\n  tm_scope: source.verilog\n  ace_mode: verilog\n  codemirror_mode: verilog\n  codemirror_mime_type: text/x-verilog\n  language_id: 387\nVim Help File:\n  type: prose\n  color: \"#199f4b\"\n  aliases:\n  - help\n  - vimhelp\n  extensions:\n  - \".txt\"\n  tm_scope: text.vim-help\n  ace_mode: text\n  language_id: 508563686\nVim Script:\n  type: programming\n  color: \"#199f4b\"\n  tm_scope: source.viml\n  aliases:\n  - vim\n  - viml\n  - nvim\n  - vimscript\n  extensions:\n  - \".vim\"\n  - \".vba\"\n  - \".vimrc\"\n  - \".vmb\"\n  filenames:\n  - \".exrc\"\n  - \".gvimrc\"\n  - \".nvimrc\"\n  - \".vimrc\"\n  - _vimrc\n  - gvimrc\n  - nvimrc\n  - vimrc\n  ace_mode: text\n  language_id: 388\nVim Snippet:\n  type: markup\n  color: \"#199f4b\"\n  aliases:\n  - SnipMate\n  - UltiSnip\n  - UltiSnips\n  - NeoSnippet\n  extensions:\n  - \".snip\"\n  - \".snippet\"\n  - \".snippets\"\n  tm_scope: source.vim-snippet\n  ace_mode: text\n  language_id: 81265970\nVisual Basic .NET:\n  type: programming\n  color: \"#945db7\"\n  extensions:\n  - \".vb\"\n  - \".vbhtml\"\n  aliases:\n  - visual basic\n  - vbnet\n  - vb .net\n  - vb.net\n  tm_scope: source.vbnet\n  ace_mode: text\n  codemirror_mode: vb\n  codemirror_mime_type: text/x-vb\n  language_id: 389\nVisual Basic 6.0:\n  type: programming\n  color: \"#2c6353\"\n  extensions:\n  - \".bas\"\n  - \".cls\"\n  - \".ctl\"\n  - \".Dsr\"\n  - \".frm\"\n  tm_scope: source.vba\n  aliases:\n  - vb6\n  - vb 6\n  - visual basic 6\n  - visual basic classic\n  - classic visual basic\n  ace_mode: text\n  codemirror_mode: vb\n  codemirror_mime_type: text/x-vb\n  language_id: 679594952\nVolt:\n  type: programming\n  color: \"#1F1F1F\"\n  extensions:\n  - \".volt\"\n  tm_scope: source.d\n  ace_mode: d\n  codemirror_mode: d\n  codemirror_mime_type: text/x-d\n  language_id: 390\nVue:\n  type: markup\n  color: \"#41b883\"\n  extensions:\n  - \".vue\"\n  tm_scope: text.html.vue\n  ace_mode: html\n  language_id: 391\nVyper:\n  type: programming\n  extensions:\n  - \".vy\"\n  color: \"#2980b9\"\n  ace_mode: text\n  tm_scope: source.vyper\n  language_id: 1055641948\nWDL:\n  aliases:\n  - Workflow Description Language\n  type: programming\n  color: \"#42f1f4\"\n  extensions:\n  - \".wdl\"\n  tm_scope: source.wdl\n  ace_mode: text\n  language_id: 374521672\nWGSL:\n  type: programming\n  color: \"#1a5e9a\"\n  extensions:\n  - \".wgsl\"\n  tm_scope: source.wgsl\n  ace_mode: text\n  language_id: 836605993\nWavefront Material:\n  type: data\n  extensions:\n  - \".mtl\"\n  tm_scope: source.wavefront.mtl\n  ace_mode: text\n  language_id: 392\nWavefront Object:\n  type: data\n  extensions:\n  - \".obj\"\n  tm_scope: source.wavefront.obj\n  ace_mode: text\n  language_id: 393\nWeb Ontology Language:\n  type: data\n  color: \"#5b70bd\"\n  extensions:\n  - \".owl\"\n  tm_scope: text.xml\n  ace_mode: xml\n  language_id: 394\nWebAssembly:\n  type: programming\n  color: \"#04133b\"\n  extensions:\n  - \".wast\"\n  - \".wat\"\n  aliases:\n  - wast\n  - wasm\n  tm_scope: source.webassembly\n  ace_mode: lisp\n  codemirror_mode: commonlisp\n  codemirror_mime_type: text/x-common-lisp\n  language_id: 956556503\nWebAssembly Interface Type:\n  type: data\n  color: \"#6250e7\"\n  extensions:\n  - \".wit\"\n  aliases:\n  - wit\n  ace_mode: text\n  tm_scope: source.wit\n  codemirror_mode: webidl\n  codemirror_mime_type: text/x-webidl\n  language_id: 134534086\nWebIDL:\n  type: programming\n  extensions:\n  - \".webidl\"\n  tm_scope: source.webidl\n  ace_mode: text\n  codemirror_mode: webidl\n  codemirror_mime_type: text/x-webidl\n  language_id: 395\nWebVTT:\n  type: data\n  wrap: true\n  aliases:\n  - vtt\n  extensions:\n  - \".vtt\"\n  tm_scope: text.vtt\n  ace_mode: text\n  language_id: 658679714\nWget Config:\n  type: data\n  group: INI\n  aliases:\n  - wgetrc\n  filenames:\n  - \".wgetrc\"\n  tm_scope: source.wgetrc\n  ace_mode: text\n  language_id: 668457123\nWhiley:\n  type: programming\n  color: \"#d5c397\"\n  extensions:\n  - \".whiley\"\n  tm_scope: source.whiley\n  ace_mode: text\n  language_id: 888779559\nWikitext:\n  type: prose\n  color: \"#fc5757\"\n  wrap: true\n  aliases:\n  - mediawiki\n  - wiki\n  extensions:\n  - \".mediawiki\"\n  - \".wiki\"\n  - \".wikitext\"\n  tm_scope: text.html.mediawiki\n  ace_mode: text\n  language_id: 228\nWin32 Message File:\n  type: data\n  extensions:\n  - \".mc\"\n  tm_scope: source.win32-messages\n  ace_mode: ini\n  codemirror_mode: properties\n  codemirror_mime_type: text/x-properties\n  language_id: 950967261\nWindows Registry Entries:\n  type: data\n  color: \"#52d5ff\"\n  extensions:\n  - \".reg\"\n  tm_scope: source.reg\n  ace_mode: ini\n  codemirror_mode: properties\n  codemirror_mime_type: text/x-properties\n  language_id: 969674868\nWitcher Script:\n  type: programming\n  color: \"#ff0000\"\n  extensions:\n  - \".ws\"\n  ace_mode: text\n  tm_scope: source.witcherscript\n  language_id: 686821385\nWollok:\n  type: programming\n  color: \"#a23738\"\n  extensions:\n  - \".wlk\"\n  ace_mode: text\n  tm_scope: source.wollok\n  language_id: 632745969\nWorld of Warcraft Addon Data:\n  type: data\n  color: \"#f7e43f\"\n  extensions:\n  - \".toc\"\n  tm_scope: source.toc\n  ace_mode: text\n  language_id: 396\nWren:\n  type: programming\n  color: \"#383838\"\n  aliases:\n  - wrenlang\n  extensions:\n  - \".wren\"\n  tm_scope: source.wren\n  ace_mode: text\n  language_id: 713580619\nX BitMap:\n  type: data\n  group: C\n  aliases:\n  - xbm\n  extensions:\n  - \".xbm\"\n  ace_mode: c_cpp\n  tm_scope: source.c\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csrc\n  language_id: 782911107\nX Font Directory Index:\n  type: data\n  filenames:\n  - encodings.dir\n  - fonts.alias\n  - fonts.dir\n  - fonts.scale\n  tm_scope: source.fontdir\n  ace_mode: text\n  language_id: 208700028\nX PixMap:\n  type: data\n  group: C\n  aliases:\n  - xpm\n  extensions:\n  - \".xpm\"\n  - \".pm\"\n  ace_mode: c_cpp\n  tm_scope: source.c\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csrc\n  language_id: 781846279\nX10:\n  type: programming\n  aliases:\n  - xten\n  ace_mode: text\n  extensions:\n  - \".x10\"\n  color: \"#4B6BEF\"\n  tm_scope: source.x10\n  language_id: 397\nXC:\n  type: programming\n  color: \"#99DA07\"\n  extensions:\n  - \".xc\"\n  tm_scope: source.xc\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csrc\n  language_id: 398\nXCompose:\n  type: data\n  filenames:\n  - \".XCompose\"\n  - XCompose\n  - xcompose\n  tm_scope: config.xcompose\n  ace_mode: text\n  language_id: 225167241\nXML:\n  type: data\n  color: \"#0060ac\"\n  tm_scope: text.xml\n  ace_mode: xml\n  codemirror_mode: xml\n  codemirror_mime_type: text/xml\n  aliases:\n  - rss\n  - xsd\n  - wsdl\n  extensions:\n  - \".xml\"\n  - \".adml\"\n  - \".admx\"\n  - \".ant\"\n  - \".axaml\"\n  - \".axml\"\n  - \".builds\"\n  - \".ccproj\"\n  - \".ccxml\"\n  - \".clixml\"\n  - \".cproject\"\n  - \".cscfg\"\n  - \".csdef\"\n  - \".csl\"\n  - \".csproj\"\n  - \".ct\"\n  - \".depproj\"\n  - \".dita\"\n  - \".ditamap\"\n  - \".ditaval\"\n  - \".dll.config\"\n  - \".dotsettings\"\n  - \".filters\"\n  - \".fsproj\"\n  - \".fxml\"\n  - \".glade\"\n  - \".gml\"\n  - \".gmx\"\n  - \".grxml\"\n  - \".gst\"\n  - \".hzp\"\n  - \".iml\"\n  - \".ivy\"\n  - \".jelly\"\n  - \".jsproj\"\n  - \".kml\"\n  - \".launch\"\n  - \".mdpolicy\"\n  - \".mjml\"\n  - \".mm\"\n  - \".mod\"\n  - \".mojo\"\n  - \".mxml\"\n  - \".natvis\"\n  - \".ncl\"\n  - \".ndproj\"\n  - \".nproj\"\n  - \".nuspec\"\n  - \".odd\"\n  - \".osm\"\n  - \".pkgproj\"\n  - \".pluginspec\"\n  - \".proj\"\n  - \".props\"\n  - \".ps1xml\"\n  - \".psc1\"\n  - \".pt\"\n  - \".qhelp\"\n  - \".rdf\"\n  - \".res\"\n  - \".resx\"\n  - \".rs\"\n  - \".rss\"\n  - \".sch\"\n  - \".scxml\"\n  - \".sfproj\"\n  - \".shproj\"\n  - \".srdf\"\n  - \".storyboard\"\n  - \".sublime-snippet\"\n  - \".sw\"\n  - \".targets\"\n  - \".tml\"\n  - \".ts\"\n  - \".tsx\"\n  - \".typ\"\n  - \".ui\"\n  - \".urdf\"\n  - \".ux\"\n  - \".vbproj\"\n  - \".vcxproj\"\n  - \".vsixmanifest\"\n  - \".vssettings\"\n  - \".vstemplate\"\n  - \".vxml\"\n  - \".wixproj\"\n  - \".workflow\"\n  - \".wsdl\"\n  - \".wsf\"\n  - \".wxi\"\n  - \".wxl\"\n  - \".wxs\"\n  - \".x3d\"\n  - \".xacro\"\n  - \".xaml\"\n  - \".xib\"\n  - \".xlf\"\n  - \".xliff\"\n  - \".xmi\"\n  - \".xml.dist\"\n  - \".xmp\"\n  - \".xproj\"\n  - \".xsd\"\n  - \".xspec\"\n  - \".xul\"\n  - \".zcml\"\n  filenames:\n  - \".classpath\"\n  - \".cproject\"\n  - \".project\"\n  - App.config\n  - NuGet.config\n  - Settings.StyleCop\n  - Web.Debug.config\n  - Web.Release.config\n  - Web.config\n  - packages.config\n  language_id: 399\nXML Property List:\n  type: data\n  color: \"#0060ac\"\n  group: XML\n  extensions:\n  - \".plist\"\n  - \".stTheme\"\n  - \".tmCommand\"\n  - \".tmLanguage\"\n  - \".tmPreferences\"\n  - \".tmSnippet\"\n  - \".tmTheme\"\n  tm_scope: text.xml.plist\n  ace_mode: xml\n  codemirror_mode: xml\n  codemirror_mime_type: text/xml\n  language_id: 75622871\nXPages:\n  type: data\n  extensions:\n  - \".xsp-config\"\n  - \".xsp.metadata\"\n  tm_scope: text.xml\n  ace_mode: xml\n  codemirror_mode: xml\n  codemirror_mime_type: text/xml\n  language_id: 400\nXProc:\n  type: programming\n  extensions:\n  - \".xpl\"\n  - \".xproc\"\n  tm_scope: text.xml\n  ace_mode: xml\n  codemirror_mode: xml\n  codemirror_mime_type: text/xml\n  language_id: 401\nXQuery:\n  type: programming\n  color: \"#5232e7\"\n  extensions:\n  - \".xquery\"\n  - \".xq\"\n  - \".xql\"\n  - \".xqm\"\n  - \".xqy\"\n  ace_mode: xquery\n  codemirror_mode: xquery\n  codemirror_mime_type: application/xquery\n  tm_scope: source.xq\n  language_id: 402\nXS:\n  type: programming\n  extensions:\n  - \".xs\"\n  tm_scope: source.c\n  ace_mode: c_cpp\n  codemirror_mode: clike\n  codemirror_mime_type: text/x-csrc\n  language_id: 403\nXSLT:\n  type: programming\n  aliases:\n  - xsl\n  extensions:\n  - \".xslt\"\n  - \".xsl\"\n  tm_scope: text.xml.xsl\n  ace_mode: xml\n  codemirror_mode: xml\n  codemirror_mime_type: text/xml\n  color: \"#EB8CEB\"\n  language_id: 404\nXojo:\n  type: programming\n  color: \"#81bd41\"\n  extensions:\n  - \".xojo_code\"\n  - \".xojo_menu\"\n  - \".xojo_report\"\n  - \".xojo_script\"\n  - \".xojo_toolbar\"\n  - \".xojo_window\"\n  tm_scope: source.xojo\n  ace_mode: text\n  language_id: 405\nXonsh:\n  type: programming\n  color: \"#285EEF\"\n  extensions:\n  - \".xsh\"\n  tm_scope: source.python\n  ace_mode: text\n  codemirror_mode: python\n  codemirror_mime_type: text/x-python\n  language_id: 614078284\nXtend:\n  type: programming\n  color: \"#24255d\"\n  extensions:\n  - \".xtend\"\n  tm_scope: source.xtend\n  ace_mode: text\n  language_id: 406\nYAML:\n  type: data\n  color: \"#cb171e\"\n  tm_scope: source.yaml\n  aliases:\n  - yml\n  extensions:\n  - \".yml\"\n  - \".mir\"\n  - \".reek\"\n  - \".rviz\"\n  - \".sublime-syntax\"\n  - \".syntax\"\n  - \".yaml\"\n  - \".yaml-tmlanguage\"\n  - \".yaml.sed\"\n  - \".yml.mysql\"\n  filenames:\n  - \".clang-format\"\n  - \".clang-tidy\"\n  - \".gemrc\"\n  - CITATION.cff\n  - glide.lock\n  - yarn.lock\n  ace_mode: yaml\n  codemirror_mode: yaml\n  codemirror_mime_type: text/x-yaml\n  language_id: 407\nYANG:\n  type: data\n  extensions:\n  - \".yang\"\n  tm_scope: source.yang\n  ace_mode: text\n  language_id: 408\nYARA:\n  type: programming\n  color: \"#220000\"\n  ace_mode: text\n  extensions:\n  - \".yar\"\n  - \".yara\"\n  tm_scope: source.yara\n  language_id: 805122868\nYASnippet:\n  type: markup\n  aliases:\n  - snippet\n  - yas\n  color: \"#32AB90\"\n  extensions:\n  - \".yasnippet\"\n  tm_scope: source.yasnippet\n  ace_mode: text\n  language_id: 378760102\nYacc:\n  type: programming\n  extensions:\n  - \".y\"\n  - \".yacc\"\n  - \".yy\"\n  tm_scope: source.yacc\n  ace_mode: text\n  color: \"#4B6C4B\"\n  language_id: 409\nYul:\n  type: programming\n  color: \"#794932\"\n  ace_mode: text\n  tm_scope: source.yul\n  extensions:\n  - \".yul\"\n  language_id: 237469033\nZAP:\n  type: programming\n  color: \"#0d665e\"\n  extensions:\n  - \".zap\"\n  - \".xzap\"\n  tm_scope: source.zap\n  ace_mode: text\n  language_id: 952972794\nZIL:\n  type: programming\n  color: \"#dc75e5\"\n  extensions:\n  - \".zil\"\n  - \".mud\"\n  tm_scope: source.zil\n  ace_mode: text\n  language_id: 973483626\nZeek:\n  type: programming\n  aliases:\n  - bro\n  extensions:\n  - \".zeek\"\n  - \".bro\"\n  tm_scope: source.zeek\n  ace_mode: text\n  language_id: 40\nZenScript:\n  type: programming\n  color: \"#00BCD1\"\n  extensions:\n  - \".zs\"\n  tm_scope: source.zenscript\n  ace_mode: text\n  language_id: 494938890\nZephir:\n  type: programming\n  color: \"#118f9e\"\n  extensions:\n  - \".zep\"\n  tm_scope: source.php.zephir\n  ace_mode: php\n  language_id: 410\nZig:\n  type: programming\n  color: \"#ec915c\"\n  extensions:\n  - \".zig\"\n  - \".zig.zon\"\n  tm_scope: source.zig\n  ace_mode: text\n  language_id: 646424281\nZimpl:\n  type: programming\n  color: \"#d67711\"\n  extensions:\n  - \".zimpl\"\n  - \".zmpl\"\n  - \".zpl\"\n  tm_scope: none\n  ace_mode: text\n  language_id: 411\ncURL Config:\n  type: data\n  group: INI\n  aliases:\n  - curlrc\n  filenames:\n  - \".curlrc\"\n  - _curlrc\n  tm_scope: source.curlrc\n  ace_mode: text\n  language_id: 992375436\ncrontab:\n  type: data\n  color: \"#ead7ac\"\n  aliases:\n  - cron\n  - cron table\n  filenames:\n  - crontab\n  tm_scope: text.crontab\n  ace_mode: tcl\n  language_id: 705203557\ndesktop:\n  type: data\n  extensions:\n  - \".desktop\"\n  - \".desktop.in\"\n  - \".service\"\n  tm_scope: source.desktop\n  ace_mode: text\n  language_id: 412\ndircolors:\n  type: data\n  extensions:\n  - \".dircolors\"\n  filenames:\n  - \".dir_colors\"\n  - \".dircolors\"\n  - DIR_COLORS\n  - _dir_colors\n  - _dircolors\n  - dir_colors\n  tm_scope: source.dircolors\n  ace_mode: text\n  language_id: 691605112\neC:\n  type: programming\n  color: \"#913960\"\n  extensions:\n  - \".ec\"\n  - \".eh\"\n  tm_scope: source.c.ec\n  ace_mode: text\n  language_id: 413\nedn:\n  type: data\n  ace_mode: clojure\n  codemirror_mode: clojure\n  codemirror_mime_type: text/x-clojure\n  extensions:\n  - \".edn\"\n  tm_scope: source.clojure\n  language_id: 414\nfish:\n  type: programming\n  color: \"#4aae47\"\n  group: Shell\n  interpreters:\n  - fish\n  extensions:\n  - \".fish\"\n  tm_scope: source.fish\n  ace_mode: text\n  language_id: 415\nhoon:\n  type: programming\n  color: \"#00b171\"\n  tm_scope: source.hoon\n  ace_mode: text\n  extensions:\n  - \".hoon\"\n  language_id: 560883276\niCalendar:\n  type: data\n  color: \"#ec564c\"\n  extensions:\n  - \".ics\"\n  - \".ical\"\n  tm_scope: source.iCalendar\n  aliases:\n  - iCal\n  ace_mode: properties\n  codemirror_mode: properties\n  codemirror_mime_type: text/x-properties\n  language_id: 98384424\njq:\n  color: \"#c7254e\"\n  ace_mode: text\n  type: programming\n  extensions:\n  - \".jq\"\n  interpreters:\n  - gojq\n  - jaq\n  - jq\n  - jqjq\n  - jqq\n  - query-json\n  tm_scope: source.jq\n  language_id: 905371884\nkvlang:\n  type: markup\n  ace_mode: text\n  extensions:\n  - \".kv\"\n  color: \"#1da6e0\"\n  tm_scope: source.python.kivy\n  language_id: 970675279\nmIRC Script:\n  type: programming\n  color: \"#3d57c3\"\n  extensions:\n  - \".mrc\"\n  tm_scope: source.msl\n  ace_mode: text\n  language_id: 517654727\nmcfunction:\n  type: programming\n  color: \"#E22837\"\n  extensions:\n  - \".mcfunction\"\n  tm_scope: source.mcfunction\n  ace_mode: text\n  language_id: 462488745\nmupad:\n  type: programming\n  color: \"#244963\"\n  extensions:\n  - \".mu\"\n  tm_scope: source.mupad\n  ace_mode: text\n  language_id: 416\nnanorc:\n  type: data\n  color: \"#2d004d\"\n  group: INI\n  extensions:\n  - \".nanorc\"\n  filenames:\n  - \".nanorc\"\n  - nanorc\n  tm_scope: source.nanorc\n  ace_mode: text\n  language_id: 775996197\nnesC:\n  type: programming\n  color: \"#94B0C7\"\n  extensions:\n  - \".nc\"\n  ace_mode: text\n  tm_scope: source.nesc\n  language_id: 417\nooc:\n  type: programming\n  color: \"#b0b77e\"\n  extensions:\n  - \".ooc\"\n  tm_scope: source.ooc\n  ace_mode: text\n  language_id: 418\nq:\n  type: programming\n  extensions:\n  - \".q\"\n  tm_scope: source.q\n  ace_mode: text\n  color: \"#0040cd\"\n  language_id: 970539067\nreStructuredText:\n  type: prose\n  color: \"#141414\"\n  wrap: true\n  aliases:\n  - rst\n  extensions:\n  - \".rst\"\n  - \".rest\"\n  - \".rest.txt\"\n  - \".rst.txt\"\n  tm_scope: text.restructuredtext\n  ace_mode: text\n  codemirror_mode: rst\n  codemirror_mime_type: text/x-rst\n  language_id: 419\nrobots.txt:\n  type: data\n  aliases:\n  - robots\n  - robots txt\n  filenames:\n  - robots.txt\n  ace_mode: text\n  tm_scope: text.robots-txt\n  language_id: 674736065\nsed:\n  type: programming\n  color: \"#64b970\"\n  extensions:\n  - \".sed\"\n  interpreters:\n  - gsed\n  - minised\n  - sed\n  - ssed\n  ace_mode: text\n  tm_scope: source.sed\n  language_id: 847830017\ntempl:\n  type: markup\n  color: \"#66D0DD\"\n  extensions:\n  - \".templ\"\n  ace_mode: text\n  tm_scope: source.templ\n  language_id: 795579337\nvCard:\n  type: data\n  color: \"#ee2647\"\n  extensions:\n  - \".vcf\"\n  tm_scope: source.vcard\n  aliases:\n  - virtual contact file\n  - electronic business card\n  ace_mode: properties\n  codemirror_mode: properties\n  codemirror_mime_type: text/x-properties\n  language_id: 851476558\nwisp:\n  type: programming\n  ace_mode: clojure\n  codemirror_mode: clojure\n  codemirror_mime_type: text/x-clojure\n  color: \"#7582D1\"\n  extensions:\n  - \".wisp\"\n  tm_scope: source.clojure\n  language_id: 420\nxBase:\n  type: programming\n  color: \"#403a40\"\n  aliases:\n  - advpl\n  - clipper\n  - foxpro\n  extensions:\n  - \".prg\"\n  - \".ch\"\n  - \".prw\"\n  tm_scope: source.harbour\n  ace_mode: text\n  language_id: 421"
            }
        },
        {
            "file": {
                "File": "SentenceFromParagraphPipe.py",
                "Full Path": "/home/golden/Desktop/brainboost_data/data_tools/brainboost_datatools_subjective_semantizer/com_worktwins_pipe/SentenceFromParagraphPipe.py",
                "Relative Path": "com_worktwins_pipe/SentenceFromParagraphPipe.py",
                "Size": 0,
                "Last Modified": "2024-12-04 16:49:04",
                "Lines": 0,
                "Source_Code": ""
            }
        },
        {
            "file": {
                "File": "SourceCodeExtractorPipe.py",
                "Full Path": "/home/golden/Desktop/brainboost_data/data_tools/brainboost_datatools_subjective_semantizer/com_worktwins_pipe/SourceCodeExtractorPipe.py",
                "Relative Path": "com_worktwins_pipe/SourceCodeExtractorPipe.py",
                "Size": 3211,
                "Last Modified": "2024-12-05 15:04:45",
                "Lines": 86,
                "Source_Code": "import re\nimport hashlib\nfrom collections import defaultdict\nfrom pygments.lexers import guess_lexer, ClassNotFound\nfrom com_worktwins_languages.Language import Language\nfrom com_worktwins_pipe.Pipe import Pipe  # Import the base Pipe class\n\nclass SourceCodeExtractorPipe(Pipe):\n    \"\"\"\n    A Pipe subclass to extract source code snippets from text and determine their programming languages.\n    \"\"\"\n    def run(self, input_data):\n        \"\"\"\n        Extracts source code snippets from raw text.\n\n        Args:\n            input_data (dict): Input JSON containing \"raw_text\".\n\n        Returns:\n            dict: JSON containing a list of extracted code snippets with metadata.\n        \"\"\"\n\n        code_snippets = self.extract_code_snippets_v2(input_data)\n        return {\"code_snippets\": code_snippets}\n\n    @staticmethod\n    def extract_code_snippets_v2(text):\n        \"\"\"\n        Enhanced extraction of code snippets with dynamic fallback based on book context.\n\n        Args:\n            text (str): The raw text extracted from a document.\n\n        Returns:\n            list: A list of dictionaries, each representing a code snippet with metadata.\n        \"\"\"\n        # Load the list of programming languages\n        language_list = Language.load_languages()\n        valid_languages = set(language_list.keys())  # Get all language names\n\n        # Count standalone occurrences of programming languages in the text\n        def count_standalone_occurrences(word, text):\n            pattern = rf'\\b{re.escape(word)}\\b'\n            return len(re.findall(pattern, text, re.IGNORECASE))\n\n        language_occurrences = defaultdict(int)\n        for language in valid_languages:\n            count = count_standalone_occurrences(language, text)\n            if count > 0:\n                language_occurrences[language] += count\n\n        # Determine the most frequent language in the book\n        most_frequent_language = max(language_occurrences, key=language_occurrences.get, default=\"unknown\")\n\n        # Regex to detect multi-line code blocks (at least 2 lines of indented code)\n        code_block_pattern = re.compile(r'((?:^(?: {4}|\\t).+\\n)+)', re.MULTILINE)\n        snippet_list = []\n        language_frequencies = defaultdict(int)\n\n        # Process snippets and detect languages\n        for match in code_block_pattern.finditer(text):\n            code = match.group(0).strip()\n\n            # Attempt to guess the language\n            try:\n                lexer = guess_lexer(code)\n                lang = lexer.name if lexer.name in valid_languages else \"unknown\"\n            except ClassNotFound:\n                lang = \"unknown\"\n\n            # Update language frequencies\n            if lang != \"unknown\":\n                language_frequencies[lang] += 1\n            else:\n                lang = most_frequent_language  # Default to the most frequent language in the book\n\n            # Generate hash and add snippet\n            snippet_list.append({\n                \"id\": hashlib.md5(code.encode(\"utf-8\")).hexdigest(),\n                \"type\": \"source_code\",\n                \"text\": code,\n                \"programming_language\": lang,\n                \"weight\": 0.0\n            })\n\n        return snippet_list\n"
            }
        },
        {
            "file": {
                "File": "WordFrequenciesPipe.py",
                "Full Path": "/home/golden/Desktop/brainboost_data/data_tools/brainboost_datatools_subjective_semantizer/com_worktwins_pipe/WordFrequenciesPipe.py",
                "Relative Path": "com_worktwins_pipe/WordFrequenciesPipe.py",
                "Size": 3559,
                "Last Modified": "2024-12-05 12:50:25",
                "Lines": 93,
                "Source_Code": "import os\nimport pandas as pd\nfrom collections import defaultdict\nfrom wordfreq import word_frequency\nfrom alive_progress import alive_bar\nfrom com_worktwins_pipe.Pipe import Pipe  # Import the base Pipe class\n\nclass WordFrequenciesPipe(Pipe):\n    \"\"\"\n    A Pipe subclass to generate word frequencies and related data from paragraphs.\n    \"\"\"\n    ENGLISH_TOP_PERCENTILE = 0.9  # Top 10% of English frequency\n    BOOK_TOP_PERCENTILE = 0.9  # Top 10% of book frequency\n\n    def run(self, input_data):\n        \"\"\"\n        Generate word frequencies and filter out connector words.\n\n        Args:\n            input_data (dict): Input JSON containing \"paragraphs\".\n\n        Returns:\n            list: JSON-compatible list of words with frequencies.\n        \"\"\"\n        word_frequencies = WordFrequenciesPipe.generate_frequencies(raw_text=input_data)\n\n        return word_frequencies\n\n    def generate_frequencies(raw_text):\n        \"\"\"\n        Generate word frequencies and related data directly from raw text.\n\n        Args:\n            raw_text (str): Raw text extracted from a document.\n\n        Returns:\n            list: Combined frequencies sorted by book_frequency descending and english_frequency ascending.\n        \"\"\"\n        from collections import defaultdict\n        import pandas as pd\n        from wordfreq import word_frequency\n        from alive_progress import alive_bar\n\n        ENGLISH_TOP_PERCENTILE = 0.9  # Top 10% of English frequency\n        BOOK_TOP_PERCENTILE = 0.9  # Top 10% of book frequency\n\n        word_counts = defaultdict(int)\n        word_paragraph_map = defaultdict(set)\n\n        # Split text into paragraphs (based on double newlines)\n        paragraphs = raw_text.split(\"\\n\\n\")\n\n        # Count word occurrences and map them to paragraphs\n        with alive_bar(len(paragraphs), title=\"Processing paragraphs\") as bar:\n            for idx, para in enumerate(paragraphs):\n                para = para.strip()\n                if not para:\n                    continue\n\n                words = [word.lower() for word in para.split() if word.isalnum()]\n                for word in words:\n                    word_counts[word] += 1\n                    word_paragraph_map[word].add(idx)\n                bar()\n\n        # Create a DataFrame for book word frequencies\n        book_freq_df = pd.DataFrame(\n            [(word, count, list(word_paragraph_map[word])) for word, count in word_counts.items()],\n            columns=[\"word\", \"book_frequency\", \"paragraphs\"],\n        )\n\n        # Add English language frequencies\n        book_freq_df[\"english_frequency\"] = book_freq_df[\"word\"].apply(lambda word: word_frequency(word, \"en\"))\n\n        # Exclude connector words based on thresholds\n        english_top_threshold = book_freq_df[\"english_frequency\"].quantile(ENGLISH_TOP_PERCENTILE)\n        book_top_threshold = book_freq_df[\"book_frequency\"].quantile(BOOK_TOP_PERCENTILE)\n\n        excluded_words = book_freq_df[\n            (book_freq_df[\"english_frequency\"] >= english_top_threshold) &\n            (book_freq_df[\"book_frequency\"] >= book_top_threshold)\n        ]\n\n        # Filter out excluded words\n        book_freq_df = book_freq_df[~book_freq_df[\"word\"].isin(excluded_words[\"word\"])]\n\n        # Sorting\n        combined_freq_df = book_freq_df.sort_values(by=[\"book_frequency\", \"english_frequency\"], ascending=[False, True])\n\n        # Convert to JSON-compatible list\n        combined_frequencies = combined_freq_df[[\"word\", \"book_frequency\", \"english_frequency\"]].to_dict(orient=\"records\")\n\n        return combined_frequencies\n"
            }
        },
        {
            "file": {
                "File": "SemanticTreePipe.py",
                "Full Path": "/home/golden/Desktop/brainboost_data/data_tools/brainboost_datatools_subjective_semantizer/com_worktwins_pipe/SemanticTreePipe.py",
                "Relative Path": "com_worktwins_pipe/SemanticTreePipe.py",
                "Size": 4300,
                "Last Modified": "2024-12-04 22:56:10",
                "Lines": 102,
                "Source_Code": "import os\nfrom hashlib import sha256\nfrom alive_progress import alive_bar\nfrom com_worktwins_pipe.Pipe import Pipe  # Import the base Pipe class\n\nclass SemanticTreePipe(Pipe):\n    \"\"\"\n    A Pipe subclass to generate a semantic tree from normalized paragraphs.\n    \"\"\"\n    def run(self, input_data):\n        \"\"\"\n        Generates a semantic tree from normalized paragraphs based on keywords.\n\n        Args:\n            input_data (dict): Input JSON containing \"normalized_paragraphs\", \"book_frequencies\", and \"english_frequencies\".\n\n        Returns:\n            dict: JSON representing the semantic tree.\n        \"\"\"\n        normalized_paragraphs = input_data.get(\"normalized_paragraphs\", [])\n        book_freq = input_data.get(\"book_frequencies\", [])\n        english_freq = input_data.get(\"english_frequencies\", [])\n\n        # Convert frequencies to dictionaries for quick lookups\n        book_freq_dict = {item[\"word\"]: item[\"book_frequency\"] for item in book_freq}\n        english_freq_dict = {item[\"word\"]: item[\"english_frequency\"] for item in english_freq}\n\n        # Generate the semantic tree\n        semantic_tree = self.generate_semantic_tree(normalized_paragraphs, book_freq_dict, english_freq_dict)\n        return {\"semantic_tree\": semantic_tree}\n\n    def generate_semantic_tree(self, normalized_paragraphs, book_freq_dict, english_freq_dict):\n        \"\"\"\n        Generate a semantic tree from normalized paragraphs based on keywords.\n\n        Args:\n            normalized_paragraphs (list): List of dictionaries with normalized paragraphs.\n            book_freq_dict (dict): Dictionary of book word frequencies.\n            english_freq_dict (dict): Dictionary of English word frequencies.\n\n        Returns:\n            dict: A semantic tree structure with hierarchical relationships between keywords.\n        \"\"\"\n        def generate_hash_from_keywords_with_frequency(keywords):\n            \"\"\"\n            Generate a unique ID for a semantic unit based on keyword frequencies.\n            \"\"\"\n            enriched_keywords = [\n                {\n                    \"word\": keyword,\n                    \"book_freq\": book_freq_dict.get(keyword, 0),\n                    \"english_freq\": english_freq_dict.get(keyword, float('inf')),\n                }\n                for keyword in keywords\n            ]\n\n            # Sort by book frequency (desc), then by English frequency (asc)\n            enriched_keywords.sort(key=lambda x: (-x[\"book_freq\"], x[\"english_freq\"]))\n\n            # Weighted sum to ensure order independence\n            sum_value = sum(\n                (index + 1) * (data[\"book_freq\"] - data[\"english_freq\"])\n                for index, data in enumerate(enriched_keywords)\n            )\n            return sha256(str(sum_value).encode(\"utf-8\")).hexdigest()[:8]\n\n        semantic_tree = {}\n        with alive_bar(len(normalized_paragraphs), title=\"Generating Semantic Tree\") as bar:\n            for para in normalized_paragraphs:\n                keywords = para.get(\"keywords\", [])\n                if not keywords:\n                    bar()\n                    continue\n\n                # Generate a semantic unit ID\n                unit_id = generate_hash_from_keywords_with_frequency(keywords)\n                parent_id = None\n\n                # Add unit to the tree\n                current_node = semantic_tree\n                for word in sorted(keywords):  # Hierarchy by sorted keywords\n                    word_hash = sha256(word.encode(\"utf-8\")).hexdigest()[:8]\n                    if word_hash not in current_node:\n                        current_node[word_hash] = {\n                            \"id\": word_hash,\n                            \"word\": word,\n                            \"children\": {},\n                        }\n                    current_node = current_node[word_hash][\"children\"]\n                    parent_id = word_hash  # Track the last parent node ID\n\n                # Assign paragraph data to the final node\n                current_node[\"unit\"] = {\n                    \"id\": unit_id,\n                    \"parent_id\": parent_id,\n                    \"semantics\": para.get(\"semantics\"),\n                    \"keywords\": keywords,\n                    \"text\": para.get(\"text\"),\n                }\n                bar()\n\n        return semantic_tree\n"
            }
        },
        {
            "file": {
                "File": "SemanticNormalizationPipe.py",
                "Full Path": "/home/golden/Desktop/brainboost_data/data_tools/brainboost_datatools_subjective_semantizer/com_worktwins_pipe/SemanticNormalizationPipe.py",
                "Relative Path": "com_worktwins_pipe/SemanticNormalizationPipe.py",
                "Size": 3988,
                "Last Modified": "2024-12-04 23:03:38",
                "Lines": 97,
                "Source_Code": "import hashlib\nimport json\nimport os\nimport torch\nfrom transformers import pipeline\nfrom alive_progress import alive_bar\nfrom com_worktwins_pipe.Pipe import Pipe  # Import the base Pipe class\n\nclass SemanticNormalizationPipe(Pipe):\n    \"\"\"\n    A Pipe subclass to normalize the semantics of enriched paragraphs using BART.\n    \"\"\"\n    def run(self, input_data):\n        \"\"\"\n        Normalizes the semantics of enriched paragraphs.\n\n        Args:\n            input_data (dict): Input JSON containing \"enriched_paragraphs\".\n\n        Returns:\n            dict: JSON containing normalized paragraphs with a \"semantics\" field.\n        \"\"\"\n        enriched_paragraphs = input_data.get(\"enriched_paragraphs\", [])\n\n        if not enriched_paragraphs:\n            raise ValueError(\"Input data must contain 'enriched_paragraphs'.\")\n\n        # Perform semantic normalization\n        normalized_paragraphs = self.extract_semantics(enriched_paragraphs)\n        return {\"normalized_paragraphs\": normalized_paragraphs}\n\n    def extract_semantics(self, enriched_paragraphs):\n        \"\"\"\n        Normalize the knowledge of the book semantically using BART, outputting to a 'semantics' field.\n\n        Args:\n            enriched_paragraphs (list): List of enriched paragraphs to normalize.\n\n        Returns:\n            list: Normalized paragraphs with a 'semantics' field added.\n        \"\"\"\n        # Use GPU if available\n        device = 0 if torch.cuda.is_available() else -1\n        bart_model = pipeline(\"summarization\", model=\"facebook/bart-large-cnn\", device=device)\n\n        normalized_paragraphs = []\n        with alive_bar(len(enriched_paragraphs), title=\"Normalizing Semantics\") as bar:\n            for para in enriched_paragraphs:\n                try:\n                    # Normalize text using BART\n                    semantics = bart_model(para[\"text\"], max_length=130, min_length=30, do_sample=False)[0][\"summary_text\"]\n\n                    # Include semantics field in the paragraph data\n                    normalized_paragraphs.append({\n                        \"id\": para[\"id\"],\n                        \"type\": para[\"type\"],\n                        \"text\": para[\"text\"],  # Original text\n                        \"semantics\": semantics,  # Added field\n                        \"keywords\": para[\"keywords\"],\n                        \"weight\": para[\"weight\"],\n                        \"sentences\": para[\"sentences\"],\n                    })\n                except Exception as e:\n                    print(f\"Error normalizing paragraph {para['id']}: {e}\")\n                finally:\n                    bar()\n\n        return normalized_paragraphs\n\n\n    \n    def generate_semantic_unit_id(self, keywords):\n        \"\"\"\n        Generate a semantic unit ID based on keywords.\n        Keywords are sorted by book frequency (descending) and English frequency (ascending).\n        \"\"\"\n        # Retrieve book and English frequencies\n        book_freq_path = os.path.join(self.output_dir, f\"{self.name}_book_frequencies.json\")\n        with open(book_freq_path, \"r\", encoding=\"utf-8\") as f:\n            book_frequencies = {item[\"word\"]: item[\"book_frequency\"] for item in json.load(f)}\n\n        english_freq_path = os.path.join(self.output_dir, f\"{self.name}_english_frequencies.json\")\n        with open(english_freq_path, \"r\", encoding=\"utf-8\") as f:\n            english_frequencies = {item[\"word\"]: item[\"english_frequency\"] for item in json.load(f)}\n\n        # Sort keywords by book frequency (desc) and English frequency (asc)\n        sorted_keywords = sorted(\n            keywords,\n            key=lambda x: (\n                -book_frequencies.get(x, 0),  # Descending book frequency\n                english_frequencies.get(x, float(\"inf\"))  # Ascending English frequency\n            ),\n        )\n\n        # Generate a hash of the sorted keywords\n        keyword_string = \"|\".join(sorted_keywords)\n        return hashlib.sha256(keyword_string.encode()).hexdigest()[:16]  # Shorten hash for readability"
            }
        },
        {
            "file": {
                "File": "Pipe.py",
                "Full Path": "/home/golden/Desktop/brainboost_data/data_tools/brainboost_datatools_subjective_semantizer/com_worktwins_pipe/Pipe.py",
                "Relative Path": "com_worktwins_pipe/Pipe.py",
                "Size": 1856,
                "Last Modified": "2024-12-05 14:56:10",
                "Lines": 56,
                "Source_Code": "import os\nimport json\n\nclass Pipe:\n    \"\"\"\n    Base class for processing steps (pipes) in the pipeline.\n    \"\"\"\n    def __init__(self, name, output_dir, dependencies=None):\n        self.name = name\n        self.output_dir = output_dir\n        self.dependencies = dependencies or []  # List of dependent pipes\n        self.output_file = os.path.join(output_dir, self.name + '-' + type(self).__name__ + '.json')\n\n    def execute(self, input_data=None):\n        \"\"\"\n        Executes the pipe, ensuring dependencies are resolved first.\n        \"\"\"\n        # Execute dependencies first\n        for dependency in self.dependencies:\n            dependency.execute(input_data)\n\n        # Run the current pipe\n        if not os.path.exists(self.output_file):  # Skip if already executed\n            print(f\"Executing pipe: {self.name}\")\n            output_data = self.run(input_data)\n            self.save_output(output_data)\n        else:\n            print(f\"Skipping pipe {self.name}; output already exists.\")\n        \n        # Load and return the output data\n        return self.load_output()\n\n    def run(self, input_data):\n        \"\"\"\n        Logic for the pipe. Must be implemented by child classes.\n        \"\"\"\n        raise NotImplementedError(\"The run method must be implemented by child classes.\")\n\n    def save_output(self, data):\n        \"\"\"\n        Saves the output data to a JSON file.\n        \"\"\"\n        os.makedirs(self.output_dir, exist_ok=True)\n        with open(self.output_file, \"w\") as f:\n            json.dump(data, f, indent=4)\n\n    def load_output(self):\n        \"\"\"\n        Loads the output data from the JSON file.\n        \"\"\"\n        with open(self.output_file, \"r\") as f:\n            return json.load(f)\n\n    def save_to_txt(self,data, output_path):\n        with open(output_path, \"w\", encoding=\"utf-8\") as f:\n            f.write(data)"
            }
        },
        {
            "file": {
                "File": "ParagraphsPipe.py",
                "Full Path": "/home/golden/Desktop/brainboost_data/data_tools/brainboost_datatools_subjective_semantizer/com_worktwins_pipe/ParagraphsPipe.py",
                "Relative Path": "com_worktwins_pipe/ParagraphsPipe.py",
                "Size": 4395,
                "Last Modified": "2024-12-05 15:12:12",
                "Lines": 115,
                "Source_Code": "import os\nimport re\nfrom hashlib import sha256\nfrom alive_progress import alive_bar\nfrom com_worktwins_pipe.Pipe import Pipe  # Import the base Pipe class\nimport spacy  # For NLP sentence tokenization\n\n# Load spaCy model\nnlp = spacy.load(\"en_core_web_sm\")\n\nclass ParagraphsPipe(Pipe):\n    \"\"\"\n    A Pipe subclass to split raw text into paragraphs, filter out source code blocks,\n    and enrich paragraphs with sentences, keywords, and metadata.\n    \"\"\"\n    def run(self, input_data):\n        \"\"\"\n        Splits raw text into paragraphs, excludes paragraphs containing source code,\n        and enriches them with metadata.\n\n        Args:\n            input_data (dict): Input JSON containing \"raw_text\" and \"book_frequencies\".\n\n        Returns:\n            dict: JSON with a list of enriched paragraphs.\n        \"\"\"\n        raw_text = input_data\n\n        # Split raw text into paragraphs\n        paragraphs = self.split_into_paragraphs(raw_text)\n\n        # Enrich paragraphs with keywords, sentences, and metadata\n        enriched_paragraphs = self.process_paragraphs(paragraphs, book_freq_df)\n\n        return {\"enriched_paragraphs\": enriched_paragraphs}\n\n    @staticmethod\n    def split_into_paragraphs(raw_text):\n        \"\"\"\n        Split raw text into paragraphs based on double newline separation and exclude paragraphs containing source code.\n\n        Args:\n            raw_text (str): The raw text extracted from a document.\n\n        Returns:\n            list: A list of dictionaries, each representing a paragraph with an ID and text.\n        \"\"\"\n        paragraphs = []\n        code_block_pattern = re.compile(r'((?:^(?: {4}|\\t).+\\n)+)', re.MULTILINE)  # Detect multi-line code blocks\n\n        for para in raw_text.split(\"\\n\\n\"):\n            para = para.strip()\n            if para:\n                # Check if the paragraph contains code using the regex\n                if code_block_pattern.search(para):\n                    continue  # Skip paragraphs containing source code\n\n                # Add the paragraph if it's not code\n                paragraph_id = sha256(para.encode()).hexdigest()[:8]\n                paragraphs.append({\"id\": paragraph_id, \"text\": para})\n\n        return paragraphs\n\n    @staticmethod\n    def process_paragraphs(paragraphs, wordfreq):\n        \"\"\"\n        Process paragraphs into sentences and generate enriched data.\n\n        Args:\n            paragraphs (list): List of dictionaries containing paragraph IDs and text.\n            wordfreq (list): List of dictionaries with word frequencies, each containing \"word\", \"book_frequency\", and \"english_frequency\".\n\n        Returns:\n            list: Enriched paragraphs with sentences, keywords, and metadata.\n        \"\"\"\n        # Convert wordfreq JSON array into a dictionary for fast lookups\n        word_freq_dict = {item[\"word\"]: item[\"book_frequency\"] for item in wordfreq}\n\n        enriched_paragraphs = []\n        with alive_bar(len(paragraphs), title=\"Processing paragraphs\") as bar:\n            for para in paragraphs:\n                paragraph_id = para[\"id\"]\n                paragraph_text = para[\"text\"]\n\n                # Tokenize paragraph into sentences\n                doc = nlp(paragraph_text)\n                sentences = []\n                paragraph_keywords = set()\n\n                for sent in doc.sents:\n                    sentence_text = sent.text.strip()\n                    words = [token.text.lower() for token in nlp(sentence_text) if token.is_alpha and not token.is_stop]\n                    keywords = [word for word in words if word in word_freq_dict]\n\n                    sentence_hash = f\"{paragraph_id}_{sha256(sentence_text.encode()).hexdigest()[:8]}\"\n                    sentences.append({\n                        \"id\": sentence_hash,\n                        \"type\": \"sentence\",\n                        \"text\": sentence_text,\n                        \"keywords\": keywords,\n                        \"weight\": 0.0,\n                    })\n                    paragraph_keywords.update(keywords)\n\n                enriched_paragraphs.append({\n                    \"id\": paragraph_id,\n                    \"type\": \"paragraph\",\n                    \"text\": paragraph_text,\n                    \"keywords\": sorted(paragraph_keywords),\n                    \"weight\": 0.0,\n                    \"sentences\": sentences,\n                })\n                bar()\n\n        return enriched_paragraphs\n"
            }
        }
    ],
    "external_libraries": [
        {
            "import_name": "fitz",
            "count": 3
        },
        {
            "import_name": "transformers",
            "count": 6
        },
        {
            "import_name": "json",
            "count": 12
        },
        {
            "import_name": "os",
            "count": 15
        },
        {
            "import_name": "com_worktwins_languages.Language",
            "count": 4
        },
        {
            "import_name": "pandas",
            "count": 6
        },
        {
            "import_name": "collections",
            "count": 7
        },
        {
            "import_name": "hashlib",
            "count": 8
        },
        {
            "import_name": "wordfreq",
            "count": 5
        },
        {
            "import_name": "alive_progress",
            "count": 8
        },
        {
            "import_name": "com_worktwins_data_source.PDFBook",
            "count": 5
        },
        {
            "import_name": "spacy",
            "count": 4
        },
        {
            "import_name": "unicodedata",
            "count": 2
        },
        {
            "import_name": "torch",
            "count": 3
        },
        {
            "import_name": "re",
            "count": 6
        },
        {
            "import_name": "datetime",
            "count": 1
        },
        {
            "import_name": "argparse",
            "count": 1
        },
        {
            "import_name": "shutil",
            "count": 1
        },
        {
            "import_name": "subprocess",
            "count": 2
        },
        {
            "import_name": "requests",
            "count": 2
        },
        {
            "import_name": "bs4",
            "count": 2
        },
        {
            "import_name": "urllib.parse",
            "count": 4
        },
        {
            "import_name": "time",
            "count": 1
        },
        {
            "import_name": "pytest",
            "count": 3
        },
        {
            "import_name": "ast",
            "count": 1
        },
        {
            "import_name": "pygments.lexers",
            "count": 3
        },
        {
            "import_name": "pygments.util",
            "count": 1
        },
        {
            "import_name": "com_worktwins_pipe.SemanticTreePipe",
            "count": 1
        },
        {
            "import_name": "com_worktwins_pipe.SemanticNormalizationPipe",
            "count": 1
        },
        {
            "import_name": "com_worktwins_pipe.SourceCodeExtractorPipe",
            "count": 1
        },
        {
            "import_name": "com_worktwins_pipe.WordFrequenciesPipe",
            "count": 1
        },
        {
            "import_name": "com_worktwins_pipe.ParagraphsPipe",
            "count": 1
        },
        {
            "import_name": "yaml",
            "count": 1
        },
        {
            "import_name": "com_worktwins_pipe.Pipe",
            "count": 5
        }
    ],
    "observations": []
}